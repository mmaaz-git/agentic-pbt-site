Testing to_locale() function:
==================================================
to_locale('GerMAN         ') = 'gerMAN'
to_locale('EnGlish        ') = 'english'
to_locale('FrEnch         ') = 'french'
to_locale('UPPERCASE      ') = 'uppERCASE'
to_locale('MiXeDcAsE      ') = 'mixeDcAsE'
to_locale('lower          ') = 'lower'
to_locale('en             ') = 'en'
to_locale('EN             ') = 'en'
to_locale('fr-FR          ') = 'fr_FR'
to_locale('en-US          ') = 'en_US'
to_locale('EN-US          ') = 'en_US'
to_locale('de-DE-1996     ') = 'de_DE-1996'

==================================================

Expected behavior for non-hyphenated inputs:
The entire string should be lowercase since line 233
computes: lang = language.lower().partition('-')[0]
But line 235 incorrectly uses: language[:3].lower() + language[3:]

This causes inconsistent casing like 'gerMAN' from 'GerMAN'
