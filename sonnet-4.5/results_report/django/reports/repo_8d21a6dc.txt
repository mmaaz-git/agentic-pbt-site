============================================================
Testing GetLanguageInfoListNode.get_language_info()
============================================================

Test 1: Sequence with single-character first element
--------------------------------------------------
Input: ['x', 'Unknown Language']
Type: <class 'list'>
language[0] = 'x' (type: <class 'str'>)
len(language[0]) = 1
Logic: len(language[0]) > 1 is FALSE
Would call: translation.get_language_info(str(['x', 'Unknown Language']))
         = translation.get_language_info("['x', 'Unknown Language']")
ERROR: KeyError: "Unknown language code ['x', 'Unknown Language']."

============================================================
Test 2: Sequence with multi-character first element
--------------------------------------------------
Input: ['en', 'English']
Type: <class 'list'>
language[0] = 'en' (type: <class 'str'>)
len(language[0]) = 2
Logic: len(language[0]) > 1 is TRUE
Would call: translation.get_language_info('en')
SUCCESS: Result = {'bidi': False, 'code': 'en', 'name': 'English', 'name_local': 'English', 'name_translated': 'English'}

============================================================
Test 3: String language code
--------------------------------------------------
Input: 'en'
Type: <class 'str'>
language[0] = 'e' (type: <class 'str'>)
len(language[0]) = 1
Logic: len(language[0]) > 1 is FALSE
Would call: translation.get_language_info(str('en'))
         = translation.get_language_info('en')
SUCCESS: Result = {'bidi': False, 'code': 'en', 'name': 'English', 'name_local': 'English', 'name_translated': 'English'}

============================================================
ANALYSIS
============================================================

The bug occurs because the code uses len(language[0]) > 1 to distinguish
between strings and sequences. This fails for sequences with single-character
first elements:

- For ['x', 'Unknown']: language[0] = 'x', len('x') = 1, so it calls
  translation.get_language_info(str(['x', 'Unknown'])) which is
  translation.get_language_info("['x', 'Unknown']") - INVALID!

- For ['en', 'English']: language[0] = 'en', len('en') = 2, so it calls
  translation.get_language_info('en') - CORRECT!

- For 'en': language[0] = 'e', len('e') = 1, so it calls
  translation.get_language_info(str('en')) which is
  translation.get_language_info('en') - WORKS BY COINCIDENCE!

The fix is to use isinstance(language, str) to properly check the type.

