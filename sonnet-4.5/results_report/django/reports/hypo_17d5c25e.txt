============================= test session starts ==============================
platform linux -- Python 3.13.2, pytest-8.4.1, pluggy-1.5.0 -- /home/npc/miniconda/bin/python3
cachedir: .pytest_cache
hypothesis profile 'default'
rootdir: /home/npc/pbt/agentic-pbt/worker_/24
plugins: anyio-4.9.0, hypothesis-6.139.1, asyncio-1.2.0, langsmith-0.4.29
asyncio: mode=Mode.STRICT, debug=False, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 2 items

hypo.py::test_lpad_with_empty_fill_text_violates_length FAILED           [ 50%]
hypo.py::test_rpad_with_empty_fill_text_violates_length FAILED           [100%]

=================================== FAILURES ===================================
________________ test_lpad_with_empty_fill_text_violates_length ________________

    @given(st.text(min_size=0, max_size=50), st.integers(min_value=0, max_value=100))
>   @example(text="hello", length=10)
                   ^^^

hypo.py:6: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py:1613: in _raise_to_user
    raise the_error_hypothesis_found
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

text = 'hello', length = 10

    @given(st.text(min_size=0, max_size=50), st.integers(min_value=0, max_value=100))
    @example(text="hello", length=10)
    def test_lpad_with_empty_fill_text_violates_length(text, length):
        fill_text = ""
        result = _sqlite_lpad(text, length, fill_text)
    
        if result is not None:
>           assert len(result) == length, (
                f"lpad with empty fill_text should still return exact length. "
                f"Expected length {length}, got {len(result)}: {result!r}"
            )
E           AssertionError: lpad with empty fill_text should still return exact length. Expected length 10, got 5: 'hello'
E           assert 5 == 10
E            +  where 5 = len('hello')
E           Falsifying explicit example: test_lpad_with_empty_fill_text_violates_length(
E               text='hello',
E               length=10,
E           )

hypo.py:12: AssertionError
________________ test_rpad_with_empty_fill_text_violates_length ________________

    @given(st.text(min_size=0, max_size=50), st.integers(min_value=0, max_value=100))
>   @example(text="hello", length=10)
                   ^^^

hypo.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py:1613: in _raise_to_user
    raise the_error_hypothesis_found
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

text = 'hello', length = 10

    @given(st.text(min_size=0, max_size=50), st.integers(min_value=0, max_value=100))
    @example(text="hello", length=10)
    def test_rpad_with_empty_fill_text_violates_length(text, length):
        fill_text = ""
        result = _sqlite_rpad(text, length, fill_text)
    
        if result is not None:
>           assert len(result) == length, (
                f"rpad with empty fill_text should still return exact length. "
                f"Expected length {length}, got {len(result)}: {result!r}"
            )
E           AssertionError: rpad with empty fill_text should still return exact length. Expected length 10, got 5: 'hello'
E           assert 5 == 10
E            +  where 5 = len('hello')
E           Falsifying explicit example: test_rpad_with_empty_fill_text_violates_length(
E               text='hello',
E               length=10,
E           )

hypo.py:25: AssertionError
=========================== short test summary info ============================
FAILED hypo.py::test_lpad_with_empty_fill_text_violates_length - AssertionErr...
FAILED hypo.py::test_rpad_with_empty_fill_text_violates_length - AssertionErr...
============================== 2 failed in 0.70s ===============================
