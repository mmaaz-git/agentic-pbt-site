Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/55/hypo.py", line 12, in test_variance_no_crash
    var = b.var(ddof=ddof).compute()
  File "/home/npc/miniconda/lib/python3.13/site-packages/dask/base.py", line 373, in compute
    (result,) = compute(self, traverse=False, **kwargs)
                ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/dask/base.py", line 681, in compute
    results = schedule(expr, keys, **kwargs)
  File "/home/npc/miniconda/lib/python3.13/site-packages/dask/bag/core.py", line 2519, in empty_safe_aggregate
    return empty_safe_apply(func, parts2, is_last)
  File "/home/npc/miniconda/lib/python3.13/site-packages/dask/bag/core.py", line 2510, in empty_safe_apply
    return func(part)
  File "/home/npc/miniconda/lib/python3.13/site-packages/dask/bag/chunk.py", line 36, in var_aggregate
    return result * n / (n - ddof)
           ~~~~~~~~~~~^~~~~~~~~~~~
ZeroDivisionError: float division by zero

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/55/hypo.py", line 17, in <module>
    test_variance_no_crash()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/55/hypo.py", line 8, in test_variance_no_crash
    def test_variance_no_crash(data):
                   ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/55/hypo.py", line 14, in test_variance_no_crash
    assert False, f"var() should not crash with ZeroDivisionError for ddof={ddof}, n={len(data)}"
           ^^^^^
AssertionError: var() should not crash with ZeroDivisionError for ddof=1, n=0
Falsifying example: test_variance_no_crash(
    data=[],  # or any other generated value
)
