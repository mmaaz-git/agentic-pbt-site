Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/15/hypo.py", line 14, in test_abstractmethoderror_error_message_property
    pd_errors.AbstractMethodError(DummyClass(), methodtype=invalid_methodtype)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/pandas/errors/__init__.py", line 297, in __init__
    raise ValueError(
        f"methodtype must be one of {methodtype}, got {types} instead."
    )
ValueError: methodtype must be one of 0, got {'classmethod', 'property', 'staticmethod', 'method'} instead.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/15/hypo.py", line 23, in <module>
    test_abstractmethoderror_error_message_property()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/15/hypo.py", line 6, in test_abstractmethoderror_error_message_property
    def test_abstractmethoderror_error_message_property(invalid_methodtype):
                   ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/15/hypo.py", line 19, in test_abstractmethoderror_error_message_property
    assert f"got {invalid_methodtype}" in error_msg, f"Error should mention invalid input, got: {error_msg}"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: Error should mention invalid input, got: methodtype must be one of 0, got {'classmethod', 'property', 'staticmethod', 'method'} instead.
Falsifying example: test_abstractmethoderror_error_message_property(
    invalid_methodtype='0',  # or any other generated value
)
