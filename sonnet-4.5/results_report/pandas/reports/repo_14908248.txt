Testing inverse relationship violations:

Test 1: Daily (D) vs Business Day (B)
is_subperiod('D', 'B') = False
is_superperiod('B', 'D') = True
These should be equal, but are not! (Expected: both True)

Test 2: Daily (D) vs Custom Business Day (C)
is_subperiod('D', 'C') = False
is_superperiod('C', 'D') = True
These should be equal, but are not! (Expected: both True)

Test 3: Custom Business Day (C) vs Business Day (B)
is_subperiod('C', 'B') = False
is_superperiod('B', 'C') = True
These should be equal, but are not! (Expected: both True)

Additional violations in reverse directions:

Test 4: Business Day (B) vs Daily (D)
is_subperiod('B', 'D') = False
is_superperiod('D', 'B') = True
These should be equal, but are not! (Expected: both False)

Test 5: Business Day (B) vs Custom Business Day (C)
is_subperiod('B', 'C') = False
is_superperiod('C', 'B') = True
These should be equal, but are not! (Expected: both False)

Test 6: Custom Business Day (C) vs Daily (D)
is_subperiod('C', 'D') = False
is_superperiod('D', 'C') = True
These should be equal, but are not! (Expected: both False)

Test 7: Year (Y) vs Year (Y) - self-comparison
is_subperiod('Y', 'Y') = False
is_superperiod('Y', 'Y') = True
These should be equal (both False based on code inspection)

Summary:
The inverse relationship property is violated for multiple frequency pairs.
If is_subperiod(A, B) is True, then is_superperiod(B, A) should also be True.
If is_subperiod(A, B) is False, then is_superperiod(B, A) should also be False.
