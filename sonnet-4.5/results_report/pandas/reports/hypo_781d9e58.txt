Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/17/hypo.py", line 20, in test_abstract_method_error_invalid_methodtype_message
    pandas.errors.AbstractMethodError(DummyClass(), methodtype=invalid_methodtype)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/pandas/errors/__init__.py", line 297, in __init__
    raise ValueError(
        f"methodtype must be one of {methodtype}, got {types} instead."
    )
ValueError: methodtype must be one of 0, got {'staticmethod', 'property', 'method', 'classmethod'} instead.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/17/hypo.py", line 38, in <module>
    test_abstract_method_error_invalid_methodtype_message()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/17/hypo.py", line 8, in test_abstract_method_error_invalid_methodtype_message
    def test_abstract_method_error_invalid_methodtype_message(invalid_methodtype):
                   ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/17/hypo.py", line 34, in test_abstract_method_error_invalid_methodtype_message
    assert idx_valid_set_start < idx_invalid, \
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: Error message structure is wrong: valid types should come before invalid value. Got: methodtype must be one of 0, got {'staticmethod', 'property', 'method', 'classmethod'} instead.
Falsifying example: test_abstract_method_error_invalid_methodtype_message(
    invalid_methodtype='0',  # or any other generated value
)
