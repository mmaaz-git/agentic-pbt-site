Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/28/hypo.py", line 15, in test_pandas_dtype_raises_only_typeerror
    pandas_dtype(d)
    ~~~~~~~~~~~~^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/pandas/core/dtypes/common.py", line 1663, in pandas_dtype
    npdtype = np.dtype(dtype)
  File "/home/npc/miniconda/lib/python3.13/site-packages/numpy/_core/_internal.py", line 66, in _usefields
    names, formats, offsets, titles = _makenames_list(adict, align)
                                      ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/numpy/_core/_internal.py", line 36, in _makenames_list
    raise ValueError("entry not a 2- or 3- tuple")
ValueError: entry not a 2- or 3- tuple

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/28/hypo.py", line 26, in <module>
    test_pandas_dtype_raises_only_typeerror()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/28/hypo.py", line 7, in test_pandas_dtype_raises_only_typeerror
    st.text(min_size=1, max_size=10),
               ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/28/hypo.py", line 19, in test_pandas_dtype_raises_only_typeerror
    pytest.fail(
    ~~~~~~~~~~~^
        f"pandas_dtype raised ValueError instead of TypeError for input {d!r}.\n"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        f"Docstring says it should only raise TypeError.\n"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        f"Error was: {e}"
        ^^^^^^^^^^^^^^^^^
    )
    ^
  File "/home/npc/miniconda/lib/python3.13/site-packages/_pytest/outcomes.py", line 177, in fail
    raise Failed(msg=reason, pytrace=pytrace)
Failed: pandas_dtype raised ValueError instead of TypeError for input {'0': ''}.
Docstring says it should only raise TypeError.
Error was: entry not a 2- or 3- tuple
Falsifying example: test_pandas_dtype_raises_only_typeerror(
    d={'0': ''},
)
Explanation:
    These lines were always and only run by failing examples:
        /home/npc/pbt/agentic-pbt/worker_/28/hypo.py:18
        /home/npc/miniconda/lib/python3.13/site-packages/numpy/_core/_internal.py:35
