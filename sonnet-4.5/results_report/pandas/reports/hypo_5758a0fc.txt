Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/50/hypo.py", line 42, in <module>
    test_abstract_method_error_swapped_values_bug()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/50/hypo.py", line 7, in test_abstract_method_error_swapped_values_bug
    def test_abstract_method_error_swapped_values_bug(invalid_methodtype):
                   ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/50/hypo.py", line 34, in test_abstract_method_error_swapped_values_bug
    assert valid_types_str in first_part or all(t in first_part for t in ["method", "classmethod"]), \
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: Valid types should appear in 'must be one of' clause, but got: methodtype must be one of 0, got {'classmethod', 'method', 'property', 'staticmethod'} instead.
Falsifying example: test_abstract_method_error_swapped_values_bug(
    invalid_methodtype='0',
)
