  + Exception Group Traceback (most recent call last):
  |   File "/home/npc/pbt/agentic-pbt/worker_/10/hypo.py", line 21, in <module>
  |     test_errors_ignore_never_raises_on_version_check()
  |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  |   File "/home/npc/pbt/agentic-pbt/worker_/10/hypo.py", line 10, in test_errors_ignore_never_raises_on_version_check
  |     def test_errors_ignore_never_raises_on_version_check(module_name, min_version):
  |                    ^^^
  |   File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
  |     raise the_error_hypothesis_found
  | ExceptionGroup: Hypothesis found 2 distinct failures. (2 sub-exceptions)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/home/npc/pbt/agentic-pbt/worker_/10/hypo.py", line 11, in test_errors_ignore_never_raises_on_version_check
    |     result = import_optional_dependency(module_name, min_version=min_version, errors='ignore')
    |   File "/home/npc/miniconda/lib/python3.13/site-packages/pandas/compat/_optional.py", line 151, in import_optional_dependency
    |     if version and Version(version) < Version(minimum_version):
    |                                       ~~~~~~~^^^^^^^^^^^^^^^^^
    |   File "/home/npc/miniconda/lib/python3.13/site-packages/pandas/util/version/__init__.py", line 343, in __init__
    |     raise InvalidVersion(f"Invalid version: '{version}'")
    | pandas.util.version.InvalidVersion: Invalid version: ':'
    | Falsifying example: test_errors_ignore_never_raises_on_version_check(
    |     module_name='json',  # or any other generated value
    |     min_version=':',
    | )
    | Explanation:
    |     These lines were always and only run by failing examples:
    |         /home/npc/miniconda/lib/python3.13/site-packages/pandas/util/version/__init__.py:343
    +---------------- 2 ----------------
    | Traceback (most recent call last):
    |   File "/home/npc/pbt/agentic-pbt/worker_/10/hypo.py", line 11, in test_errors_ignore_never_raises_on_version_check
    |     result = import_optional_dependency(module_name, min_version=min_version, errors='ignore')
    |   File "/home/npc/miniconda/lib/python3.13/site-packages/pandas/compat/_optional.py", line 150, in import_optional_dependency
    |     version = get_version(module_to_get)
    |   File "/home/npc/miniconda/lib/python3.13/site-packages/pandas/compat/_optional.py", line 78, in get_version
    |     raise ImportError(f"Can't determine version for {module.__name__}")
    | ImportError: Can't determine version for sys
    | Falsifying example: test_errors_ignore_never_raises_on_version_check(
    |     module_name='sys',
    |     min_version='0',  # or any other generated value
    | )
    | Explanation:
    |     These lines were always and only run by failing examples:
    |         /home/npc/miniconda/lib/python3.13/site-packages/pandas/compat/_optional.py:78
    +------------------------------------
