is_subperiod('D', 'B') = False
is_superperiod('B', 'D') = True

Symmetry violation detected:
is_subperiod('D', 'B') = False
is_superperiod('B', 'D') = True
These should be equal but are not: False != True

Reverse case:
is_subperiod('B', 'D') = False
is_superperiod('D', 'B') = True
These should also be equal: False == True

--- Testing actual resampling capability ---

Daily data:
2025-01-01    0
2025-01-02    1
2025-01-03    2
2025-01-04    3
2025-01-05    4
2025-01-06    5
2025-01-07    6
2025-01-08    7
2025-01-09    8
2025-01-10    9
Freq: D, dtype: int64

Successfully resampled from D to B:
2025-01-01    0.0
2025-01-02    1.0
2025-01-03    3.0
2025-01-06    5.0
2025-01-07    6.0
2025-01-08    7.0
2025-01-09    8.0
2025-01-10    9.0
Freq: B, dtype: float64
✓ Resampling from D to B works

Business day data:
2025-01-01    0
2025-01-02    1
2025-01-03    2
2025-01-06    3
2025-01-07    4
2025-01-08    5
2025-01-09    6
2025-01-10    7
2025-01-13    8
2025-01-14    9
Freq: B, dtype: int64

Successfully resampled from B to D:
2025-01-01    0.0
2025-01-02    1.0
2025-01-03    2.0
2025-01-04    NaN
2025-01-05    NaN
2025-01-06    3.0
2025-01-07    4.0
2025-01-08    5.0
2025-01-09    6.0
2025-01-10    7.0
2025-01-11    NaN
2025-01-12    NaN
2025-01-13    8.0
2025-01-14    9.0
Freq: D, dtype: float64
✓ Resampling from B to D works

--- Conclusion ---
Both D->B and B->D resampling operations work in pandas,
but is_subperiod('D', 'B') incorrectly returns False.
This is a bug in the is_subperiod function.
