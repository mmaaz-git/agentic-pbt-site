Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/0/hypo.py", line 17, in <module>
    test_cap_length_respects_max_len()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/0/hypo.py", line 9, in test_cap_length_respects_max_len
    st.integers(min_value=10, max_value=200))
            ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/0/hypo.py", line 13, in test_cap_length_respects_max_len
    assert len(result) <= max_len, f"cap_length({s!r}, {max_len}) returned {result!r} with length {len(result)} > {max_len}"
           ^^^^^^^^^^^^^^^^^^^^^^
AssertionError: cap_length('00000000000', 10) returned '9c9f57__0000__etc' with length 17 > 10
Falsifying example: test_cap_length_respects_max_len(
    s='00000000000',
    max_len=10,
)
Explanation:
    These lines were always and only run by failing examples:
        /home/npc/miniconda/lib/python3.13/site-packages/Cython/Compiler/PyrexTypes.py:5707
