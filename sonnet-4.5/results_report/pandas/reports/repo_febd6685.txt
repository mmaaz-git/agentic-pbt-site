============================================================
Test Case 1: Single column with empty string
============================================================
Original DataFrame:
  text
0     
Original shape: (1, 1)
Original dtypes: {'text': dtype('O')}

Read back DataFrame (with na_filter=False):
Empty DataFrame
Columns: [text]
Index: []
Read back shape: (0, 1)
Read back dtypes: {'text': dtype('O')}

❌ ERROR: Row lost! Original had 1 rows, read back has 0 rows

============================================================
Test Case 2: Single column with None value
============================================================
Original DataFrame:
    col
0  None
Original shape: (1, 1)

Read back DataFrame:
Empty DataFrame
Columns: [col]
Index: []
Read back shape: (0, 1)

❌ ERROR: Row lost! Original had 1 rows, read back has 0 rows

============================================================
Test Case 3: Multiple columns, all empty/None
============================================================
Original DataFrame:
  col1  col2 col3
0       None     
Original shape: (1, 3)

Read back DataFrame (with na_filter=False):
Empty DataFrame
Columns: [col1, col2, col3]
Index: []
Read back shape: (0, 3)

❌ ERROR: Row lost! Original had 1 rows, read back has 0 rows

============================================================
Test Case 4: Mixed case - one row all empty, one row with data
============================================================
Original DataFrame:
   col1  col2
0         NaN
1  data  42.0
Original shape: (2, 2)

Read back DataFrame (with na_filter=False):
   col1 col2
0           
1  data   42
Read back shape: (2, 2)

✓ Row count preserved

============================================================
Test Case 5: From bug report - data=[(0, 0.0, '')]
============================================================
Original DataFrame:
   int_col  float_col str_col
0        0        0.0        
Original shape: (1, 3)
Original values: [[0, 0.0, '']]

Read back DataFrame:
   int_col  float_col  str_col
0        0          0      NaN
Read back shape: (1, 3)
Read back values: [[0.0, 0.0, nan]]

✓ Row count preserved
❌ ERROR: Empty string converted to NaN
