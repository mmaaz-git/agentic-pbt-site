Running Hypothesis test for deprecate function...
Testing that deprecate rejects docstrings without a blank line after the summary
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/54/hypo.py", line 31, in <module>
    test_deprecate_rejects_malformed_docstrings()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/54/hypo.py", line 7, in test_deprecate_rejects_malformed_docstrings
    st.text(min_size=1),
               ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/54/hypo.py", line 21, in test_deprecate_rejects_malformed_docstrings
    with pytest.raises(AssertionError):
         ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/_pytest/raises.py", line 712, in __exit__
    fail(f"DID NOT RAISE {self.expected_exceptions[0]!r}")
    ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/_pytest/outcomes.py", line 177, in fail
    raise Failed(msg=reason, pytrace=pytrace)
Failed: DID NOT RAISE <class 'AssertionError'>
Falsifying example: test_deprecate_rejects_malformed_docstrings(
    # The test always failed when commented parts were varied together.
    summary='0',  # or any other generated value
    non_empty_after='0',  # or any other generated value
    rest='0',  # or any other generated value
)
