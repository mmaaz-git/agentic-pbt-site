============================= test session starts ==============================
platform linux -- Python 3.13.2, pytest-8.4.1, pluggy-1.5.0 -- /home/npc/miniconda/bin/python3
cachedir: .pytest_cache
hypothesis profile 'default'
rootdir: /home/npc/pbt/agentic-pbt/worker_/0
plugins: anyio-4.9.0, hypothesis-6.139.1, asyncio-1.2.0, langsmith-0.4.29
asyncio: mode=Mode.STRICT, debug=False, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 1 item

hypo.py::test_check_for_default_values_crashes_on_typeerror PASSED       [100%]

============================== 1 passed in 0.38s ===============================
Traceback (most recent call last):
  File "<string>", line 17, in <module>
    test_func()
    ~~~~~~~~~^^
  File "<string>", line 10, in test_func
    def test_func(value):
                   ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
    raise the_error_hypothesis_found
  File "<string>", line 15, in test_func
    _check_for_default_values('test_func', arg_val_dict, compat_args)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/pandas/util/_validators.py", line 70, in _check_for_default_values
    match = v1 == v2
            ^^^^^^^^
  File "<string>", line 7, in __eq__
    raise TypeError('Cannot compare')
TypeError: Cannot compare
Falsifying example: test_func(
    value=0,  # or any other generated value
)
