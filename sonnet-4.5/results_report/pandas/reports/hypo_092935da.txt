Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/3/hypo.py", line 27, in <module>
    test_length_of_indexer_slice_matches_actual_length()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/3/hypo.py", line 7, in test_length_of_indexer_slice_matches_actual_length
    st.integers(min_value=1, max_value=100),
               ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2062, in wrapped_test
    _raise_to_user(errors, state.settings, [], " in explicit examples")
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 1613, in _raise_to_user
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/3/hypo.py", line 21, in test_length_of_indexer_slice_matches_actual_length
    assert calculated_length == actual_length, \
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: length_of_indexer(slice(1, 0, 1), target=1) = -1, but len(target[slice(1, 0, 1)]) = 0
Falsifying explicit example: test_length_of_indexer_slice_matches_actual_length(
    target_len=1,
    step=1,
    start=1,
    stop=0,
)
