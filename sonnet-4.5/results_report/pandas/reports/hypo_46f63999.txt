============================= test session starts ==============================
platform linux -- Python 3.13.2, pytest-8.4.1, pluggy-1.5.0
rootdir: /home/npc/pbt/agentic-pbt/worker_/47
plugins: anyio-4.9.0, hypothesis-6.139.1, asyncio-1.2.0, langsmith-0.4.29
asyncio: mode=Mode.STRICT, debug=False, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collected 1 item

hypo.py F                                                                [100%]

=================================== FAILURES ===================================
_________ test_abstractmethoderror_error_message_shows_correct_values __________
  + Exception Group Traceback (most recent call last):
  |   File "/home/npc/pbt/agentic-pbt/worker_/47/hypo.py", line 7, in test_abstractmethoderror_error_message_shows_correct_values
  |     def test_abstractmethoderror_error_message_shows_correct_values(invalid_methodtype):
  |                    ^^^
  |   File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
  |     raise the_error_hypothesis_found
  | ExceptionGroup: Hypothesis found 2 distinct failures. (2 sub-exceptions)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/home/npc/pbt/agentic-pbt/worker_/47/hypo.py", line 33, in test_abstractmethoderror_error_message_shows_correct_values
    |     assert len(msg_parts) == 2
    | AssertionError: assert 3 == 2
    |  +  where 3 = len(['methodtype must be one of ', ', ', " {'classmethod', 'method', 'staticmethod', 'property'} instead."])
    | Falsifying example: test_abstractmethoderror_error_message_shows_correct_values(
    |     invalid_methodtype='got',
    | )
    +---------------- 2 ----------------
    | Traceback (most recent call last):
    |   File "/home/npc/pbt/agentic-pbt/worker_/47/hypo.py", line 39, in test_abstractmethoderror_error_message_shows_correct_values
    |     assert valid_type in first_part, \
    |         f"Valid type '{valid_type}' should appear in first part (before 'got'), but got: {error_message}"
    | AssertionError: Valid type 'classmethod' should appear in first part (before 'got'), but got: methodtype must be one of 0, got {'classmethod', 'method', 'staticmethod', 'property'} instead.
    | assert 'classmethod' in 'methodtype must be one of 0, '
    | Falsifying example: test_abstractmethoderror_error_message_shows_correct_values(
    |     invalid_methodtype='0',
    | )
    +------------------------------------
============================ Hypothesis Statistics =============================
hypo.py::test_abstractmethoderror_error_message_shows_correct_values:

  - during reuse phase (0.03 seconds):
    - Typical runtimes: ~ 5-20 ms, of which < 1ms in data generation
    - 0 passing examples, 2 failing examples, 0 invalid examples
    - Found 2 distinct errors in this phase

  - Stopped because nothing left to do


=========================== short test summary info ============================
FAILED hypo.py::test_abstractmethoderror_error_message_shows_correct_values
============================== 1 failed in 0.26s ===============================
