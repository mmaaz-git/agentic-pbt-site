============================= test session starts ==============================
platform linux -- Python 3.13.2, pytest-8.4.1, pluggy-1.5.0 -- /home/npc/miniconda/bin/python3
cachedir: .pytest_cache
hypothesis profile 'default'
rootdir: /home/npc/pbt/agentic-pbt/worker_/12
plugins: anyio-4.9.0, hypothesis-6.139.1, asyncio-1.2.0, langsmith-0.4.29
asyncio: mode=Mode.STRICT, debug=False, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 1 item

hypo.py::test_get_root_path_should_not_raise_for_builtin_modules FAILED

=================================== FAILURES ===================================
___________ test_get_root_path_should_not_raise_for_builtin_modules ____________

    @given(st.sampled_from(['sys', 'builtins', 'marshal']))
>   def test_get_root_path_should_not_raise_for_builtin_modules(module_name):
                   ^^^

hypo.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
hypo.py:6: in test_get_root_path_should_not_raise_for_builtin_modules
    result = get_root_path(module_name)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

import_name = 'sys'

    def get_root_path(import_name: str) -> str:
        """Find the root path of a package, or the path that contains a
        module. If it cannot be found, returns the current working
        directory.
    
        Not to be confused with the value returned by :func:`find_package`.
    
        :meta private:
        """
        # Module already imported and has a file attribute. Use that first.
        mod = sys.modules.get(import_name)
    
        if mod is not None and hasattr(mod, "__file__") and mod.__file__ is not None:
            return os.path.dirname(os.path.abspath(mod.__file__))
    
        # Next attempt: check the loader.
        try:
            spec = importlib.util.find_spec(import_name)
    
            if spec is None:
                raise ValueError
        except (ImportError, ValueError):
            loader = None
        else:
            loader = spec.loader
    
        # Loader does not exist or we're referring to an unloaded main
        # module or a main module without path (interactive sessions), go
        # with the current working directory.
        if loader is None:
            return os.getcwd()
    
        if hasattr(loader, "get_filename"):
            filepath = loader.get_filename(import_name)  # pyright: ignore
        else:
            # Fall back to imports.
            __import__(import_name)
            mod = sys.modules[import_name]
            filepath = getattr(mod, "__file__", None)
    
            # If we don't have a file path it might be because it is a
            # namespace package. In this case pick the root path from the
            # first module that is contained in the package.
            if filepath is None:
>               raise RuntimeError(
                    "No root path can be found for the provided module"
                    f" {import_name!r}. This can happen because the module"
                    " came from an import hook that does not provide file"
                    " name information or because it's a namespace package."
                    " In this case the root path needs to be explicitly"
                    " provided."
                )
E               RuntimeError: No root path can be found for the provided module 'sys'. This can happen because the module came from an import hook that does not provide file name information or because it's a namespace package. In this case the root path needs to be explicitly provided.
E               Falsifying example: test_get_root_path_should_not_raise_for_builtin_modules(
E                   module_name='sys',
E               )

/home/npc/miniconda/lib/python3.13/site-packages/flask/helpers.py:614: RuntimeError
=========================== short test summary info ============================
FAILED hypo.py::test_get_root_path_should_not_raise_for_builtin_modules - Run...
!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!
============================== 1 failed in 0.19s ===============================
