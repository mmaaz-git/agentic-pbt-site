============================================================
Testing numpy.ctypeslib.as_ctypes with structured array
============================================================

Array created:
  data: [(1, 1.5) (2, 2.5) (3, 3.5)]
  dtype: [('x', '<i4'), ('y', '<f8')]
  shape: (3,)

Array interface info:
  typestr: |V12
  shape: (3,)

------------------------------------------------------------
Attempting np.ctypeslib.as_ctypes(arr):
------------------------------------------------------------
ERROR - NotImplementedError: Converting dtype('V12') to a ctypes type

------------------------------------------------------------
However, as_ctypes_type CAN handle the dtype directly:
------------------------------------------------------------
  np.ctypeslib.as_ctypes_type(arr.dtype) = <class 'struct'>
  This is a ctypes.Structure with the correct fields

------------------------------------------------------------
The problem: as_ctypes passes typestr instead of dtype
------------------------------------------------------------
  as_ctypes calls: as_ctypes_type(ai['typestr'])
  ai['typestr'] = '|V12' (void type, loses field info)
  Should call: as_ctypes_type(obj.dtype)
  obj.dtype = [('x', '<i4'), ('y', '<f8')] (preserves field info)
