Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/34/hypo.py", line 11, in test_polyval_handles_empty
    result = poly.polyval(x, c)
  File "/home/npc/miniconda/lib/python3.13/site-packages/numpy/polynomial/polynomial.py", line 752, in polyval
    c0 = c[-1] + x * 0
         ~^^^^
IndexError: index -1 is out of bounds for axis 0 with size 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/34/hypo.py", line 20, in <module>
    test_polyval_handles_empty()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/34/hypo.py", line 5, in test_polyval_handles_empty
    st.lists(st.floats(min_value=-50, max_value=50, allow_nan=False, allow_infinity=False),
            ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/34/hypo.py", line 17, in test_polyval_handles_empty
    assert False, f"Should not raise IndexError for x={x}, c={c}"
           ^^^^^
AssertionError: Should not raise IndexError for x=0.0, c=[]
Falsifying example: test_polyval_handles_empty(
    x=0.0,
    c=[],
)
Explanation:
    These lines were always and only run by failing examples:
        /home/npc/pbt/agentic-pbt/worker_/34/hypo.py:14
