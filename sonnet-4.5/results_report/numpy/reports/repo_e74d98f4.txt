=== Test Case 1: Basic Example ===
Input: 'hello\x00' * 2
char.multiply result: np.str_('hellohello')
Expected: 'hello\x00hello\x00'
Match: False
Result length: 10
Expected length: 12

=== Test Case 2: Minimal Case ===
Input: '0\x00' * 1
char.multiply result: np.str_('0')
Expected: '0\x00'
Match: False
Result length: 1
Expected length: 2

=== Test Case 3: Multiple Null Bytes ===
Input: 'abc\x00\x00\x00' * 3
char.multiply result: np.str_('abcabcabc')
Expected: 'abc\x00\x00\x00abc\x00\x00\x00abc\x00\x00\x00'
Match: False
Result length: 9
Expected length: 18

=== Test Case 4: Only Null Bytes ===
Input: '\x00' * 5
char.multiply result: np.str_('')
Expected: '\x00\x00\x00\x00\x00'
Match: False
Result length: 0
Expected length: 5

=== Python Native String Multiplication ===
''hello\x00'' * 3 = 'hello\x00hello\x00hello\x00' (length: 18)
''0\x00'' * 3 = '0\x000\x000\x00' (length: 6)
''abc\x00\x00\x00'' * 3 = 'abc\x00\x00\x00abc\x00\x00\x00abc\x00\x00\x00' (length: 18)
''\x00'' * 3 = '\x00\x00\x00' (length: 3)
