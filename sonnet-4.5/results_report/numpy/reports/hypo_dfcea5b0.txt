============================= test session starts ==============================
platform linux -- Python 3.13.2, pytest-8.4.1, pluggy-1.5.0 -- /home/npc/miniconda/bin/python3
cachedir: .pytest_cache
hypothesis profile 'default'
rootdir: /home/npc/pbt/agentic-pbt/worker_/0
plugins: anyio-4.9.0, hypothesis-6.139.1, asyncio-1.2.0, langsmith-0.4.29
asyncio: mode=Mode.STRICT, debug=False, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 1 item

hypo.py::test_unique_treats_masked_as_equal FAILED                       [100%]

=================================== FAILURES ===================================
______________________ test_unique_treats_masked_as_equal ______________________
hypo.py:7: in test_unique_treats_masked_as_equal
    st.data())
            ^^^
hypo.py:23: in test_unique_treats_masked_as_equal
    assert num_masked <= 1, f"Expected at most 1 masked value, but got {num_masked}. Input: arr={arr}, mask={mask}"
E   AssertionError: Expected at most 1 masked value, but got 2. Input: arr=[32767 32767 32767], mask=[ True False  True]
E   assert np.int64(2) <= 1
E   Falsifying example: test_unique_treats_masked_as_equal(
E       arr=array([32767, 32767, 32767], dtype=int16),
E       data=data(...),
E   )
E   Draw 1: array([ True, False,  True])
E   Explanation:
E       These lines were always and only run by failing examples:
E           /home/npc/miniconda/lib/python3.13/site-packages/numpy/_core/arrayprint.py:1304
E           /home/npc/miniconda/lib/python3.13/site-packages/numpy/_core/arrayprint.py:1305
=========================== short test summary info ============================
FAILED hypo.py::test_unique_treats_masked_as_equal - AssertionError: Expected...
============================== 1 failed in 0.84s ===============================
