/home/npc/miniconda/lib/python3.13/site-packages/numpy/lib/_scimath_impl.py:491: RuntimeWarning: divide by zero encountered in power
  return nx.power(x, p)
/home/npc/miniconda/lib/python3.13/site-packages/numpy/lib/_scimath_impl.py:491: RuntimeWarning: invalid value encountered in power
  return nx.power(x, p)
/home/npc/miniconda/lib/python3.13/site-packages/numpy/lib/_scimath_impl.py:491: RuntimeWarning: overflow encountered in power
  return nx.power(x, p)
Running Hypothesis test for scimath.power...
Testing that scimath.power never returns NaN for valid (non-NaN, non-inf) inputs...

Test failed with assertion error:
  scimath.power(-7.94814457938965e-72, -5) returned (inf+nanj) which contains NaN

This confirms the bug: scimath.power returns NaN for certain valid inputs.

Minimal failing example:
  x = -9.499558537778752e-188
  n = -2
  scimath.power(x, n) = (inf+nanj)
  Contains NaN: True

Expected: A valid complex or real number (likely inf or inf+0j)
Actual: inf+nanj (complex with NaN in imaginary part)
