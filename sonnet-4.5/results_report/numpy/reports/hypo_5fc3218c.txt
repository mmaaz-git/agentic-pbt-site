/home/npc/miniconda/lib/python3.13/site-packages/numpy/f2py/symbolic.py:1514: ExprWarning: fromstring: treating 'ArithOp.DIV' as symbol (original=ArithOp.DIV(-44, 2 * b * z * *2 * *4))
  ewarn(
/home/npc/miniconda/lib/python3.13/site-packages/numpy/f2py/symbolic.py:1514: ExprWarning: fromstring: treating 'ArithOp.DIV' as symbol (original=ArithOp.DIV(-924, 2 * b * z * *2 * *4))
  ewarn(
/home/npc/miniconda/lib/python3.13/site-packages/numpy/f2py/symbolic.py:1514: ExprWarning: fromstring: treating 'ArithOp.DIV' as symbol (original=ArithOp.DIV(-924, 2 * z ** 2 * *2 * *4))
  ewarn(
/home/npc/miniconda/lib/python3.13/site-packages/numpy/f2py/symbolic.py:1514: ExprWarning: fromstring: treating 'ArithOp.DIV' as symbol (original=ArithOp.DIV(-924, 2 * (-44) ** -1 * z ** 2 * (*2) ** 2))
  ewarn(
/home/npc/miniconda/lib/python3.13/site-packages/numpy/f2py/symbolic.py:1514: ExprWarning: fromstring: treating '' as symbol (original=ArithOp.DIV(-924, 2 * (-44) ** -1 * z ** 2 * (*2) ** 2))
  ewarn(
/home/npc/miniconda/lib/python3.13/site-packages/numpy/f2py/symbolic.py:1514: ExprWarning: fromstring: treating 'ArithOp.DIV' as symbol (original=ArithOp.DIV(-44, (-44) ** -1 * z ** 2 * (*2) ** 2))
  ewarn(
/home/npc/miniconda/lib/python3.13/site-packages/numpy/f2py/symbolic.py:1514: ExprWarning: fromstring: treating '' as symbol (original=ArithOp.DIV(-44, (-44) ** -1 * z ** 2 * (*2) ** 2))
  ewarn(
/home/npc/miniconda/lib/python3.13/site-packages/numpy/f2py/symbolic.py:1514: ExprWarning: fromstring: treating 'ArithOp.DIV' as symbol (original=ArithOp.DIV(-1848, (-44) ** -1 * x * z ** 2 * (*2) ** 2))
  ewarn(
/home/npc/miniconda/lib/python3.13/site-packages/numpy/f2py/symbolic.py:1514: ExprWarning: fromstring: treating '' as symbol (original=ArithOp.DIV(-1848, (-44) ** -1 * x * z ** 2 * (*2) ** 2))
  ewarn(
/home/npc/miniconda/lib/python3.13/site-packages/numpy/f2py/symbolic.py:1514: ExprWarning: fromstring: treating '' as symbol (original=c * *4 - 11 * (b * *5) ** -1)
  ewarn(
/home/npc/miniconda/lib/python3.13/site-packages/numpy/f2py/symbolic.py:1514: ExprWarning: fromstring: treating 'ArithOp.DIV' as symbol (original=ArithOp.DIV(a, 42))
  ewarn(
/home/npc/miniconda/lib/python3.13/site-packages/numpy/f2py/symbolic.py:1514: ExprWarning: fromstring: treating 'ArithOp.DIV' as symbol (original=ArithOp.DIV(x, 42))
  ewarn(
/home/npc/miniconda/lib/python3.13/site-packages/numpy/f2py/symbolic.py:1514: ExprWarning: fromstring: treating 'ArithOp.DIV' as symbol (original=ArithOp.DIV(x, b))
  ewarn(
/home/npc/miniconda/lib/python3.13/site-packages/numpy/f2py/symbolic.py:1514: ExprWarning: fromstring: treating 'ArithOp.DIV' as symbol (original=ArithOp.DIV(x, y))
  ewarn(
Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/38/hypo.py", line 41, in <module>
    test_fromstring_tostring_roundtrip()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/38/hypo.py", line 28, in test_fromstring_tostring_roundtrip
    @settings(max_examples=500)
                   ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/38/hypo.py", line 34, in test_fromstring_tostring_roundtrip
    assert e1 == e2, f"Round-trip failed: {expr_str} -> {s} -> {e2.tostring()}"
           ^^^^^^^^
AssertionError: Round-trip failed: (x) / (y) -> ArithOp.DIV(x, y) -> ArithOp.DIV(x, y)
Falsifying example: test_fromstring_tostring_roundtrip(
    expr_str='(x) / (y)',
)
Explanation:
    These lines were always and only run by failing examples:
        /home/npc/pbt/agentic-pbt/worker_/38/hypo.py:19
        /home/npc/pbt/agentic-pbt/worker_/38/hypo.py:20
        /home/npc/pbt/agentic-pbt/worker_/38/hypo.py:21
        /home/npc/pbt/agentic-pbt/worker_/38/hypo.py:35
        /home/npc/miniconda/lib/python3.13/site-packages/numpy/f2py/symbolic.py:209
        (and 18 more with settings.verbosity >= verbose)
