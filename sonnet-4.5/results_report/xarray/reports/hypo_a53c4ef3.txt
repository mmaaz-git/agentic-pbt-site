============================= test session starts ==============================
platform linux -- Python 3.13.2, pytest-8.4.1, pluggy-1.5.0 -- /home/npc/miniconda/bin/python3
cachedir: .pytest_cache
hypothesis profile 'default'
rootdir: /home/npc/pbt/agentic-pbt/worker_/41
plugins: anyio-4.9.0, hypothesis-6.139.1, asyncio-1.2.0, langsmith-0.4.29
asyncio: mode=Mode.STRICT, debug=False, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 1 item

hypo.py::test_deprecate_dims_precedence FAILED                           [100%]

=================================== FAILURES ===================================
________________________ test_deprecate_dims_precedence ________________________

    @given(
>       dims_value=st.text(),
                   ^^^
        dim_value=st.text()
    )

hypo.py:6: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dims_value = '', dim_value = '0'

    @given(
        dims_value=st.text(),
        dim_value=st.text()
    )
    def test_deprecate_dims_precedence(dims_value, dim_value):
        @deprecate_dims
        def func(*, dim=None):
            return dim
    
        result = func(dims=dims_value, dim=dim_value)
    
>       assert result == dim_value, \
            f"Expected dim={dim_value!r} to take precedence, but got {result!r}"
E       AssertionError: Expected dim='0' to take precedence, but got ''
E       assert '' == '0'
E         
E         - 0
E       Falsifying example: test_deprecate_dims_precedence(
E           dims_value='',  # or any other generated value
E           dim_value='0',
E       )
E       Explanation:
E           These lines were always and only run by failing examples:
E               /home/npc/pbt/agentic-pbt/worker_/41/hypo.py:17

hypo.py:16: AssertionError
=============================== warnings summary ===============================
hypo.py: 107 warnings
  /home/npc/pbt/agentic-pbt/worker_/41/hypo.py:14: PendingDeprecationWarning: The `dims` argument has been renamed to `dim`, and will be removed in the future. This renaming is taking place throughout xarray over the next few releases.
    result = func(dims=dims_value, dim=dim_value)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED hypo.py::test_deprecate_dims_precedence - AssertionError: Expected dim...
======================= 1 failed, 107 warnings in 1.32s ========================
