Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/4/hypo.py", line 15, in test_excess_positional_args_should_raise_typeerror
    decorated(x, y, z)
    ~~~~~~~~~^^^^^^^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/xarray/util/deprecation_helpers.py", line 115, in inner
    kwargs.update(zip_args)
    ~~~~~~~~~~~~~^^^^^^^^^^
ValueError: zip() argument 2 is longer than argument 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/4/hypo.py", line 23, in <module>
    test_excess_positional_args_should_raise_typeerror()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/4/hypo.py", line 6, in test_excess_positional_args_should_raise_typeerror
    def test_excess_positional_args_should_raise_typeerror(x, y, z):
                   ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/4/hypo.py", line 20, in test_excess_positional_args_should_raise_typeerror
    assert False, "Raised ValueError instead of TypeError"
           ^^^^^
AssertionError: Raised ValueError instead of TypeError
Falsifying example: test_excess_positional_args_should_raise_typeerror(
    # The test always failed when commented parts were varied together.
    x=0,  # or any other generated value
    y=0,  # or any other generated value
    z=0,  # or any other generated value
)
