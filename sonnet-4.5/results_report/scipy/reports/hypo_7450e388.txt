/home/npc/.local/lib/python3.13/site-packages/scipy/sparse/linalg/_dsolve/linsolve.py:606: SparseEfficiencyWarning: splu converted its input to CSC format
  return splu(A).solve
/home/npc/.local/lib/python3.13/site-packages/scipy/sparse/linalg/_matfuncs.py:76: SparseEfficiencyWarning: spsolve is more efficient when sparse b is in the CSC matrix format
  Ainv = spsolve(A, I)
Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/53/hypo.py", line 18, in <module>
    test_inv_always_returns_sparse_matrix()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/53/hypo.py", line 7, in test_inv_always_returns_sparse_matrix
    @settings(max_examples=20)
                   ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/53/hypo.py", line 13, in test_inv_always_returns_sparse_matrix
    assert sp.issparse(A_inv), f"inv() returned {type(A_inv)} instead of sparse matrix for {n}x{n} input"
           ~~~~~~~~~~~^^^^^^^
AssertionError: inv() returned <class 'numpy.ndarray'> instead of sparse matrix for 1x1 input
Falsifying example: test_inv_always_returns_sparse_matrix(
    n=1,
)
