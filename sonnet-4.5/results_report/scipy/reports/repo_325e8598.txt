M=2:
  min value = -1.38777878078144567553e-17
  has negative values = True
  number of negative values = 2
  negative value indices = [0, 1]
  negative values = ['-1.38777878078144567553e-17', '-1.38777878078144567553e-17']
  endpoints = [-1.38777878078144567553e-17, -1.38777878078144567553e-17]

M=5:
  min value = -1.38777878078144567553e-17
  has negative values = True
  number of negative values = 2
  negative value indices = [0, 4]
  negative values = ['-1.38777878078144567553e-17', '-1.38777878078144567553e-17']
  endpoints = [-1.38777878078144567553e-17, -1.38777878078144567553e-17]

M=10:
  min value = -1.38777878078144567553e-17
  has negative values = True
  number of negative values = 2
  negative value indices = [0, 9]
  negative values = ['-1.38777878078144567553e-17', '-1.38777878078144567553e-17']
  endpoints = [-1.38777878078144567553e-17, -1.38777878078144567553e-17]

M=100:
  min value = -1.38777878078144567553e-17
  has negative values = True
  number of negative values = 2
  negative value indices = [0, 99]
  negative values = ['-1.38777878078144567553e-17', '-1.38777878078144567553e-17']
  endpoints = [-1.38777878078144567553e-17, -1.38777878078144567553e-17]

M=1000:
  min value = -1.38777878078144567553e-17
  has negative values = True
  number of negative values = 2
  negative value indices = [0, 999]
  negative values = ['-1.38777878078144567553e-17', '-1.38777878078144567553e-17']
  endpoints = [-1.38777878078144567553e-17, -1.38777878078144567553e-17]

Mathematical analysis:
Theoretical endpoint value: -1.3877787807814457e-17
This should be exactly 0.0

What the implementation computes at endpoints:
At n=0: 0.42 - 0.50*cos(0) + 0.08*cos(0) = 0.42 + -0.5 + 0.08 = -1.3877787807814457e-17
Due to floating point representation: -1.3877787807814457e-17
