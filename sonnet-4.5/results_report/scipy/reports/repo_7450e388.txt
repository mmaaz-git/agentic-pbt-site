/home/npc/.local/lib/python3.13/site-packages/scipy/sparse/linalg/_dsolve/linsolve.py:606: SparseEfficiencyWarning: splu converted its input to CSC format
  return splu(A).solve
/home/npc/.local/lib/python3.13/site-packages/scipy/sparse/linalg/_matfuncs.py:76: SparseEfficiencyWarning: spsolve is more efficient when sparse b is in the CSC matrix format
  Ainv = spsolve(A, I)
============================================================
Test case 1: 1x1 sparse matrix
============================================================
Input matrix A:
  Type: <class 'scipy.sparse._csr.csr_matrix'>
  Shape: (1, 1)
  Value: [[2.]]
  Is sparse: True

Result of inv(A):
  Type: <class 'numpy.ndarray'>
  Shape: (1,)
  Is sparse: False
  Value: [0.5]

============================================================
Test case 2: 2x2 sparse matrix (for comparison)
============================================================
Input matrix B:
  Type: <class 'scipy.sparse._csr.csr_matrix'>
  Shape: (2, 2)
  Value:
[[2. 0.]
 [0. 3.]]
  Is sparse: True

Result of inv(B):
  Type: <class 'scipy.sparse._csr.csr_matrix'>
  Shape: (2, 2)
  Is sparse: True
  Value:
[[0.5        0.        ]
 [0.         0.33333333]]

============================================================
Test case 3: Direct spsolve call with 1x1 identity
============================================================
Identity matrix I:
  Type: <class 'scipy.sparse._csr.csr_matrix'>
  Shape: (1, 1)
  Value: [[1.]]

Result of spsolve(A, I):
  Type: <class 'numpy.ndarray'>
  Shape: (1,)
  Is sparse: False
  Value: [0.5]

============================================================
EXPECTED BEHAVIOR for 1x1 case:
============================================================
  Type: Should be <class 'scipy.sparse._csr.csr_matrix'>
  Shape: Should be (1, 1)
  Is sparse: Should be True
  Value: Should be [[0.5]] as a sparse matrix
