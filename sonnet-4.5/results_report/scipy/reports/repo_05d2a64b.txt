Testing scipy.stats.quantile with integer p values:
============================================================
Test data x = [1. 2. 3. 4. 5.]

Test 1: stats.quantile(x, 0) with integer 0
----------------------------------------
ValueError: `p` must have real floating dtype.

Test 2: stats.quantile(x, 0.0) with float 0.0
----------------------------------------
Success: 1.0

Test 3: stats.quantile(x, 1) with integer 1
----------------------------------------
ValueError: `p` must have real floating dtype.

Test 4: stats.quantile(x, 1.0) with float 1.0
----------------------------------------
Success: 5.0

Comparison with NumPy functions:
============================================================
np.quantile(x, 0) = 1.0
np.quantile(x, 1) = 5.0
np.percentile(x, 0) = 1.0
np.percentile(x, 100) = 5.0

Conclusion: NumPy accepts integer p values without issue,
while scipy.stats.quantile unnecessarily rejects them.
