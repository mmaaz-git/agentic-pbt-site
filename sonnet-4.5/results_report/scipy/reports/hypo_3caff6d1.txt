Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/56/hypo.py", line 44, in <module>
    test_sign_error_when_no_sign_change()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/56/hypo.py", line 12, in test_sign_error_when_no_sign_change
    a0=st.floats(min_value=-1e6, max_value=1e6, allow_nan=False, allow_infinity=False),
               ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/56/hypo.py", line 36, in test_sign_error_when_no_sign_change
    assert result['error_num'] == -1, (
           ^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: Expected sign error (error_num=-1) when f(xa)*f(xb) > 0, but got error_num=0. f(1.0149495420240701e-101)=1.0149495420240701e-100, f(1.0)=10.0, Args: (0.0, 10.0, 0.0, 0.0)
Falsifying example: test_sign_error_when_no_sign_change(
    # The test sometimes passed when commented parts were varied together.
    a0=0.0,
    a1=10.0,  # or any other generated value
    a2=0.0,
    a3=0.0,
    xa=1.0149495420240701e-101,
    xb=1.0,  # or any other generated value
)
Explanation:
    These lines were always and only run by failing examples:
        /home/npc/pbt/agentic-pbt/worker_/56/hypo.py:37
