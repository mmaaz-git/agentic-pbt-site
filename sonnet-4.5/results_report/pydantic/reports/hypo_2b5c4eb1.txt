/home/npc/miniconda/lib/python3.13/site-packages/pydantic/experimental/__init__.py:7: PydanticExperimentalWarning: This module is experimental, its contents are subject to change and deprecation.
  warnings.warn(
  + Exception Group Traceback (most recent call last):
  |   File "/home/npc/pbt/agentic-pbt/worker_/21/hypo.py", line 26, in <module>
  |     test_str_strip_matches_python_str_strip()
  |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  |   File "/home/npc/pbt/agentic-pbt/worker_/21/hypo.py", line 8, in test_str_strip_matches_python_str_strip
  |     @settings(max_examples=1000)
  |                    ^^^
  |   File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2062, in wrapped_test
  |     _raise_to_user(errors, state.settings, [], " in explicit examples")
  |     ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |   File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 1613, in _raise_to_user
  |     raise the_error_hypothesis_found
  | ExceptionGroup: Hypothesis found 2 distinct failures in explicit examples. (2 sub-exceptions)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/home/npc/pbt/agentic-pbt/worker_/21/hypo.py", line 22, in test_str_strip_matches_python_str_strip
    |     assert actual == expected, f"str_strip() mismatch: input={text!r}, expected={expected!r}, actual={actual!r}"
    |            ^^^^^^^^^^^^^^^^^^
    | AssertionError: str_strip() mismatch: input='0\x1f', expected='0', actual='0\x1f'
    | Falsifying explicit example: test_str_strip_matches_python_str_strip(
    |     text='0\x1f',
    | )
    +---------------- 2 ----------------
    | Traceback (most recent call last):
    |   File "/home/npc/pbt/agentic-pbt/worker_/21/hypo.py", line 22, in test_str_strip_matches_python_str_strip
    |     assert actual == expected, f"str_strip() mismatch: input={text!r}, expected={expected!r}, actual={actual!r}"
    |            ^^^^^^^^^^^^^^^^^^
    | AssertionError: str_strip() mismatch: input='\x1f', expected='', actual='\x1f'
    | Falsifying explicit example: test_str_strip_matches_python_str_strip(
    |     text='\x1f',
    | )
    +------------------------------------
