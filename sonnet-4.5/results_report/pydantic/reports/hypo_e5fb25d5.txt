/home/npc/miniconda/lib/python3.13/site-packages/pydantic/experimental/__init__.py:7: PydanticExperimentalWarning: This module is experimental, its contents are subject to change and deprecation.
  warnings.warn(
Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/14/hypo.py", line 17, in <module>
    test_datetime_tz_should_work()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/14/hypo.py", line 8, in test_datetime_tz_should_work
    def test_datetime_tz_should_work(dt):
                   ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/14/hypo.py", line 11, in test_datetime_tz_should_work
    class TestModel(BaseModel):
        field: Annotated[datetime.datetime, pipeline]
  File "/home/npc/miniconda/lib/python3.13/site-packages/pydantic/_internal/_model_construction.py", line 226, in __new__
    complete_model_class(
    ~~~~~~~~~~~~~~~~~~~~^
        cls,
        ^^^^
    ...<4 lines>...
        create_model_module=_create_model_module,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/home/npc/miniconda/lib/python3.13/site-packages/pydantic/_internal/_model_construction.py", line 658, in complete_model_class
    schema = cls.__get_pydantic_core_schema__(cls, handler)
  File "/home/npc/miniconda/lib/python3.13/site-packages/pydantic/main.py", line 702, in __get_pydantic_core_schema__
    return handler(source)
  File "/home/npc/miniconda/lib/python3.13/site-packages/pydantic/_internal/_schema_generation_shared.py", line 84, in __call__
    schema = self._handler(source_type)
  File "/home/npc/miniconda/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py", line 612, in generate_schema
    schema = self._generate_schema_inner(obj)
  File "/home/npc/miniconda/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py", line 881, in _generate_schema_inner
    return self._model_schema(obj)
           ~~~~~~~~~~~~~~~~~~^^^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py", line 693, in _model_schema
    {k: self._generate_md_field_schema(k, v, decorators) for k, v in fields.items()},
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py", line 1073, in _generate_md_field_schema
    common_field = self._common_field_schema(name, field_info, decorators)
  File "/home/npc/miniconda/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py", line 1265, in _common_field_schema
    schema = self._apply_annotations(
        source_type,
        annotations + validators_from_decorators,
    )
  File "/home/npc/miniconda/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py", line 2062, in _apply_annotations
    schema = get_inner_schema(source_type)
  File "/home/npc/miniconda/lib/python3.13/site-packages/pydantic/_internal/_schema_generation_shared.py", line 84, in __call__
    schema = self._handler(source_type)
  File "/home/npc/miniconda/lib/python3.13/site-packages/pydantic/_internal/_generate_schema.py", line 2137, in new_handler
    schema = metadata_get_schema(source, get_inner_schema)
  File "/home/npc/miniconda/lib/python3.13/site-packages/pydantic/experimental/pipeline.py", line 347, in __get_pydantic_core_schema__
    s = _apply_step(step, s, handler, source_type)
  File "/home/npc/miniconda/lib/python3.13/site-packages/pydantic/experimental/pipeline.py", line 387, in _apply_step
    s = _apply_constraint(s, step.constraint)
  File "/home/npc/miniconda/lib/python3.13/site-packages/pydantic/experimental/pipeline.py", line 575, in _apply_constraint
    raise NotImplementedError('Constraining to a specific timezone is not yet supported')
NotImplementedError: Constraining to a specific timezone is not yet supported
Falsifying example: test_datetime_tz_should_work(
    dt=datetime.datetime(2000, 1, 1, 0, 0, tzinfo=zoneinfo.ZoneInfo(key='UTC')),  # or any other generated value
)
