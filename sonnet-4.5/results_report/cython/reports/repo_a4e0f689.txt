=== Unix-style Paths ===
Path 1: /tmp/very_long_directory_name_abc/subdir/file.pyx
Path 2: /tmp/very_long_directory_name_abd/build
commonprefix result: '/tmp/very_long_directory_name_ab'
Is valid directory: False

Attempting os.chdir('/tmp/very_long_directory_name_ab')...
ERROR: FileNotFoundError - [Errno 2] No such file or directory: '/tmp/very_long_directory_name_ab'

=== Windows-style Paths (simulated) ===
Path 1: C:\very_long_directory_name_abc\subdir\file.pyx
Path 2: C:\very_long_directory_name_abd\build
commonprefix result: 'C:\very_long_directory_name_ab'

=== Correct Solution Using commonpath ===
Unix paths - commonpath result: '/tmp'
Is valid directory: True

For Windows paths, commonpath would return: 'C:\'

=== Why This Is A Bug ===
os.path.commonprefix() operates character-by-character on strings,
not respecting path component boundaries.
This causes it to return partial directory names that don't exist.

In pyximport.build_module (lines 188-195), this invalid path is
passed to os.chdir(), which raises FileNotFoundError and crashes.
