Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/30/hypo.py", line 42, in <module>
    test_py_version_hex_round_trip()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/30/hypo.py", line 11, in test_py_version_hex_round_trip
    st.integers(min_value=0, max_value=255),
               ^^^
  File "/home/npc/pbt/agentic-pbt/envs/cython_env/lib/python3.13/site-packages/hypothesis/core.py", line 2062, in wrapped_test
    _raise_to_user(errors, state.settings, [], " in explicit examples")
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/npc/pbt/agentic-pbt/envs/cython_env/lib/python3.13/site-packages/hypothesis/core.py", line 1613, in _raise_to_user
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/30/hypo.py", line 30, in test_py_version_hex_round_trip
    assert extracted_minor == minor, f"Minor mismatch: {minor} != {extracted_minor}"
           ^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: Minor mismatch: 256 != 0
Falsifying explicit example: test_py_version_hex_round_trip(
    major=3,
    minor=256,
    micro=0,
    level=0,
    serial=0,
)
Running property-based test for py_version_hex...
Testing that encoded version components can be extracted correctly.

Test failed: Minor mismatch: 256 != 0

This demonstrates that py_version_hex fails the round-trip property:
Values encoded into the hex format cannot be reliably extracted back.
