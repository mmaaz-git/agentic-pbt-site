Test Case 1: Single py: prefixed variable
----------------------------------------
Original argument: py:my_var=42
After split: name='py:my_var', value='42'
Variable name stored in dict: 'py:'
Variable value stored: 42
Result: vars = {'py:': 42}
Expected: vars = {'my_var': 42}
Actual:   vars = {'py:': 42}

Test Case 2: Multiple py: prefixed variables
----------------------------------------
Arguments to parse: ['py:x=10', 'py:y=20', 'py:z=30']
  After parsing 'py:x=10': vars = {'py:': 10}
  After parsing 'py:y=20': vars = {'py:': 20}
  After parsing 'py:z=30': vars = {'py:': 30}

Expected: vars = {'x': 10, 'y': 20, 'z': 30}
Actual:   vars = {'py:': 30}
Bug: All variables overwrite each other under key 'py:'!

Test Case 3: Correct implementation (what it should be)
----------------------------------------
Arguments to parse: ['py:x=10', 'py:y=20', 'py:z=30']
  After parsing 'py:x=10': vars = {'x': 10}
  After parsing 'py:y=20': vars = {'x': 10, 'y': 20}
  After parsing 'py:z=30': vars = {'x': 10, 'y': 20, 'z': 30}

Result with fix: vars = {'x': 10, 'y': 20, 'z': 30}
This is what the code should produce!
