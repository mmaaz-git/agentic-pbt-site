Traceback (most recent call last):
  File "/home/npc/pbt/agentic-pbt/worker_/0/hypo.py", line 11, in <module>
    test_cap_length_respects_max()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/npc/pbt/agentic-pbt/worker_/0/hypo.py", line 6, in test_cap_length_respects_max
    def test_cap_length_respects_max(s, max_len):
                   ^^^
  File "/home/npc/miniconda/lib/python3.13/site-packages/hypothesis/core.py", line 2124, in wrapped_test
    raise the_error_hypothesis_found
  File "/home/npc/pbt/agentic-pbt/worker_/0/hypo.py", line 8, in test_cap_length_respects_max
    assert len(result) <= max_len
           ^^^^^^^^^^^^^^^^^^^^^^
AssertionError
Falsifying example: test_cap_length_respects_max(
    s='00000000000',
    max_len=10,
)
Explanation:
    These lines were always and only run by failing examples:
        /home/npc/miniconda/lib/python3.13/site-packages/Cython/Compiler/PyrexTypes.py:5707
