=== Low-level demonstration ===
Testing chars_to_ranges('00')...
Input string: '00'
Returned ranges: [48, 50]
Reconstructed characters: {'1', '0'}
Expected characters: {'0'}
ERROR: Expected {'0'}, but got {'1', '0'}
The function incorrectly includes character(s): {'1'}

=== High-level impact on Any() function ===
Creating lexicon with Any('00')...
Any('00') should match only '0', but let's test if it matches '1'...
ERROR: Any('00') incorrectly matched '1'
This demonstrates that the bug affects the public API

=== Explanation ===
The bug occurs because chars_to_ranges uses '>=' instead of '>' when
checking if consecutive characters should be merged into a range.
With duplicate '0' characters, it incorrectly expands the range to include '1'.
