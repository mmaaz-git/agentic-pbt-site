## Bug Reproduction Report

I have successfully reproduced the bug as described in the bug report.

### Test Results

1. **Empty Bag Test**: When calling `mean()` on an empty dask bag, it raises `ZeroDivisionError: float division by zero` as reported.

2. **Property-Based Test**: The hypothesis test in the report has a workaround that prevents empty lists by substituting `[0]` when the data is empty. When removing this workaround and testing with an actual empty list, the ZeroDivisionError occurs.

3. **Code Examination**: Looking at the source code in `/home/npc/miniconda/lib/python3.13/site-packages/dask/bag/core.py`, lines 1133-1135:
   ```python
   def mean_aggregate(x):
       totals, counts = list(zip(*x))
       return 1.0 * sum(totals) / sum(counts)
   ```
   The division by `sum(counts)` will be division by zero when all counts are 0 (empty bag).

4. **Related Functions**: Similar issues exist with:
   - `std()`: Also raises ZeroDivisionError on empty bags
   - `var()`: Also raises ZeroDivisionError on empty bags
   - `min()` and `max()`: Raise ValueError with "min()/max() iterable argument is empty"
   - `count()` and `sum()`: Handle empty bags correctly, returning 0

### Comparison with Other Libraries

- **NumPy**: Returns NaN with a RuntimeWarning for mean of empty arrays
- **Pandas**: Returns NaN for mean of empty Series
- **Python statistics module**: Raises StatisticsError with message "mean requires at least one data point"

The bug is confirmed - dask.bag.Bag.mean() crashes with ZeroDivisionError on empty bags instead of handling this case gracefully.