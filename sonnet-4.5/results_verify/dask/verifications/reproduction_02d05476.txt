## Bug Reproduction Report

I have successfully reproduced the bug reported in the dask.utils.format_bytes function.

### Test Results

1. **Hypothesis Test**: The hypothesis test failed with input n=1125894277343089729, producing the output '1000.00 PiB' which has 11 characters, exceeding the documented limit of 10 characters.

2. **Specific Reproduction Case**:
   - Input: 1_125_899_906_842_624_000
   - Output: '1000.00 PiB'
   - Length: 11 characters
   - Expected: <= 10 characters
   - Result: FAILED

3. **Additional Test Cases**:
   - format_bytes(999 * 2**50) = '999.00 PiB' (10 chars) - PASSES
   - format_bytes(1000 * 2**50) = '1000.00 PiB' (11 chars) - FAILS
   - format_bytes(1023 * 2**50) = '1023.00 PiB' (11 chars) - FAILS

### Analysis

The bug occurs when the formatted byte value reaches 1000 or more in any unit (PiB in this case). The function uses a format string of ".2f" which always produces 2 decimal places. When the value is >= 1000, the number part becomes 7 characters (e.g., "1000.00"), and when combined with the unit suffix " PiB" (4 characters), the total becomes 11 characters.

The bug is consistent and reproducible. It specifically affects values >= 1000 PiB but still less than 2**60 (the exabyte range), which violates the documented guarantee that "For all values < 2**60, the output is always <= 10 characters."