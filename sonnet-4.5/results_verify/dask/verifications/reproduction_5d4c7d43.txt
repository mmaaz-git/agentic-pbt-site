REPRODUCTION OF BUG REPORT

I successfully reproduced the bug using both the Hypothesis test and manual test cases provided in the bug report.

1. HYPOTHESIS TEST REPRODUCTION:
The property-based test using Hypothesis correctly identified the failure. The test searches for integers between 0 and 2**60-1 where format_bytes returns a string with more than 10 characters. It immediately found a failing case:
- Input: n=1_125_894_277_343_089_729
- Output: '1000.00 PiB' (11 characters)
- This violates the assertion that len(result) <= 10

2. MANUAL TEST REPRODUCTION:
The manual test case also confirmed the bug:
- Input: 1125894277343089729
- This value is indeed < 2**60 (True)
- Output: '1000.00 PiB'
- Output length: 11 characters
- AssertionError correctly raised: Expected <= 10 characters, got 11

3. ADDITIONAL TEST CASES:
I tested additional edge cases and found multiple violations:
- format_bytes(1125899906842624000) → '1000.00 PiB' (11 chars)
- format_bytes(1152921504606846975) → '1024.00 PiB' (11 chars)
- All values from 1000.00 PiB to 1024.00 PiB produce 11-character outputs
- The issue occurs when the value divided by 2**50 is >= 1000

4. ROOT CAUSE:
The bug occurs because the formatting string "{n / k:.2f} {prefix}B" uses 2 decimal places. When n / k >= 1000, the result becomes a 4-digit number before the decimal (e.g., "1000.00"), plus the space and suffix "PiB", totaling 11 characters.

The bug is consistently reproducible and the test output matches exactly what the bug report claimed.