## Bug Reproduction Report

I have successfully reproduced the reported bug in `dask.dataframe.io.parquet.core.apply_filters`.

### Hypothesis Test Reproduction
The provided Hypothesis test fails immediately with the exact error reported:
- Falsifying input: `parts=[], statistics=[]`
- Error: `IndexError: list index out of range`
- Location: Line 556 in apply_filters when accessing `filters[0]`

### Minimal Example Reproduction
Tested multiple scenarios:

1. **Empty filters list with empty parts/statistics**:
   - Input: `parts=[], statistics=[], filters=[]`
   - Result: IndexError: list index out of range

2. **Empty filters list with non-empty parts/statistics**:
   - Input: `parts=["part1", "part2"], statistics=[...], filters=[]`
   - Result: IndexError: list index out of range

3. **None filters** (for comparison):
   - Input: `filters=None`
   - Result: TypeError: 'NoneType' object is not subscriptable
   - This shows None is also not properly handled

4. **Valid filters**:
   - Input: `filters=[("col1", ">", 5)]`
   - Result: Works correctly, returns filtered results

### Root Cause
The bug occurs on line 556:
```python
conjunction, *disjunction = filters if isinstance(filters[0], list) else [filters]
```

The code attempts to access `filters[0]` without first checking if `filters` is empty. When `filters=[]`, this raises an IndexError.

The bug is confirmed and reproducible exactly as described in the report.