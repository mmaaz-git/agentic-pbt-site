DOCUMENTATION ANALYSIS FOR parse_timedelta

Based on my review of the documentation and source code:

1. FUNCTION PURPOSE:
   - parse_timedelta is documented to "Parse timedelta string to number of seconds"
   - Accepts str, float, timedelta, or None as input
   - Has optional 'default' parameter for unit of measure (defaults to "seconds")

2. DOCUMENTED EXAMPLES:
   - '3s' → 3
   - '3.5 seconds' → 3.5
   - '300ms' → 0.3
   - timedelta(seconds=3) → 3
   - Numeric values without units use the default unit

3. ERROR HANDLING IN DOCUMENTATION:
   - The function raises ValueError for invalid time units (e.g., 'foos')
   - The function raises KeyError with detailed message for invalid suffixes
   - Documentation shows it should raise ValueError when default=False and no unit specified
   - NO explicit documentation about empty string handling

4. COMPARISON WITH parse_bytes:
   - parse_bytes has similar parsing logic and structure
   - parse_bytes currently returns 1 for empty strings (after removing spaces and adding "1" prefix)
   - parse_bytes does NOT crash on empty strings - it silently returns 1
   - This suggests parse_timedelta should also handle empty strings gracefully

5. EXPECTED BEHAVIOR FROM DOCUMENTATION:
   - Function should parse valid time strings to seconds
   - Should raise ValueError or KeyError for invalid units with descriptive messages
   - No explicit requirement that empty strings should raise ValueError
   - No documentation states empty strings are invalid input

6. RELATED PANDAS/DASK CONVENTIONS:
   - Related to_timedelta functions have explicit error handling modes ('raise', 'coerce', 'ignore')
   - Standard practice is to raise informative ValueError for invalid input
   - But empty string handling is not explicitly specified

CONCLUSION:
The documentation does not explicitly specify how empty strings should be handled. The crash with IndexError is clearly unintended (no documentation mentions IndexError), but whether it should raise ValueError or return a default value is not documented.