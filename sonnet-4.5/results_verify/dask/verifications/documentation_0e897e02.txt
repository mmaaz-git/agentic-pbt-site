DOCUMENTATION ANALYSIS
======================

1. FUNCTION DOCSTRING:
   The only documentation available for sorted_division_locations is its docstring.

   The docstring states:
   - Function name: sorted_division_locations
   - Purpose: "Find division locations and values in sorted list"
   - Parameters: seq, npartitions=None, chunksize=None

2. DOCSTRING EXAMPLES:
   All five examples in the docstring use plain Python lists as input:

   >>> L = ['A', 'B', 'C', 'D', 'E', 'F']
   >>> sorted_division_locations(L, chunksize=2)
   (['A', 'C', 'E', 'F'], [0, 2, 4, 6])

   The examples clearly demonstrate that the function is intended to work with Python lists.

3. PARAMETER DOCUMENTATION:
   The docstring does NOT specify:
   - What types are acceptable for the 'seq' parameter
   - Any restrictions on input types
   - That numpy arrays or pandas objects are required

   The docstring DOES describe seq as working with a "sorted list" in the description.

4. EXTERNAL DOCUMENTATION:
   - No documentation found in the official Dask documentation (docs.dask.org)
   - The function appears to be an internal utility function
   - No type hints or annotations in the function signature

5. CODE COMMENTS:
   Line 282-283 has a comment:
   "# Convert from an ndarray to a plain list so that
    # any divisions we extract from seq are plain Python scalars."

   This comment suggests the function expects to handle ndarrays, but ironically,
   it's trying to convert TO a list, not FROM a list.

6. IMPLICIT CONTRACT:
   - The function name contains "sorted" and the docstring mentions "sorted list"
   - All examples use Python lists
   - No indication that special types are required
   - A reasonable user would expect Python lists to work

CONCLUSION:
The documentation (docstring examples) establishes a clear contract that Python lists
should be accepted as input. The implementation violates this documented behavior.