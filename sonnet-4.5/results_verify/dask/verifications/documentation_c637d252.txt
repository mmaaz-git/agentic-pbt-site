## Documentation Analysis

### Function Documentation Status:

1. **`_read_orc` function**:
   - Has NO docstring
   - Is a private/internal function (starts with underscore)
   - No documentation about parameter mutation behavior
   - No documentation about any expected behavior

2. **Public `read_orc` function documentation**:
   - Well documented with parameters and examples
   - `columns` parameter documented as: "None or list(str) - Columns to load. If None, loads all."
   - No mention of mutation behavior
   - No indication that the columns list will be modified

3. **Python conventions and expectations**:
   - Python's general convention is that functions should not mutate their input parameters unless:
     a) It's explicitly documented
     b) The function name suggests mutation (e.g., `list.sort()` vs `sorted()`)
     c) It's the primary purpose of the function
   - The underscore prefix indicates this is a private/internal function
   - Private functions are still expected to follow good practices

4. **Dask-specific considerations**:
   - The Dask documentation doesn't specify any special conventions about parameter mutation
   - The public API (`read_orc`) already protects against this by creating a new list
   - There's no documentation suggesting that internal functions are allowed to mutate parameters

5. **Standard library behavior**:
   - Python standard library functions generally do not mutate input parameters unless it's their explicit purpose
   - When mutation is needed internally, functions typically create a copy

### Conclusion:

There is no documentation that states or implies that `_read_orc` should or is allowed to mutate the `columns` parameter. The lack of documentation about mutation, combined with Python's general conventions, suggests that the current behavior (mutating the input list) is unexpected and likely unintentional.

The fact that the public `read_orc` function already creates a defensive copy in certain cases (line 98) suggests that the developers are aware that mutation should be avoided, making the mutation in `_read_orc` inconsistent with the overall design.