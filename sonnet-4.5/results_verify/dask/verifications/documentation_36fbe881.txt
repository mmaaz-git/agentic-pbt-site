## Documentation Analysis for format_bytes

### Primary Documentation Source
The function `format_bytes` is defined in `dask/utils.py` at lines 1771-1799. The function includes inline documentation in its docstring.

### Documented Contract
The docstring explicitly states:
```
"For all values < 2**60, the output is always <= 10 characters."
```

This is stated at line 1788 of the source code and is presented as a guarantee about the function's behavior.

### Documentation Examples
The docstring provides several examples:
```python
>>> format_bytes(1)
'1 B'
>>> format_bytes(1234)
'1.21 kiB'
>>> format_bytes(12345678)
'11.77 MiB'
>>> format_bytes(1234567890)
'1.15 GiB'
>>> format_bytes(1234567890000)
'1.12 TiB'
>>> format_bytes(1234567890000000)
'1.10 PiB'
```

All these examples produce outputs with <= 10 characters, which is consistent with the stated guarantee. However, the examples don't test the edge case of values >= 1000 PiB.

### Implementation Details
The function uses the following algorithm:
1. It iterates through units in descending order: PiB, TiB, GiB, MiB, kiB
2. For each unit with factor k, it checks if n >= k * 0.9
3. If true, it formats as f"{n / k:.2f} {prefix}B"
4. The format pattern "%.2f" produces 2 decimal places

### External Documentation
- The function is imported by `dask.widgets.widgets` and re-exported there
- Web search confirms this is a utility function in the dask.utils module
- No external documentation contradicts the inline docstring

### Assessment
The documentation makes an explicit, unqualified guarantee: "For all values < 2**60, the output is always <= 10 characters." This is not a suggestion or typical behaviorâ€”it's stated as an invariant that the function maintains. The word "always" makes this a strong contract that users can rely upon.

The bug report correctly identifies that this documented guarantee is violated for certain valid inputs (values >= 1000 PiB but < 2**60).