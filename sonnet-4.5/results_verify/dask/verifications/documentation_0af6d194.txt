## Documentation Findings for dask.dataframe.io.parquet.core.sorted_columns

### Function Documentation
The function has the following inline documentation:
```python
def sorted_columns(statistics, columns=None):
    """Find sorted columns given row-group statistics

    This finds all columns that are sorted, along with the
    appropriate ``divisions`` for those columns. If the (optional)
    ``columns`` argument is used, the search will be restricted
    to the specified column set.

    Returns
    -------
    out: List of {'name': str, 'divisions': List[str]} dictionaries
    """
```

### Key Findings:

1. **Purpose**: This is an internal utility function used to identify sorted columns in parquet files based on row-group statistics. It's not a public API function.

2. **Expected Input**:
   - `statistics`: A list of statistics dictionaries from row groups, where each contains column metadata including min/max values
   - `columns`: Optional parameter to restrict search to specific columns

3. **Expected Output**: Returns a list of dictionaries containing column names and their divisions (sorted boundary values)

4. **Missing Documentation**:
   - The documentation does NOT specify what should happen when row groups have different numbers of columns
   - There is NO mention of requiring all row groups to have the same column schema
   - The documentation does NOT explicitly state that statistics must have uniform column structure across all entries

5. **Implementation Assumptions**:
   The current implementation assumes that all statistics entries have the same column structure at the same indices. This is evident from the code:
   - Line 418: `for i, c in enumerate(statistics[0]["columns"]):`
   - Line 422: Direct access to `s["columns"][i]` without bounds checking
   - Line 429: Again accesses `stats["columns"][i]` without checking if index exists

6. **Context in Dask**:
   - This function is used internally by Dask's parquet reading engine
   - It helps optimize reading by identifying pre-sorted columns
   - Sorted columns can be used as indices for better performance

### Documentation Gaps:
The documentation does not specify:
1. Whether all row groups must have the same columns
2. How to handle heterogeneous column schemas across row groups
3. Whether columns must appear in the same order across all statistics entries
4. What constitutes valid vs invalid statistics input

This lack of specification is important because parquet files CAN have different schemas across row groups in certain scenarios (e.g., schema evolution, partial writes), though this is uncommon.