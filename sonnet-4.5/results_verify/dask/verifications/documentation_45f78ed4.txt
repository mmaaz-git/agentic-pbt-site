DOCUMENTATION ANALYSIS FOR parse_bytes
=======================================

1. OFFICIAL DOCUMENTATION:
-------------------------
The official Dask documentation (https://docs.dask.org/en/stable/api.html#dask.utils.parse_bytes) describes parse_bytes as:
- Converts byte string representations to numeric values
- Supports various input formats (strings with units, numeric values, scientific notation)
- Raises ValueError for unrecognizable units

The documentation DOES NOT:
- Mention anything about negative values
- Specify a valid input range
- State that inputs must be non-negative
- Provide any examples with negative inputs

All documented examples use positive values only.

2. DOCSTRING IN SOURCE CODE:
----------------------------
The docstring in the source code (lines 1586-1613) provides examples:
- All examples use positive values
- No mention of negative value handling
- No statement about valid input ranges
- Only error case shown is for invalid units ('foos')

3. SEMANTIC EXPECTATIONS:
-------------------------
While not explicitly documented, the function name "parse_bytes" and its purpose strongly imply:
- Byte sizes represent amounts of data
- Data amounts are inherently non-negative (you cannot have -5MB of data)
- The function is used in contexts where negative values make no sense

4. USAGE IN CODEBASE:
---------------------
The function is used in dask.bytes.read_bytes to parse:
- blocksize parameter (line 90): Used for calculating data block divisions
- sample parameter (line 167): Used to read a sample of data

Both uses expect non-negative values for correct operation.

5. CONCLUSION:
-------------
The documentation does not explicitly state that negative values are invalid, but:
- The semantic meaning of "byte size" implies non-negative values
- All documented examples use positive values
- The function's usage contexts require non-negative values
- The lack of negative value handling appears to be an oversight rather than intentional design