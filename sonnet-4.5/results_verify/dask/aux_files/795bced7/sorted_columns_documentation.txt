Documentation Analysis for sorted_columns Function
===================================================

Function Documentation:
The sorted_columns function in dask/dataframe/io/parquet/core.py has the following docstring:

"""Find sorted columns given row-group statistics

This finds all columns that are sorted, along with the
appropriate ``divisions`` for those columns. If the (optional)
``columns`` argument is used, the search will be restricted
to the specified column set.

Returns
-------
out: List of {'name': str, 'divisions': List[str]} dictionaries
"""

Key Points from Documentation Review:
1. The function expects "row-group statistics" as input
2. It identifies columns that are sorted across row groups
3. It returns divisions (boundaries) for sorted columns
4. There is NO explicit documentation about input validation
5. There is NO specification about what constitutes valid statistics

Apache Parquet Specification:
Based on research into the Apache Parquet format specification:
- Parquet stores min/max statistics at the row group level in file metadata
- These statistics are used for predicate pushdown and query optimization
- The Parquet format specification does NOT explicitly state that min must be <= max
- However, by definition, minimum and maximum values in statistics should satisfy min <= max for the statistics to be meaningful

Real Parquet Files:
Testing with actual Parquet files created by pyarrow shows:
- Real Parquet files always have min <= max in their statistics
- This is a natural property of how statistics are collected from actual data
- When pyarrow writes Parquet files, it computes min/max from real column data

Function Implementation:
The function contains an assertion at line 442:
    assert divisions == sorted(divisions)

This is an internal consistency check, not input validation. The function assumes that if it builds divisions correctly following its algorithm, they will be sorted.

Conclusion from Documentation:
The documentation does not specify:
- What happens with invalid statistics (min > max)
- Whether the function should validate input statistics
- Whether AssertionError is the intended behavior for invalid input

The lack of documentation about input validation suggests this is an edge case not considered in the original design.