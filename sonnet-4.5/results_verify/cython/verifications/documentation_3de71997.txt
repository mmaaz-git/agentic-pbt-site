# Documentation Analysis for Cython.Tempita._looper

## Summary
I searched for documentation about the odd/even properties in multiple sources and found limited explicit documentation about the expected behavior.

## Sources Checked

### 1. Module Docstring
The module docstring in _looper.py provides a basic example of looper usage but does not mention odd/even properties at all. It only shows usage with .number and .last properties.

### 2. Class and Method Documentation
- The loop_pos class has no docstring
- The odd() and even() methods have no docstrings or comments explaining their intended behavior
- No inline comments explain the logic

### 3. Python Help System
Running help() on the odd and even properties returns minimal information - just "odd" and "even" with no description of expected behavior.

### 4. External Documentation
From web search results, I found that:
- Tempita documentation states: ".odd - True if this is an odd item. The first item is even."
- This clearly indicates that the first item (index 0) should be considered EVEN
- The documentation also states ".even - True if it's even"

### 5. GitHub Source
The original Tempita repository on GitHub shows the same implementation as Cython's bundled version, suggesting this bug has been present in the original Tempita as well.

## Key Finding
The web search found documentation that explicitly states: "The first item is even." This is a critical piece of information that establishes the expected behavior:
- Position 0 (first item) should have even=True, odd=False
- Position 1 (second item) should have even=False, odd=True
- And so on...

## Mathematical Convention
In standard mathematical and programming conventions:
- 0 is an even number (0 % 2 == 0)
- 1 is an odd number (1 % 2 == 1)
- This aligns with the documented expectation that "the first item is even"

## Type Consistency Issue
The documentation states that both properties should return "True" for their respective conditions, implying boolean returns. However:
- The odd property returns a boolean (True/False)
- The even property returns an integer (0/1)
This inconsistency is not documented and appears unintentional.

## Conclusion
Based on the documentation that states "The first item is even", combined with standard mathematical conventions where 0 is even, the current implementation is incorrect. The bug report accurately identifies that the odd and even properties are swapped from their documented and expected behavior.