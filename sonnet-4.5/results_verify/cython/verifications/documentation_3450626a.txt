DOCUMENTATION ANALYSIS
======================

I reviewed the pyximport documentation from multiple sources:

1. INLINE DOCUMENTATION (pyximport.py lines 33-42):
   The docstring explicitly states:
   "Since Cython 0.11, the :mod:`pyximport` module also has experimental
   compilation support for normal Python modules. This allows you to
   automatically run Cython on every .pyx and .py module that Python
   imports, including parts of the standard library and installed packages."

   Key phrase: "every .pyx and .py module" - not just the first one.

2. FUNCTION DOCUMENTATION (install() docstring):
   The pyimport parameter documentation states:
   "You can pass pyimport=True to also install the .py import hook
   in your meta-path. Note, however, that it is rather experimental,
   will not work at all for some .py files and packages..."

   It mentions the feature is experimental and may not work for SOME files,
   but does NOT say it will only work for the FIRST file.

3. EXTERNAL DOCUMENTATION:
   Cython's official documentation confirms that pyimport=True should
   "automatically run Cython on every .pyx and .py module that Python imports"

DOCUMENTATION VERDICT:
The documentation clearly indicates that ALL .py modules should be compiled
when pyimport=True is used, not just the first one. The current behavior
directly contradicts the documented functionality. While the feature is marked
as "experimental", the fundamental promise is that it attempts to compile
"every" .py module, not just one.

The bug represents a clear deviation from the documented behavior.