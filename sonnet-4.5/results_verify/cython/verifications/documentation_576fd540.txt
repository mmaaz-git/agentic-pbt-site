DOCUMENTATION ANALYSIS FOR ensure_python_int

SOURCE CODE DOCUMENTATION:
The function ensure_python_int is defined in pandas/core/dtypes/common.py (lines 93-120). The function has a docstring that explicitly documents its behavior:

1. PURPOSE: "Ensure that a value is a python int."

2. PARAMETERS:
   - value: int or numpy.integer

3. RETURNS:
   - int

4. RAISES:
   - TypeError: "if the value isn't an int or can't be converted to one."

The docstring is clear and unambiguous: the function should ONLY raise TypeError when the value cannot be converted to an integer.

PUBLIC API STATUS:
- The function is NOT documented in the public pandas API documentation (verified via web search)
- The function is in pandas.core.dtypes.common, which is part of the pandas.core namespace
- According to pandas documentation conventions, pandas.core is considered PRIVATE
- This is an internal utility function not meant for direct public use

IMPLEMENTATION DETAILS:
Looking at the actual code (lines 115-120):
```python
try:
    new_value = int(value)
    assert new_value == value
except (TypeError, ValueError, AssertionError) as err:
    raise TypeError(f"Wrong type {type(value)} for value {value}") from err
```

The function catches TypeError, ValueError, and AssertionError, but NOT OverflowError.

PYTHON'S int() BEHAVIOR:
Python's built-in int() function raises OverflowError when converting float('inf') or float('-inf') to integer. This is standard Python behavior and well-documented.

CONCLUSION ON DOCUMENTATION:
The function's docstring explicitly states it only raises TypeError. The implementation does not catch OverflowError, which means when int(float('inf')) is called, the OverflowError propagates up instead of being converted to TypeError as the documentation promises.