## Documentation Analysis

### Official Documentation Review

1. **Cython Documentation**:
   - The Cython documentation does not explicitly document the `extended_iglob` function itself
   - The function is used internally by `cythonize()` to handle glob patterns
   - The documentation mentions that cythonize accepts glob patterns but doesn't specify how duplicates are handled
   - No mention of brace expansion support in the official docs

2. **Python's Standard glob Module**:
   - Python's standard `glob` module documentation states that duplicates can occur with multiple `**` patterns when recursive is true
   - Standard `glob` does NOT support brace expansion - that's a shell feature not in Python's glob
   - The `extended_iglob` function adds brace expansion as an extension beyond standard glob

3. **Function Behavior**:
   - The `extended_iglob` function is an internal utility that extends Python's standard iglob
   - It adds support for brace expansion patterns like `{a,b,c}.txt`
   - This is not standard Python glob behavior but an extension

### Documentation Gaps

1. The function has no docstring explaining its behavior
2. There's no specification about whether duplicates should be allowed or prevented
3. The inconsistent behavior between code paths suggests this wasn't intentionally designed

### Conclusion

Since there is no documentation specifying the expected behavior regarding duplicates, we must look at:
1. The internal consistency of the implementation
2. User expectations based on similar tools
3. The practical implications of the behavior

The fact that the `**/` code path explicitly prevents duplicates (using a `seen` set) suggests that preventing duplicates is the intended behavior, and the brace expansion path's failure to do so is an oversight.