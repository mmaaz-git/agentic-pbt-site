BUG REPORT ANALYSIS
==================

## Category Evaluation

### INVALID - Why this might apply:
- None of the reasons apply. The bug is real, reproducible, and violates reasonable expectations.

### WONTFIX - Why this might apply:
- Could argue that pyrex_* parameters are deprecated/legacy and mixing them is unsupported
- However, this causes SILENT DATA LOSS which is too severe to ignore
- The fix is simple and maintains backward compatibility
- NOT appropriate for WONTFIX

### DOCUMENTATION_FIX - Why this might apply:
- The behavior is not documented anywhere
- Could argue we should just document "don't mix pyrex_* and cython_* parameters"
- However, the current behavior is clearly wrong (data loss) not just undocumented
- Documentation alone would not fix the underlying issue
- NOT appropriate for DOCUMENTATION_FIX

### FEATURE_REQUEST - Why this might apply:
- Could argue that supporting mixed parameters is a new feature
- However, this is fixing broken existing functionality, not adding new capabilities
- The parameters are already accepted, they just don't work correctly
- NOT appropriate for FEATURE_REQUEST

### BUG - Why this applies:
✓ Silent data loss - explicit parameters are discarded without warning
✓ Violates principle of least surprise - users expect their parameters to be used
✓ Breaks reasonable expectations - mixing old/new syntax should work or error, not silently fail
✓ The code already attempts to handle this case but does it incorrectly
✓ Easy to encounter in real usage when upgrading old code gradually
✓ The fix is straightforward and maintains all backward compatibility
✓ High severity impact - can cause builds to fail or produce incorrect binaries

## Technical Analysis

The bug occurs because of flawed logic in the recursive call pattern:
1. When pyrex_* params are detected, they're converted to cython_* in kwargs
2. A recursive call is made to Extension.__init__
3. This recursive call ONLY passes distutils base parameters
4. All explicit cython_* parameters passed by the user are omitted
5. The function returns early, never reaching the code that sets cython attributes

The fix is simple: include the explicit cython_* parameters in the recursive call.

## Impact Assessment
- **Severity**: HIGH - Silent data loss with no warning
- **Likelihood**: MODERATE - Occurs when mixing old and new syntax
- **User Impact**: Build failures, incorrect compilation, debugging issues
- **Fix Complexity**: LOW - Simple parameter passing fix

## Recommendation
This is a clear BUG that should be fixed. The current behavior is objectively wrong (silent data loss), violates reasonable expectations, and has a simple fix that maintains backward compatibility.