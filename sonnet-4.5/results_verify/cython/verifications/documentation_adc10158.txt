## Documentation Analysis for extended_iglob

After reviewing the source code and searching for documentation, I found the following:

1. **No explicit documentation**: The `extended_iglob` function has no docstring or comments explaining its intended behavior, purpose, or contract.

2. **Function purpose (inferred from code)**: Based on the source code analysis, `extended_iglob` appears to be an extended glob pattern matching function that adds support for:
   - Brace expansion: `{a,b,c}` patterns that expand to multiple alternatives
   - Recursive globbing: `**/` patterns for recursive directory traversal

3. **Duplicate handling for recursive globs**: The code explicitly implements duplicate prevention for recursive glob patterns (`**/`) using a `seen` set (lines 54-68), which ensures that paths are only yielded once when using recursive patterns.

4. **No explicit contract about duplicates for brace expansion**: The brace expansion code (lines 42-49) does NOT implement any duplicate prevention. It simply recursively calls `extended_iglob` for each case and yields all results.

5. **Usage context**: The function is used in Dependencies.py for file pattern matching in the Cython build system, specifically for finding source files to compile.

6. **No specification about duplicate handling**: There is no documentation stating that the function should or should not return duplicates. The behavior is implementation-defined and not part of any explicit contract.

7. **Standard glob behavior**: The standard Python `glob.iglob` function that this extends does not return duplicates for a single pattern, but this is about extending glob with additional features.

The lack of documentation means there is no specified behavior regarding duplicates in brace expansion patterns.