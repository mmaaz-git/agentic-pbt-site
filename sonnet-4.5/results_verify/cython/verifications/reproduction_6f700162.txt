## Reproduction Report for _parse_pattern Bug

### Bug Reproduction Status: CONFIRMED

I have successfully reproduced the bug in Cython.TestUtils._parse_pattern. The function crashes with a ValueError when given patterns that start with `/` or `:/` but lack the required second delimiter.

### Test Results:

1. **Direct reproduction test**:
   - Pattern `/start` raises: `ValueError: not enough values to unpack (expected 2, got 1)`
   - Pattern `/` raises: `ValueError: not enough values to unpack (expected 2, got 1)`
   - Pattern `:/end` raises: `ValueError: not enough values to unpack (expected 2, got 1)`
   - Pattern `:/` raises: `ValueError: not enough values to unpack (expected 2, got 1)`

2. **Hypothesis test execution**:
   - All four example patterns from the bug report failed with the exact same ValueError
   - The error occurs at line 196 and 201 in TestUtils.py where tuple unpacking expects 2 values but gets 1

### Root Cause:

The function uses `re.split()` with direct tuple unpacking:
```python
start, pattern = re.split(r"(?<!\\)/", pattern[1:], maxsplit=1)
```

When the delimiter `/` is not found after the initial `/`, `re.split()` returns a list with only one element, causing the unpacking to fail.

### Conclusion:

The bug is real and reproducible. The function crashes on malformed patterns instead of handling them gracefully.