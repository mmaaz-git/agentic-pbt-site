## Documentation Analysis

### Official Documentation Findings

1. **Cython Documentation**:
   - The official Cython documentation at cython.readthedocs.io mentions that compiler directives can be passed via command line using the `-X` switch with a `key=value` format (e.g., `cython -X boundscheck=True`)
   - However, this refers to the `cython` compiler command directly, not the distutils/setuptools build_ext command
   - The documentation does not explicitly describe the expected format for the `--cython-directives` option in setup.py context

2. **Code Documentation**:
   - The user_options definition (line 44-45) describes it as "compiler directive overrides" but provides no format specification
   - No docstring or inline comments explain the expected format
   - The old_build_ext.py (deprecated version) shows the same pattern - defines the option but doesn't parse strings

3. **Implied Behavior**:
   - The option is defined as a command-line string option (ends with '=')
   - Other similar options like `cython-include-dirs` are handled with string parsing (line 74-76 splits by os.pathsep)
   - The code expects to use `dict(self.cython_directives)` at line 107, implying it should be dict-like

### Documentation Gaps

1. **No Format Specification**: The documentation does not specify what format the string value should take (comma-separated key=value pairs, JSON, etc.)

2. **No Parsing Implementation**: Unlike `cython-include-dirs` which has parsing logic, `cython-directives` lacks any string-to-dict conversion

3. **Inconsistent with Usage**: The code allows setting the option from command line but doesn't implement the necessary parsing to make it functional

### Expected Behavior

Based on analogous features and common patterns:
- The string format would likely be comma-separated key=value pairs: `"boundscheck=True,wraparound=False"`
- The `finalize_options` method should parse this string into a dictionary
- This is consistent with how Cython's `-X` option works and with typical command-line option patterns

### Conclusion

The documentation does not explicitly specify that string values are unsupported, and the option is clearly intended for command-line use (given its definition in user_options). The lack of parsing is an implementation gap, not a documentation issue. Users would reasonably expect this option to work from the command line given its presence in user_options.