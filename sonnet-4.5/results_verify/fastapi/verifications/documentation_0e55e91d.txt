DOCUMENTATION ANALYSIS FOR TRUSTEDHOSTMIDDLEWARE IPv6 BUG REPORT

## Starlette Documentation
The official Starlette documentation for TrustedHostMiddleware states:
- Purpose: Guards against HTTP Host Header attacks
- Configuration: Uses allowed_hosts parameter to specify valid hosts
- Allowed formats: exact domain names, wildcard subdomains (*.example.com), or ["*"] for all hosts
- Behavior: Returns 400 response for invalid host headers

The documentation does NOT:
- Mention IPv6 support explicitly
- Provide examples with IPv6 addresses
- Describe the expected format for IPv6 addresses in allowed_hosts
- Explain how ports are handled in the Host header

## RFC Specifications
RFC 2732 (Format for Literal IPv6 Addresses in URLs) clearly states:
- IPv6 addresses MUST be enclosed in square brackets when used in URLs
- Format: [IPv6address]
- With port: [IPv6address]:port

RFC 3986 (URI Generic Syntax) confirms:
- IPv6 addresses are enclosed in square brackets
- This is the ONLY place square brackets are allowed in URI syntax
- Example with port: [2001:db8::7]:8080

HTTP specifications and common practice establish that:
- The Host header follows the same format as the authority component of URIs
- IPv6 addresses in Host headers MUST use brackets: [IPv6]:port

## Implementation Details
The current Starlette implementation (line 40 of trustedhost.py):
```python
host = headers.get("host", "").split(":")[0]
```

This implementation:
- Attempts to remove port by splitting on first colon
- Does NOT handle bracketed IPv6 addresses
- Will incorrectly parse [::1]:8000 as "[" instead of "[::1]"

## Documentation Gap Analysis
1. Starlette documentation doesn't specify IPv6 support or format
2. The code doesn't follow established RFC standards for IPv6 in HTTP
3. There's no documentation warning about IPv6 limitations
4. The implementation contradicts standard HTTP/URI specifications