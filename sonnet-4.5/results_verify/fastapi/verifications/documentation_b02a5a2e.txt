## Documentation Analysis

### Starlette/FastAPI Documentation
The official Starlette documentation for TrustedHostMiddleware:
- States it "enforces that all incoming requests have a correctly set Host header, in order to guard against HTTP Host Header attacks"
- Mentions that allowed_hosts is "a list of domain names that should be allowed as hostnames"
- Supports wildcard domains like "*.example.com"
- Does not explicitly document IPv6 address support in allowed_hosts
- Documentation focuses on domain names rather than IP addresses

### Key Findings:
1. **No explicit IPv6 documentation**: The documentation does not mention whether IPv6 addresses are supported in allowed_hosts
2. **Domain-focused**: Documentation emphasizes domain names, not IP addresses
3. **Port handling**: Documentation doesn't specify how ports in Host headers are handled

### RFC Standards (IPv6 in URLs/HTTP)
Per RFC 2732 and RFC 6874:
- IPv6 addresses in URLs must be enclosed in square brackets: `[2001:db8::1]`
- When a port is specified, the format is: `[2001:db8::1]:8080`
- This is the standard notation to avoid ambiguity with colons in IPv6 addresses
- The bracket notation is essential and widely adopted in HTTP implementations

### Expected Behavior
Based on RFC standards and common HTTP practices:
1. A Host header value of `[2001:db8::1]:8080` is valid and standard-compliant
2. The middleware should correctly parse this to extract the host part `[2001:db8::1]`
3. If `[2001:db8::1]` or `2001:db8::1` is in allowed_hosts, the request should be accepted

### Documentation Gap
While the documentation doesn't explicitly promise IPv6 support, it also doesn't exclude it. Given that:
- IPv6 is a fundamental internet protocol
- The middleware is meant to validate Host headers
- RFC standards clearly define IPv6 Host header format
- The code attempts to handle all Host header formats

The lack of explicit IPv6 documentation doesn't make this behavior correct. A middleware that validates Host headers should reasonably be expected to handle standard-compliant IPv6 addresses.