Documentation Analysis
=====================

## OAuth2 RFC 6749 Specification

I reviewed the OAuth2 RFC 6749 specification, particularly Section 3.3 and Appendix A:

### Formal Definition
The RFC 6749 defines scope in ABNF notation as:
```
scope       = scope-token *( SP scope-token )
scope-token = 1*( %x21 / %x23-5B / %x5D-7E )
```

Where:
- `SP` is defined in RFC 5234 as `%x20` - specifically the space character (ASCII 32)
- NOT any whitespace, but ONLY the space character (0x20)

### Key Specification Requirements
1. Scopes are "space-delimited, case-sensitive strings" (Section 3.3)
2. The separator MUST be the space character (SP = 0x20), not any whitespace
3. The specification is explicit: "list of space-delimited" strings

## FastAPI Documentation

The FastAPI documentation at https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/ states:

1. The scope parameter contains "a long string with 'scopes' separated by spaces"
2. Each scope is "just a string (without spaces)"
3. The documentation explicitly mentions spaces as the separator
4. The OAuth2PasswordRequestForm class documentation (in the source code) states:
   - Line 101-102: "A single string with actually several scopes separated by spaces."
   - Line 255-256: "A single string with actually several scopes separated by spaces."

## Documentation Consistency

Both the OAuth2 specification and FastAPI's own documentation consistently state that:
1. Scopes should be separated by SPACES (not generic whitespace)
2. The space character is specifically mentioned as the separator

## Conclusion

The documentation is clear and unambiguous:
- OAuth2 RFC 6749 explicitly requires the space character (0x20) as the separator
- FastAPI's own documentation states "separated by spaces"
- There is no mention anywhere that tabs, newlines, or other whitespace should be treated as separators

The current implementation using `split()` without arguments contradicts both the OAuth2 specification and FastAPI's own documentation. The bug report's assertion is correct.