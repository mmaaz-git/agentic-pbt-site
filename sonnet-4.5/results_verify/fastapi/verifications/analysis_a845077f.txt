## Bug Triage Analysis

### Consideration for BUG
**Arguments FOR:**
- Clear violation of RFC 7235 specification which explicitly allows `1*SP` (one or more spaces)
- Causes real authentication failures in production systems
- Affects multiple security classes (OAuth2PasswordBearer, OAuth2AuthorizationCodeBearer, HTTPBearer, HTTPDigest)
- Simple to fix with `param.lstrip()` as suggested
- Has security implications - valid tokens are rejected due to extra spaces
- The behavior is clearly incorrect according to the HTTP standard

**Arguments AGAINST:**
- None identified

### Consideration for INVALID
**Arguments FOR:**
- None - the RFC is explicit about allowing multiple spaces

**Arguments AGAINST:**
- RFC 7235 clearly specifies `1*SP` meaning one or more spaces are allowed
- The bug reproduces exactly as described
- Real-world impact is demonstrated

### Consideration for WONTFIX
**Arguments FOR:**
- Could argue that clients shouldn't send malformed headers (but they're not malformed per RFC)

**Arguments AGAINST:**
- This is not an obscure edge case - extra spaces can easily occur in real HTTP headers
- Security impact makes this important to fix
- The fix is trivial (add `.lstrip()`)
- RFC compliance is important for a web framework

### Consideration for FEATURE_REQUEST
**Arguments FOR:**
- None - this is fixing incorrect behavior, not adding new functionality

**Arguments AGAINST:**
- The RFC already defines how this should work
- This is a bug fix to comply with existing standards, not a new feature

### Consideration for DOCUMENTATION_FIX
**Arguments FOR:**
- The function's behavior could be documented to warn about the space handling

**Arguments AGAINST:**
- The code is wrong according to RFC 7235, not the (non-existent) documentation
- Documenting incorrect behavior doesn't make it correct
- The fix should be in the code, not documentation

### Conclusion
This is clearly a **BUG**. The implementation violates RFC 7235 by not properly handling multiple spaces between the authorization scheme and credentials. The RFC explicitly allows `1*SP` (one or more spaces), but the current implementation treats additional spaces as part of the credential value. This causes authentication failures and breaks RFC compliance.