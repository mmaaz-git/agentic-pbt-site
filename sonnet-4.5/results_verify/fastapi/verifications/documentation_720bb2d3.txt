DOCUMENTATION FINDINGS FOR TRUSTEDHOSTMIDDLEWARE IPv6 SUPPORT

1. STARLETTE/FASTAPI DOCUMENTATION:
   - Neither Starlette nor FastAPI documentation explicitly mentions IPv6 support for TrustedHostMiddleware
   - Documentation only describes basic functionality: validating Host headers against an allowed list
   - No format specifications are provided for host values beyond wildcard patterns (*.example.com)
   - Documentation does not specify how ports should be handled in Host headers
   - No examples show IPv6 addresses in the allowed_hosts configuration

2. RFC 3986 (URI SYNTAX) SPECIFICATION:
   - Section 3.2.2 explicitly states that IPv6 addresses in URIs MUST be enclosed in square brackets
   - Quote: "A host identified by an Internet Protocol literal address... is distinguished by enclosing the IP literal within square brackets ('[' and ']')."
   - Square brackets are "the only place where square bracket characters are allowed in the URI syntax"
   - Example from RFC: "ldap://[2001:db8::7]/c=GB?objectClass?one"
   - This is a widely adopted standard for IPv6 representation in network protocols

3. HTTP HOST HEADER CONTEXT:
   - While RFC 7230 doesn't provide explicit IPv6 formatting details in the available excerpt,
     the HTTP Host header follows URI authority syntax from RFC 3986
   - Industry standard practice uses [ipv6]:port format in Host headers
   - This format is used by all major web servers and HTTP clients

4. IMPLEMENTATION EXPECTATIONS:
   - Based on RFC 3986, any middleware handling Host headers should properly parse IPv6 addresses in brackets
   - The absence of explicit IPv6 documentation in Starlette doesn't mean IPv6 shouldn't work
   - IPv6 is a fundamental internet protocol that should be supported by modern web frameworks

5. CONCLUSION ON DOCUMENTATION:
   - There is no documentation that explicitly states TrustedHostMiddleware does NOT support IPv6
   - RFC 3986 provides clear standards for IPv6 address representation that should be followed
   - The lack of IPv6 examples in the documentation is an omission, not an indication that IPv6 shouldn't work
   - A reasonable user would expect IPv6 addresses to work in a modern web framework's Host header validation