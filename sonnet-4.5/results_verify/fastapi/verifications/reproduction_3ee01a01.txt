## Bug Reproduction Report

### Summary
The bug report about TrustedHostMiddleware incorrectly parsing IPv6 addresses has been successfully reproduced and confirmed.

### Reproduction Steps

1. **Property-Based Test Reproduction:**
   - Ran the provided test case with IPv6 address "::1" and port 8080
   - Host header format: "[::1]:8080"
   - Expected parsed host: "::1"
   - Actual parsed host: "["
   - Result: Test FAILED as claimed

2. **Direct Code Reproduction:**
   - Created and ran the exact reproduction code from the bug report
   - Confirmed the parsing issue with multiple IPv6 addresses:
     - "[::1]:8080" → parsed as "[" (should be "::1")
     - "[2001:db8::1]:80" → parsed as "[2001" (should be "2001:db8::1")
     - "[fe80::1]:443" → parsed as "[fe80" (should be "fe80::1")

3. **Root Cause Verification:**
   - Located the bug in `/home/npc/pbt/agentic-pbt/envs/fastapi_env/lib/python3.13/site-packages/starlette/middleware/trustedhost.py` at line 40
   - The code uses `headers.get("host", "").split(":")[0]` to extract the host
   - This naive splitting on ":" fails for IPv6 addresses which contain colons as part of the address
   - IPv6 addresses in brackets like "[::1]:8080" get incorrectly split at the first colon

### Impact
The bug causes TrustedHostMiddleware to:
1. Incorrectly parse IPv6 host headers
2. Fail to match valid IPv6 hosts against allowed_hosts
3. Potentially reject legitimate IPv6 requests with 400 "Invalid host header" errors
4. Break IPv6 support in applications using this middleware

### Conclusion
The bug is real, reproducible, and has significant impact on IPv6 support. The proposed fix correctly handles the bracket notation required for IPv6 addresses in host headers.