# Bug Triage Analysis

## BUG (Valid Bug Report)
**Strong Evidence For:**
- The OpenAPI 3.0 specification explicitly states that requestBody "SHALL be ignored by consumers" for methods where HTTP spec is vague (GET/HEAD)
- The generated OpenAPI schema is objectively invalid according to the OpenAPI 3.0 specification
- The bug report correctly identifies the root cause in METHODS_WITH_BODY constant
- The fix is straightforward and would align the generated schemas with the OpenAPI spec
- This causes real interoperability issues (e.g., Swagger UI doesn't show body documentation for GET)
- Tools that validate OpenAPI schemas would correctly flag these as invalid

**Against:**
- FastAPI intentionally supports GET/HEAD with bodies as documented
- However, this is about OpenAPI schema generation, not runtime behavior

## INVALID
**Evidence For:**
- None. The bug report is technically accurate.

**Evidence Against:**
- The OpenAPI specification clearly forbids this
- The generated schemas are objectively invalid

## WONTFIX
**Evidence For:**
- FastAPI intentionally supports GET/HEAD with bodies for "extreme use cases"
- The current behavior might be by design to support these edge cases
- Changing this could break existing applications that rely on this behavior

**Evidence Against:**
- The issue is not about runtime support but about generating valid OpenAPI schemas
- FastAPI could continue supporting GET/HEAD with bodies while generating valid OpenAPI schemas (by omitting requestBody)
- Invalid OpenAPI schemas break tooling and violate the specification FastAPI claims to follow

## DOCUMENTATION_FIX
**Evidence For:**
- FastAPI documentation mentions GET with body is supported but doesn't mention the OpenAPI schema violation
- Could document that generated OpenAPI schemas may be invalid for GET/HEAD with bodies

**Evidence Against:**
- The code behavior is incorrect according to the OpenAPI specification
- This is not a documentation issue but a code issue that generates invalid schemas

## FEATURE_REQUEST
**Evidence For:**
- Could be reframed as a request to generate valid OpenAPI schemas

**Evidence Against:**
- This is a bug, not a missing feature
- FastAPI claims to generate OpenAPI 3.0 schemas but generates invalid ones

## Conclusion

This is clearly a **BUG**. The generated OpenAPI schemas violate the OpenAPI 3.0 specification that FastAPI claims to follow. While FastAPI may choose to support GET/HEAD with bodies at runtime (which is questionable but documented), generating invalid OpenAPI schemas is a separate issue that breaks interoperability with OpenAPI tooling.

The proper solution would be:
1. Remove GET and HEAD from METHODS_WITH_BODY for OpenAPI generation
2. Continue allowing GET/HEAD with bodies at runtime if desired
3. Document that GET/HEAD with bodies won't appear in OpenAPI schemas

This way FastAPI can maintain its "extreme use case" support while generating valid, specification-compliant OpenAPI schemas.