# Documentation Analysis Report

## OAuth2 RFC 6749 Specification

According to RFC 6749 (The OAuth 2.0 Authorization Framework):

1. **Scope Format**: The scope parameter value is expressed as a list of **space-delimited**, case-sensitive strings.
2. **Delimiter**: The RFC explicitly specifies SPACE character (U+0020) as the delimiter, not "any whitespace"
3. **Case Sensitivity**: Scope values are case-sensitive
4. **No Normalization**: The RFC does not specify that whitespace should be normalized

Key quote from RFC: "The value of the scope parameter is expressed as a list of space-delimited, case-sensitive strings."

## FastAPI Documentation

### Documented Behavior

From the FastAPI source code documentation (lines 99-117 in oauth2.py):
```
A single string with actually several scopes separated by spaces. Each
scope is also a string.

For example, a single string with:
"items:read items:write users:read profile openid"

would represent the scopes:
* `items:read`
* `items:write`
* `users:read`
* `profile`
* `openid`
```

The documentation:
1. States scopes are "separated by spaces" (plural but implies space character)
2. Shows examples with single spaces only
3. Does NOT mention normalization of whitespace
4. Does NOT mention that tabs/newlines will be treated as separators
5. Does NOT mention that multiple spaces will be collapsed

### Additional Context

Lines 54-58 state:
"Note that for OAuth2 the scope `items:read` is a single scope in an opaque string."

This implies scopes should be treated as opaque strings that shouldn't be modified.

## Documentation Gap Analysis

### What the Documentation Says:
- Scopes are separated by spaces
- Scopes are strings
- Examples show single space separation

### What the Documentation Does NOT Say:
- That `split()` without arguments will be used (splitting on ALL whitespace)
- That tabs, newlines, carriage returns will be treated as separators
- That multiple spaces will be collapsed to single spaces
- That leading/trailing whitespace will be stripped
- That whitespace-only scopes will be removed

### What the Code Actually Does:
- Uses `split()` without arguments, which splits on all whitespace
- Normalizes all whitespace types to single spaces
- Removes leading/trailing whitespace
- Loses information about original formatting

## Conclusion

The current implementation violates both:
1. **The OAuth2 RFC specification** - which specifies space-delimited (not "any whitespace delimited")
2. **The principle of least surprise** - the documentation doesn't mention the normalization behavior

The documentation implies space-only separation but the code implements all-whitespace separation with normalization. This is an undocumented behavior that can cause data loss and violates the OAuth2 specification's requirement for space-delimited scopes.