## Documentation Analysis for starlette.datastructures.URL.replace

### Source Code Analysis
From examining the source code in `/home/npc/pbt/agentic-pbt/envs/starlette_env/lib/python3.13/site-packages/starlette/datastructures.py`, I found:

1. **URL Class Design**:
   - The URL class is a wrapper around Python's standard `urllib.parse.urlsplit`
   - It provides convenience methods for URL manipulation
   - The `replace()` method is at lines 118-144

2. **The replace() Method**:
   - Accepts keyword arguments to replace URL components
   - Special handling for username, password, hostname, and port replacements
   - Returns a new URL instance (immutable design)

3. **Implementation Details**:
   - When hostname is None and we're replacing port/username/password, it extracts hostname from netloc using `netloc.rpartition("@")`
   - Line 129 checks if `hostname[-1] != "]"` to handle IPv6 addresses (which are wrapped in brackets)
   - If not an IPv6 address, it strips the port from hostname using `rsplit(":", 1)[0]`

### Official Documentation Found
From web searches and documentation fetching:

1. **Starlette Official Docs**: Very minimal documentation about URL.replace. The docs mainly show:
   - URL is a property-based object exposing URL components
   - Basic examples of replace usage: `url.replace(hostname='www.example.com')`
   - No specification about edge cases or unusual URL formats

2. **No Explicit Specification For**:
   - How empty hostnames should be handled
   - What constitutes a "valid" URL for Starlette
   - Whether URLs like `http://@/path` or `http:///path` are considered valid
   - Error handling expectations for malformed URLs

### URL Standards (RFC 3986)
While not explicitly referenced in Starlette docs, URLs follow RFC 3986 which allows:
- Empty host in the authority component (e.g., `file:///path`)
- Userinfo without host (though unusual)

### Conclusion on Documentation
The documentation does NOT specify:
1. Expected behavior for URLs with empty hostnames
2. Whether the replace method should handle edge cases gracefully or if it can raise exceptions
3. What URL formats are considered "supported" vs "unsupported"

The lack of documentation about edge cases means the current behavior (crashing on empty hostname) is technically unspecified behavior.