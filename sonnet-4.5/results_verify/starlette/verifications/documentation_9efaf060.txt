DOCUMENTATION ANALYSIS
======================

1. Starlette Documentation:
   - The official Starlette documentation for TrustedHostMiddleware does not mention IPv6 support at all
   - It only provides examples with domain names like "example.com" and "*.example.com"
   - There is no explicit statement that IPv6 is NOT supported
   - There is no documentation about the expected format for IPv6 addresses in the allowed_hosts list

2. RFC Standards:

   RFC 3986 (URI Generic Syntax):
   - Explicitly states that IPv6 literal addresses must be "distinguished by enclosing the IP literal within square brackets ('[' and ']')"
   - This is "the only place where square bracket characters are allowed in the URI syntax"
   - Provides clear ABNF grammar for IPv6 addresses in URIs

   RFC 2732 (Format for Literal IPv6 Addresses in URLs):
   - States "To use a literal IPv6 address in a URL, the literal address should be enclosed in '[' and ']' characters"
   - Provides examples like "http://[FEDC:BA98:7654:3210:FEDC:BA98:7654:3210]:80/index.html"
   - Recommends that "World Wide Web browsers SHOULD implement the format of IPv6 literals in URL's"

3. HTTP Host Header:
   - The Host header follows the same format as URLs for consistency
   - IPv6 addresses in Host headers should use the bracket notation: "[IPv6]:port"
   - This is a well-established standard in HTTP/1.1 and HTTP/2

4. Expectations:
   - While Starlette's documentation doesn't explicitly mention IPv6, the middleware is meant to validate Host headers
   - Since Host headers can contain IPv6 addresses according to internet standards, it's reasonable to expect the middleware to handle them
   - The middleware's purpose is security (preventing Host header attacks), and failing to support IPv6 creates a functionality gap

5. Conclusion:
   - The documentation doesn't explicitly promise IPv6 support, but also doesn't state it's unsupported
   - Given that IPv6 is a fundamental internet protocol and the RFCs clearly define how IPv6 should appear in HTTP headers, the lack of support is a legitimate bug rather than undefined behavior
   - This is not a documentation issue - the code should support the standard IPv6 format