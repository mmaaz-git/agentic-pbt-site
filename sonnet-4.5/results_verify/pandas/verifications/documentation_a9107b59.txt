## Documentation Analysis

### Official pandas Documentation Review

1. **DataFrame.__dataframe__() Documentation**
   - The pandas documentation for __dataframe__() is minimal
   - It states it returns "the dataframe interchange object implementing the interchange protocol"
   - No mention of supported data types or limitations
   - No mention of when errors should be raised
   - No validation requirements specified

2. **from_dataframe() Documentation**
   - States it "builds a pandas DataFrame from any DataFrame supporting the interchange protocol"
   - Recommends using Arrow C Data Interface for new development
   - Does not specify data type limitations
   - Does not document NotImplementedError for unsupported dtypes

3. **Interchange Protocol Specification**
   - The official specification at data-apis.org was checked but did not provide detailed information about:
     - Specific data type requirements
     - How to handle integers outside int64 range
     - When validation should occur
     - Error handling requirements

### Key Documentation Findings

1. **No explicit limitation documented**: The documentation does not explicitly state that object dtype integers are unsupported.

2. **No fail-fast requirement**: The documentation does not specify whether validation should happen during __dataframe__() or from_dataframe().

3. **NotImplementedError is undocumented**: The error message "Non-string object dtypes are not supported yet" is not mentioned in any documentation.

4. **Implementation detail in source code**: Looking at the source code (column.py line 144), there's a clear NotImplementedError with the message "Non-string object dtypes are not supported yet", indicating this is a known limitation that was intentionally coded.

### Documentation Gap
The documentation does not clearly communicate:
- That object dtype is only supported for strings (not integers)
- That large integers outside int64 range will fail
- When validation should occur in the interchange process

This represents a documentation gap where the actual behavior and limitations are not properly communicated to users.