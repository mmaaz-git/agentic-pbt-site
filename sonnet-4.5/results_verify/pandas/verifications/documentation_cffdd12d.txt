## Documentation Analysis

### Function Documentation

The `format_percentiles` function is defined in `pandas/io/formats/format.py` (lines 1546-1608). This appears to be an internal utility function, not part of the public pandas API, as it's not documented in the official pandas API reference.

### Docstring Analysis

The function's docstring explicitly states two key guarantees in the "Notes" section (lines 1561-1565):

```
Rounding precision is chosen so that:
(1) if any two elements of ``percentiles`` differ, they remain different after rounding
(2) no entry is *rounded* to 0% or 100%.
```

These are clear, unambiguous promises about the function's behavior:

1. **Uniqueness Preservation**: The function promises to maintain the distinctiveness of different input values after formatting. This is a reasonable and important guarantee for a formatting function, as it ensures no information loss when displaying percentiles.

2. **Boundary Non-Rounding**: The function promises that non-zero values won't be rounded to exactly 0%, and values less than 100% won't be rounded to exactly 100%. The emphasis on "*rounded*" (with asterisks in the original) suggests this is specifically about the rounding process, not about values that are already exactly 0 or 100.

### Examples in Documentation

The docstring provides two examples:

1. Example showing uniqueness preservation:
   ```python
   >>> format_percentiles([0.01999, 0.02001, 0.5, 0.666666, 0.9999])
   ['1.999%', '2.001%', '50%', '66.667%', '99.99%']
   ```

2. Example noting that duplicates are allowed and 0% is valid if already 0:
   ```python
   >>> format_percentiles([0, 0.5, 0.02001, 0.5, 0.666666, 0.9999])
   ['0%', '50%', '2.0%', '50%', '66.67%', '99.99%']
   ```

The second example clarifies that 0% is a valid output when the input is exactly 0, not rounded to 0.

### External Documentation

- The function is not listed in the official pandas API documentation
- Web searches reveal no public documentation for this function
- It appears to be an internal utility function used by pandas for formatting percentile displays

### Documentation Clarity

The documentation is clear and explicit about the expected behavior. The two guarantees are:
1. Well-defined and reasonable
2. Testable and verifiable
3. Important for the function's utility

The bug report correctly identifies violations of these explicitly documented guarantees. This is not a case of undefined behavior or ambiguous documentation.