DOCUMENTATION ANALYSIS
======================

1. Function Documentation (from source code):

   The format_percentiles() docstring states:
   - Parameters: "percentiles : list-like, containing floats from interval [0,1]"
   - Returns: "formatted : list of strings"
   - Notes specify rounding behavior but NO mention of limitations with subnormal floats
   - Examples show normal use cases but no edge cases

2. Input Validation:

   The function explicitly validates inputs (lines 1583-1588):
   ```python
   if (not is_numeric_dtype(percentiles)
       or not np.all(percentiles >= 0)
       or not np.all(percentiles <= 1)):
       raise ValueError("percentiles should all be in the interval [0,1]")
   ```

   This validation PASSES for subnormal floats like 5e-324 because:
   - They are numeric
   - They are >= 0
   - They are <= 1

3. validate_percentile() Function:

   The separate validation function used elsewhere also accepts subnormal floats:
   - Checks: "0 <= q <= 1"
   - Subnormal floats like 5e-324 satisfy this condition
   - No documentation mentions exclusion of subnormal floats

4. Series.describe() Documentation:

   From pandas documentation:
   - States percentiles "should fall between 0 and 1"
   - No mention of limitations with very small values
   - No exclusion of subnormal floats

5. Expected Behavior:

   Based on the documentation:
   - ANY float in [0,1] should be accepted and formatted correctly
   - The output should be a valid percentage string (e.g., "0%" for very small values)
   - No warnings should be generated for valid inputs
   - The function should not produce "nan%" or "inf%" for valid inputs

CONCLUSION:
-----------
The documentation clearly states that the function accepts floats in [0,1] without any exclusion for subnormal floats. The current behavior (producing "nan%" or "inf%" with warnings) violates the documented contract. The documentation does not suggest that subnormal floats are unsupported or should behave differently.