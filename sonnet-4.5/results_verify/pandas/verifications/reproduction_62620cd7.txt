BUG REPRODUCTION REPORT
======================

I have successfully reproduced the bug described in the report.

TEST EXECUTION:
--------------
1. The Hypothesis property-based test fails with 2 distinct failures, confirming the bug exists.

2. Manual reproduction shows:
   - Infinity == Infinity returns True
   - Infinity <= Infinity returns False (INCORRECT)
   - Infinity >= Infinity returns True

   - NegativeInfinity == NegativeInfinity returns True
   - NegativeInfinity <= NegativeInfinity returns True
   - NegativeInfinity >= NegativeInfinity returns False (INCORRECT)

BUG EFFECT:
----------
The bug violates a fundamental mathematical property of comparison operators:
For any values a and b, if a == b is True, then both a <= b and a >= b MUST be True.

Current behavior:
- InfinityType: When Infinity == Infinity (True), Infinity <= Infinity returns False
- NegativeInfinityType: When NegativeInfinity == NegativeInfinity (True), NegativeInfinity >= NegativeInfinity returns False

This is a clear violation of the reflexivity property of comparison operators.

IMPACT:
-------
This inconsistency can lead to:
1. Incorrect behavior in sorting algorithms that rely on consistent comparison semantics
2. Unexpected results when these objects are used in comparisons or ordered collections
3. Violations of the total ordering contract that Python's comparison operators should follow

The bug report's code and assertions are correct and accurately describe the issue.