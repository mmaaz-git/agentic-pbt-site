REPRODUCTION OF BUG REPORT

I have successfully reproduced the reported bug in pandas.Categorical.remove_categories.

1. PROPERTY-BASED TEST REPRODUCTION:
The property-based test fails exactly as described in the bug report:
- Input: Categorical(['00'], categories=['00', '0'])
- After add_categories(['NEW_CATEGORY_XYZ']) then remove_categories(['NEW_CATEGORY_XYZ'])
- Expected categories: ['00', '0']
- Actual categories: ['0', '00']
The categories get sorted alphabetically after the remove operation.

2. SIMPLE EXAMPLE REPRODUCTION:
The simple example also reproduces the issue:
- Input: Categorical(['c', 'b', 'a'], categories=['c', 'b', 'a', 'x'])
- After remove_categories(['x'])
- Expected categories: ['c', 'b', 'a']
- Actual categories: ['a', 'b', 'c']
Again, the categories are unexpectedly sorted alphabetically.

3. ORDERED VS UNORDERED BEHAVIOR:
Tested the same operation on ordered categoricals:
- Input: Categorical(['c', 'b', 'a'], categories=['c', 'b', 'a', 'x'], ordered=True)
- After remove_categories(['x'])
- Result: ['c', 'b', 'a'] - Order is preserved correctly!

4. COMPARISON WITH OTHER METHODS:
Tested other category manipulation methods for consistency:
- remove_unused_categories(): Preserves original category order
- add_categories(): Preserves original category order
- set_categories(): Preserves specified category order
- remove_categories(): SORTS categories alphabetically (inconsistent!)

The bug is confirmed: remove_categories() unexpectedly sorts the remaining categories alphabetically for unordered categoricals, while preserving order for ordered categoricals. This is inconsistent with other similar methods.