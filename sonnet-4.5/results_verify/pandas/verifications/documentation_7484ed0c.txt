## Documentation Analysis

### Official Documentation Review

1. **Pandas Styling Documentation**: The official pandas documentation (https://pandas.pydata.org/docs/user_guide/style.html) provides extensive guidance on styling DataFrames but does not specifically document the `CSSResolver` class or its `size_to_pt` method.

2. **CSSResolver Class**: This is an internal utility class in `pandas.io.formats.css` that is not part of the public API. The class docstring states it is "A callable for parsing and resolving CSS to atomic properties."

3. **size_to_pt Method**: This method is not publicly documented. From the source code, it:
   - Converts various CSS units to point (pt) values
   - Rounds values to 5 decimal places
   - Formats integers without decimals (e.g., "10pt")
   - Formats decimals with the `f` format specifier

### Key Findings

1. **No explicit format specification**: There is no documentation specifying how many decimal places should be shown for non-integer pt values.

2. **Internal utility**: The `CSSResolver` and `size_to_pt` are internal utilities primarily used for converting CSS styles to formats like Excel. They are not part of the documented public API.

3. **CSS Standards**: Standard CSS does not require trailing zeros. Values like `1.5pt` and `1.500000pt` are functionally equivalent, but the shorter form is conventional and more readable.

4. **Related issues**: GitHub Issue #40024 shows pandas has had similar issues with trailing zeros in other formatting contexts.

### Conclusion

The documentation does not explicitly specify the expected format for decimal pt values. However, given that:
- This is used for CSS output
- CSS convention favors minimal representation
- The code already handles integers specially to avoid unnecessary ".0"

The excessive trailing zeros appear to be an unintended consequence rather than a deliberate design choice.