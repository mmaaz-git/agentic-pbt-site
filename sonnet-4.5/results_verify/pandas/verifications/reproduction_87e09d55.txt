## Reproduction of Bug

I successfully reproduced the bug described in the report.

### Hypothesis Test Results
The hypothesis test fails with the example:
- indexer = slice(1, None, -1)
- target_len = 0
- length_of_indexer returns 1 but the actual length of target[indexer] is 0

### Specific Test Case
The specific test case from the bug report also fails:
- indexer = slice(0, -20, None)
- target = []
- length_of_indexer returns -20
- Actual length of target[indexer] is 0

### Effect
The function `length_of_indexer` is returning negative values when it should return the actual length that would result from applying the indexer to the target. Since lengths cannot be negative in Python, and since slicing an empty list always returns an empty list (length 0), this is clearly incorrect behavior.

The bug manifests when:
1. The target is empty (length 0)
2. The slice has a negative stop value
3. The function doesn't properly handle the case where negative indices remain negative after adjustment for target length