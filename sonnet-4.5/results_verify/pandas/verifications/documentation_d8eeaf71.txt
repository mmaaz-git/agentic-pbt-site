Documentation Analysis for pandas.errors.AbstractMethodError
===========================================================

From the official pandas documentation:
---------------------------------------
AbstractMethodError is a custom exception that should be raised instead of NotImplementedError for abstract methods. It provides more specific error messages that indicate which concrete class needs to implement the method.

Key characteristics from documentation:
1. Purpose: Raise errors for abstract methods that must be implemented in concrete classes
2. Parameters:
   - class_instance: The class or instance where the abstract method is not implemented
   - methodtype: Optional parameter to specify the type of method (default is 'method')
3. Provides clearer error messages compared to generic NotImplementedError

Documentation examples show usage like:
```python
class Foo:
    @classmethod
    def classmethod(cls):
        raise pd.errors.AbstractMethodError(cls, methodtype="classmethod")
```

Expected error message format from documentation:
"This classmethod must be defined in the concrete class Foo"

From the source code analysis:
-----------------------------
The implementation at line 294-302 shows:
- Valid methodtype values are: {"method", "classmethod", "staticmethod", "property"}
- If an invalid methodtype is provided, a ValueError should be raised
- The error message format at line 298 is:
  f"methodtype must be one of {methodtype}, got {types} instead."

Documentation expectations for error messages:
---------------------------------------------
While the documentation does not explicitly specify the exact format of the ValueError message for invalid methodtype, it is a universal convention in error messages that:
1. "must be one of X" should list the valid options (X = valid choices)
2. "got Y instead" should show what was actually provided (Y = invalid input)

This is a standard pattern across Python libraries and is what users would reasonably expect. The current implementation violates this basic contract by swapping the positions of the valid types and the invalid input.