## Documentation Analysis for pandas.io.formats.css.CSSResolver.size_to_pt

### Function Documentation
The `size_to_pt` method has minimal documentation in the source code. The function signature shows:
```python
def size_to_pt(self, in_val, em_pt=None, conversions=UNIT_RATIOS) -> str:
```

There is no docstring or explicit documentation about:
- What input formats are supported
- Whether scientific notation should be supported
- The expected behavior for invalid inputs

### CSS Specification Compliance

According to the W3C CSS specifications:

1. **CSS Values and Units Module Level 3** (https://www.w3.org/TR/css-values-3/):
   - CSS explicitly supports scientific notation in numeric values
   - Numbers can use "the letter 'e' or 'E' followed by an integer indicating the base-ten exponent"
   - Examples: `1e-5`, `1.5e3`, `6.022E+23`

2. **CSS Syntax Module Level 3** (https://www.w3.org/TR/css-syntax-3/):
   - Defines the exact grammar for CSS numeric tokens
   - Pattern: `[+-]?(\d+(\.\d+)?|\.\d+)([eE][+-]?\d+)?`
   - Scientific notation is a core part of CSS number parsing

### Key Finding

The CSS specification **explicitly requires** support for scientific notation in numeric values. This is not an optional or obscure feature - it's a fundamental part of the CSS number syntax.

### Pandas Context

The `CSSResolver` class is part of pandas' CSS processing utilities, used primarily in the `Styler` functionality for formatting HTML output. As such, it should follow CSS specifications to ensure compatibility with browsers and other CSS consumers.

### Conclusion

The lack of support for scientific notation in `size_to_pt` is:
1. A deviation from the CSS specification
2. Not documented as an intentional limitation
3. A silent failure that returns incorrect values rather than raising an error

Since the function's purpose is to parse CSS size values, and CSS explicitly requires scientific notation support, this is a legitimate bug rather than a missing feature or documentation issue.