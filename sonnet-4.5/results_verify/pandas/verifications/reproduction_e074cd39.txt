## Bug Reproduction Report

I have successfully reproduced the bug described in the report. The issue is confirmed.

### Property-Based Test Reproduction

The hypothesis test fails immediately with the reported failing input:
- values=[0.0, 0.0]
- fill_val=0.0
- indices=[0, -1, 1]

When calling `take()` with these inputs:
- Index result: [0.0, nan, 0.0]
- Array result: [0.0, 0.0, 0.0]

The Index returns `nan` for the -1 index position instead of the provided fill_value of 0.0.

### Simple Example Reproduction

The simple example also reproduces the bug:
- Input: Index([10.0, 20.0, 30.0]) and array([10.0, 20.0, 30.0])
- Indices: [0, -1, 2]
- Fill value: 99.0

Results:
- Index result: [10.0, nan, 30.0]
- Array result: [10.0, 99.0, 30.0]

The Index incorrectly returns `nan` instead of the provided fill_value of 99.0.

### Effect

The bug causes `pandas.api.extensions.take()` to ignore the user-provided `fill_value` parameter when called with a `pd.Index` object. Instead of using the specified fill_value (e.g., 99.0 or 0.0), it always returns the Index's default NA value (NaN for float types). This creates an inconsistency with how the same function behaves on numpy arrays, which correctly respect the fill_value parameter.

The code explicitly discards the fill_value parameter, as shown in the source code comment at line 1169: "Note: we discard fill_value and use self._na_value". This is not just an oversight but an intentional design decision that contradicts the documented API behavior.