## Documentation Analysis

### Official Documentation Review

#### Source Code Docstring
From `/home/npc/miniconda/lib/python3.13/site-packages/pandas/io/sas/sasreader.py`:

Lines 110-112 clearly state:
```
format : str {'xport', 'sas7bdat'} or None
    If None, file format is inferred from file extension. If 'xport' or
    'sas7bdat', uses the corresponding format.
```

Key phrase: **"inferred from file extension"**

#### Online Documentation
The pandas official documentation at https://pandas.pydata.org/docs/reference/api/pandas.read_sas.html confirms:
- When format=None (default), pandas will "infer file format from file extension"
- The two supported formats are 'xport' and 'sas7bdat'

### Documentation Intent
The documentation is unambiguous:
1. It explicitly states format detection is based on "file extension"
2. A file extension is the suffix after the last dot in a filename
3. The term "extension" has a well-established meaning in computing - it's the final part of a filename after the last period

### Current Implementation vs Documentation
The current implementation using substring matching (`if ".xpt" in fname`) contradicts the documented behavior. The documentation promises extension-based detection, but the code delivers substring-based detection.

### Examples of Discrepancy
According to documentation:
- "data.xpt" should be detected as xport (extension is .xpt) ✓
- "data.xpt.backup" should NOT be detected as xport (extension is .backup) ✗
- "backup.xpt.old" should NOT be detected as xport (extension is .old) ✗

The current implementation incorrectly identifies the last two examples as xport files because they contain ".xpt" as a substring.

### Conclusion
The documentation clearly and consistently describes extension-based format detection. The implementation fails to match this documented behavior, making this a valid bug rather than a documentation issue.