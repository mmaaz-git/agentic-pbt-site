DOCUMENTATION REVIEW FOR PANDAS CATEGORICAL NULL HANDLING
==========================================================

1. PANDAS CATEGORICAL DOCUMENTATION
-----------------------------------
From the official pandas documentation on categorical data:
- Categorical data in pandas uses integer codes to represent categories
- The sentinel value -1 is the documented standard for representing null/missing values in categorical codes
- Quote from documentation: "When working with the Categorical's `codes`, missing values will always have a code of `-1`."
- The `from_codes()` constructor explicitly allows creating categoricals from existing codes and categories

2. DATAFRAME INTERCHANGE PROTOCOL DOCUMENTATION
-----------------------------------------------
The DataFrame interchange protocol is an emerging standard for data exchange between dataframe libraries:
- Purpose: Enable conversion between different dataframe implementations (pandas, Vaex, cuDF, etc.)
- Current status: From pandas 2.3+, the documentation recommends using Arrow C Data Interface over the interchange protocol
- Warning in documentation: "Due to severe implementation issues, we recommend only considering using the interchange protocol in the following cases..."

3. CATEGORICAL HANDLING IN INTERCHANGE PROTOCOL
-----------------------------------------------
From the interchange protocol specification:
- Categorical columns have a `describe_categorical()` method returning metadata
- Categories are described as "dictionary-encoded types"
- Missing values can be represented via different mechanisms: USE_NAN, USE_SENTINEL, USE_BITMASK, USE_BYTEMASK
- The protocol allows flexibility in how different libraries represent missing and categorical data

4. SOURCE CODE COMMENTS
-----------------------
In the actual implementation at line 251-252 of from_dataframe.py:
- Comment states: "Doing module in order to not get ``IndexError`` for out-of-bounds sentinel values in `codes`"
- This comment acknowledges sentinel values exist but treats them as just "out-of-bounds" rather than special null indicators

5. NULL HANDLING EXPECTATIONS
-----------------------------
Based on the documentation:
- The interchange protocol should preserve data semantics during conversion
- Null values in categorical data (represented by -1 codes) are a fundamental feature, not an edge case
- The `set_nulls` function (line 263) is supposed to handle null values, but it operates after the categorical is already constructed

6. KEY FINDING
--------------
The documentation establishes that:
1. Code -1 is the official pandas sentinel for null values in categoricals
2. The interchange protocol is meant to preserve data semantics
3. There is NO documentation stating that null values in categoricals should be converted to actual category values
4. The modulo operation converting -1 to valid indices is not documented behavior