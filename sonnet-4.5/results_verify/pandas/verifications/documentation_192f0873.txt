## Documentation Findings for InfinityType and NegativeInfinityType

### Source and Purpose
The InfinityType and NegativeInfinityType classes in pandas.util.version are vendored from the Python packaging library (pypa/packaging). According to the comments at the top of the file, this code was vendored from https://github.com/pypa/packaging on 04/30/2021 (changeset ae891fd74d6dd4c6063bb04f2faeadaac6fc6313).

### Official Documentation
1. **pandas documentation**: No specific documentation was found for the pandas.util.version module or these Infinity classes. The module appears to be internal utility code.

2. **packaging library documentation**: The official packaging library documentation at https://packaging.pypa.io does not document InfinityType or NegativeInfinityType classes. These appear to be internal implementation details not exposed as public API.

3. **Source code examination**: Examining the packaging library source on GitHub shows that InfinityType and NegativeInfinityType are used as internal sentinel values for version comparison operations.

### Intended Usage
Based on code analysis:
- These classes serve as sentinel values in the version comparison system
- InfinityType represents a value that is greater than any other value
- NegativeInfinityType represents a value that is less than any other value
- They are used in the `_cmpkey()` function to handle special cases in version ordering:
  - Missing pre-release segments get Infinity (to sort after versions with pre-releases)
  - Missing post-release segments get NegativeInfinity (to sort before versions with post-releases)
  - Missing dev segments get Infinity (to sort after versions with dev segments)
  - Missing local segments get NegativeInfinity (to sort before versions with local segments)

### Comparison Behavior Documentation
The implementation shows:
- InfinityType.__gt__ returns True for ALL comparisons
- InfinityType.__lt__ returns False for ALL comparisons
- NegativeInfinityType.__lt__ returns True for ALL comparisons
- NegativeInfinityType.__gt__ returns False for ALL comparisons

There is NO documentation specifying what the expected behavior should be for self-comparison (e.g., Infinity > Infinity). The implementation appears to prioritize simplicity (always return True/False) over mathematical correctness.