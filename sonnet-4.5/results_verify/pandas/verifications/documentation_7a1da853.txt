Documentation Analysis for pandas to_json/read_json
====================================================

After reviewing the pandas documentation and related resources, here's what I found:

1. Double Precision Limitation:
   - The pandas DataFrame.to_json() method has a `double_precision` parameter that controls the number of decimal places when encoding floating point values.
   - The documentation explicitly states: "The number of decimal places to use when encoding floating point values. The possible maximal value is 15."
   - The default value for double_precision is 10.
   - Attempting to set double_precision greater than 15 raises a ValueError.

2. Known Issue with Precision:
   - GitHub issue #38437 confirms that pandas cannot correctly dump/load numbers requiring more than 15 digits of precision.
   - The issue stems from pandas using an older version of ujson (ultrajson) internally.
   - 64-bit floating point numbers require up to 17 decimal digits for complete round-trip accuracy, but pandas limits this to 15.

3. The precise_float Parameter:
   - read_json() has a `precise_float` parameter (default False) that can "enable usage of higher precision (strtod) function when decoding string to double values."
   - The documentation describes the default behavior as using "fast but less precise builtin functionality."

4. No Explicit Guarantees:
   - The documentation does NOT explicitly guarantee that all valid finite float values will round-trip correctly.
   - The documentation does NOT specify behavior for edge cases near sys.float_info.max.
   - The documentation does NOT warn about potential data corruption for large float values.

5. JSON Standard Compliance:
   - The JSON specification (ECMA-404) does not impose limits on the magnitude or precision of numbers.
   - Python's standard json module handles the test case correctly without data corruption.

Key Finding: The documentation acknowledges a 15-digit precision limit but does not explicitly warn users that valid finite floats near the maximum value may become infinity after round-tripping through to_json/read_json.