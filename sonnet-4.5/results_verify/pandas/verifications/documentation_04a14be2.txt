DOCUMENTATION FINDINGS FOR pandas.io.sas.sas7bdat._parse_datetime

1. PUBLIC API DOCUMENTATION:
The pandas public documentation (pandas.pydata.org) does NOT document the _parse_datetime function. The function name starts with an underscore, indicating it's intended as a private/internal function. The public API only exposes pandas.read_sas() which reads SAS files in either XPORT or SAS7BDAT format.

2. SOURCE CODE DOCUMENTATION:
The _parse_datetime function has NO docstring or inline documentation. It's a simple function defined at line 67 of sas7bdat.py with the signature:
   def _parse_datetime(sas_datetime: float, unit: str)

The function appears to convert SAS datetime values (which use 1960-01-01 as their epoch) to Python datetime objects.

3. RELATED DOCUMENTED FUNCTION:
There IS a documented function _convert_datetimes() at line 81 with a proper docstring that states:
   """
   Convert to Timestamp if possible, otherwise to datetime.datetime.
   SAS float64 lacks precision for more than ms resolution so the fit
   to datetime.datetime is ok.

   Parameters
   ----------
   sas_datetimes : {Series, Sequence[float]}
      Dates or datetimes in SAS
   unit : {'d', 's'}
      "d" if the floats represent dates, "s" for datetimes

   Returns
   -------
   Series
      Series of datetime64 dtype or datetime.datetime.
   """

4. FUNCTION USAGE:
- _parse_datetime is NEVER called anywhere in the pandas codebase (confirmed via grep search)
- _convert_datetimes IS actively used in SAS7BDATReader class (lines 598 and 600)
- The _parse_datetime function is effectively dead code

5. DESIGN INTENT:
The presence of two similar functions (_parse_datetime and _convert_datetimes) suggests that _parse_datetime may have been an earlier implementation that was replaced by the vectorized _convert_datetimes function but was never removed from the codebase.

6. PRIVATE vs PUBLIC:
The underscore prefix indicates this is a private function not intended for public use. There are no guarantees about its behavior, error handling, or continued existence in the codebase.