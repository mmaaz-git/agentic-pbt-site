## Documentation Analysis for waitForPaste and waitForNewPaste

### Source Code Documentation (Docstrings)

The functions have clear docstrings in the source code (pandas/io/clipboard/__init__.py):

**waitForPaste (lines 694-700):**
```python
def waitForPaste(timeout=None):
    """This function call blocks until a non-empty text string exists on the
    clipboard. It returns this text.

    This function raises PyperclipTimeoutException if timeout was set to
    a number of seconds that has elapsed without non-empty text being put on
    the clipboard."""
```

**waitForNewPaste (lines 714-721):**
```python
def waitForNewPaste(timeout=None):
    """This function call blocks until a new text string exists on the
    clipboard that is different from the text that was there when the function
    was first called. It returns this text.

    This function raises PyperclipTimeoutException if timeout was set to
    a number of seconds that has elapsed without non-empty text being put on
    the clipboard."""
```

### Key Documentation Points

1. **Timeout Behavior:** Both functions explicitly document that they should raise `PyperclipTimeoutException` when a timeout is specified and the timeout period elapses without the expected clipboard content appearing.

2. **Blocking Behavior:** Both functions are documented as blocking calls that wait for clipboard content.

3. **Exception Types:** The documentation is very specific about raising `PyperclipTimeoutException` for timeout scenarios. There is NO mention of `PyperclipException` being raised by these functions.

4. **Pyperclip Documentation:** The official pyperclip documentation confirms that `waitForNewPaste()` should raise `PyperclipTimeoutException` after the timeout period.

### What's NOT Documented

1. The documentation does not specify what should happen when the clipboard mechanism is completely unavailable (e.g., when `set_clipboard('no')` is used).

2. The documentation does not mention that `PyperclipException` could be raised by these functions.

3. There's no documentation about how these functions should handle errors from the underlying `paste()` function.

### Documentation Contract

The documented contract is clear:
- These functions should block and wait for clipboard content
- If a timeout is specified and expires, they should raise `PyperclipTimeoutException`
- They should return the clipboard text when it becomes available

The documentation establishes a clear expectation that timeout-related failures should result in `PyperclipTimeoutException`, not any other exception type.