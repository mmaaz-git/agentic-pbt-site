## pandas.io.sas.read_sas Documentation Analysis

The official pandas documentation states the following about the `format` parameter in `read_sas`:

**Parameter**: format : str {'xport', 'sas7bdat'} or None
**Behavior**: "If None, file format is inferred from file extension."

The documentation explicitly states that when format is None, the function will infer the format from the **file extension**. This is a clear statement about the expected behavior.

### Key Documentation Findings:

1. **File Extension Inference**: The documentation clearly states that the format is "inferred from file extension" when format=None. In standard computing terminology, a file extension is the suffix that comes after the last dot in a filename (e.g., ".txt", ".pdf", ".xpt", ".sas7bdat").

2. **Supported Formats**: The documentation confirms that two formats are supported:
   - 'xport' (typically .xpt files)
   - 'sas7bdat' (typically .sas7bdat files)

3. **No Ambiguity about Extensions**: The documentation doesn't suggest that extensions can be anywhere in the filename - it specifically says "file extension" which has a well-defined meaning in computing.

### Source Code Implementation (lines 141-144):

The actual implementation uses:
```python
if ".xpt" in fname:
    format = "xport"
elif ".sas7bdat" in fname:
    format = "sas7bdat"
```

This uses substring matching (`in` operator) rather than checking if the filename ends with the extension. This directly contradicts the documented behavior of inferring from "file extension."

### Conclusion from Documentation:

The documented behavior is clear: format should be inferred from the file extension (the suffix at the end of the filename). The current implementation using substring matching violates this documented behavior.