## Documentation Analysis for import_optional_dependency

### Function Docstring (Lines 91-124 in _optional.py)
The docstring clearly specifies the behavior for `errors='ignore'`:

> ignore: If the module is not installed, return None, otherwise, return the module, even if the version is too old. It's expected that users validate the version locally when using ``errors="ignore"``

This means:
1. If module NOT installed → return None
2. If module installed but version too old → **return the module** (not None)
3. Users are expected to handle version validation themselves

### Documentation Contract
The documentation explicitly states that when `errors='ignore'`:
- The function should return the module even when its version is too old
- The function should NOT raise ImportError for version issues
- The function should return None only when the module is not installed at all

### Implementation vs Documentation
Current implementation (lines 149-166):
1. When version is too old and errors='ignore': Returns None (line 166) - **VIOLATES CONTRACT**
2. When module lacks __version__ attribute: Raises ImportError (line 78 via get_version) - **VIOLATES CONTRACT**

The documentation is clear and unambiguous. The implementation does not match the documented behavior. This is a legitimate bug where the code fails to honor its documented API contract.