## Bug Reproduction Analysis

### Test Results:

The bug has been successfully reproduced. The test results confirm that:

1. **Scientific notation inputs fail**:
   - Input "1e-5pt" returns "0pt" instead of "0.00001pt"
   - Input "2.5e3px" returns "0pt" instead of "1875pt" (2500 * 0.75 conversion)
   - All inputs with scientific notation trigger CSSWarning: "Unhandled size"

2. **Regular notation works correctly**:
   - Input "0.00001pt" correctly returns "0.00001pt"
   - Input "2500px" correctly returns "1875pt" (using px to pt conversion of 0.75)

3. **Root cause confirmed**:
   The regex pattern `r"^(\S*?)([a-zA-Z%!].*)"` incorrectly parses scientific notation:
   - For "1e-5pt": val='1', unit='e-5pt' (wrong split)
   - For "2.5e3px": val='2.5', unit='e3px' (wrong split)

   The 'e' or 'E' in scientific notation is matched as the start of the unit, not part of the number.

4. **Property-based test failure**:
   The Hypothesis test confirms systematic failure for any input using scientific notation format.

5. **Proposed fix verification**:
   The suggested regex `r"^([-+]?[0-9]*\.?[0-9]+(?:[eE][-+]?[0-9]+)?)([a-zA-Z%!].*)"` correctly parses:
   - "1e-5pt" -> val='1e-5', unit='pt' (correct)
   - "2.5e3px" -> val='2.5e3', unit='px' (correct)

### Technical Assessment:
The bug is real and affects the parsing of valid CSS numeric values. Scientific notation is valid CSS syntax according to W3C specifications, so the function should handle it correctly.