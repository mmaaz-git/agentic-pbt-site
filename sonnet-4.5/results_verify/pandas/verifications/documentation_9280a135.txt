## Documentation Analysis

### Official pandas.api.interchange.from_dataframe Documentation
The official documentation states:
- Purpose: "Build a pandas DataFrame from any DataFrame supporting the interchange protocol"
- No mention of string encoding limitations or surrogate character handling
- No specification of what data types or string content is supported/unsupported
- Does not document any UnicodeEncodeError that might occur

### DataFrame Interchange Protocol Specification
From the data-apis.org specification:
- **Explicit Requirement**: Strings are specified as UTF-8 encoded (DtypeKind.STRING = 21 # UTF-8)
- The protocol explicitly declares strings must be UTF-8
- No mention of how to handle strings that cannot be encoded as UTF-8
- No documentation about surrogate character handling

### Key Documentation Gaps
1. **Pandas Documentation**: Does not mention that strings containing surrogate characters will fail
2. **Protocol Specification**: Explicitly requires UTF-8 but doesn't address edge cases where UTF-8 encoding is impossible
3. **Round-trip Guarantee**: Neither documentation mentions whether round-trip conversion is guaranteed for all valid pandas DataFrames

### UTF-8 and Surrogate Characters
Technical background:
- UTF-16 surrogate characters (U+D800 to U+DFFF) are reserved code points
- These cannot be encoded in UTF-8 by design (it's a UTF-8 specification requirement)
- Python strings can contain these characters, and pandas DataFrames accept them
- This creates a fundamental incompatibility between what pandas accepts and what the interchange protocol can handle

### Conclusion
The documentation does not explicitly state that surrogate characters are unsupported, but the protocol specification's requirement for UTF-8 encoding implicitly excludes them. This is a documentation gap where the limitations should be explicitly stated.