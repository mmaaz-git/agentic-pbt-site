DOCUMENTATION ANALYSIS
======================

Function: pandas.io.excel._base.inspect_excel_format
Location: Private/internal module (pandas.io.excel._base)

DOCSTRING ANALYSIS
------------------

The function's docstring (lines 1376-1398) explicitly states:

    """
    Inspect the path or content of an excel file and get its format.

    ...

    Returns
    -------
    str or None
        Format of file if it can be determined.

    Raises
    ------
    ValueError
        If resulting stream is empty.
    BadZipFile
        If resulting stream does not have an XLS signature and is not a valid zipfile.
    """

KEY DOCUMENTATION POINTS:

1. **Clear Contract**: The docstring unambiguously states that ValueError should be raised
   "If resulting stream is empty."

2. **No Ambiguity**: There is no conditional language like "may raise" or "might raise".
   The documentation definitively states that ValueError IS raised for empty streams.

3. **Return Values**: The function should return either a string (format type) or None
   when the format cannot be determined - but only AFTER successfully reading from a
   non-empty stream.

PUBLIC API STATUS
-----------------

- The function is in a private module (note the underscore in `_base`)
- Not exposed through pandas.io.excel public API
- Not documented in public pandas documentation (404 on official docs)
- Must be imported directly from pandas.io.excel._base

However, the function still has comprehensive docstring documentation that forms a
contract with users who import it directly.

CONCLUSION
----------

The documentation is clear and unambiguous: empty streams should raise ValueError.
The current implementation violates this documented behavior by returning None instead.
This is not a documentation error - the documentation correctly describes the intended
behavior, but the implementation has a bug.