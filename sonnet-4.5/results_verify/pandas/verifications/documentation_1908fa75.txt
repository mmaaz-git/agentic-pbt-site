## Documentation Analysis

### Official pandas Documentation:

1. **describe() Method Documentation:**
   - States that percentiles should "fall between 0 and 1"
   - Default percentiles are [0.25, 0.5, 0.75]
   - The 50th percentile (0.5) is the median
   - Users can customize percentiles via the percentiles parameter

2. **Source Code Guarantees:**

   The source code in `pandas.core.methods.describe._refine_percentiles()` explicitly contains:
   ```python
   # median should always be included
   if 0.5 not in percentiles:
       percentiles.append(0.5)
   ```

   This is a **documented invariant in the code** that guarantees the median (50%) will always be included in the output, even if the user doesn't specify it in their percentiles list.

3. **Valid Input Range:**
   - The documentation states percentiles must be between 0 and 1
   - The code calls `validate_percentile(percentiles)` to enforce this
   - Values like 5e-324 are technically within [0, 1] and should be valid

### Key Finding:

The bug report is correct that there is a **documented guarantee** that the median should always be included. The code explicitly adds 0.5 to the percentiles list if not present, with the comment "median should always be included".

When the function produces output without the '50%' label (as happens with extremely small percentiles like 5e-324), it violates this documented invariant. The malformed 'nan%' labels also indicate the function is not handling valid inputs correctly.