DOCUMENTATION FINDINGS FOR PANDAS GROUPBY WITH CATEGORICAL DATA

Based on review of the official pandas documentation, here are the key findings:

1. CATEGORICAL ORDERING BEHAVIOR:
From the categorical user guide, pandas explicitly states that:
- "Order is defined by the order of categories, not lexical order of the values"
- When ordered=True is set, "the order of the categories has a meaning and certain operations are possible"
- "Sorting will use the order defined by categories"

2. GROUPBY SORT PARAMETER:
The DataFrame.groupby API documentation states:
- sort=True: "Sort group keys" (default behavior)
- sort=False: "Get better performance by turning this off" and groups will "appear in the same order as they did in the original DataFrame"
- Important quote: "Specifying sort=False with an ordered categorical grouper will no longer sort the values"

3. OBSERVED PARAMETER:
The documentation clearly states:
- observed=False: Returns a "cartesian product of all possible groupers values" including unobserved categories
- observed=True: Returns only observed group values
- When observed=False with categoricals, all categories from the original categorical definition are included in the result

4. KEY FINDING - INTERACTION OF SORT AND OBSERVED:
The documentation does NOT explicitly specify how sort=False should behave with observed=False for categorical data. However, it does state:
- With sort=False, groups appear "in the same order as they did in the original DataFrame"
- With sort=False and ordered categorical, it "will no longer sort the values"

5. CRITICAL AMBIGUITY:
The documentation is ambiguous about what should happen when:
- Using an ordered categorical grouper
- With observed=False (requiring all categories to be shown)
- And sort=False (which says groups appear in DataFrame order)

The documentation doesn't clarify whether:
a) The categorical's defined order should be maintained (since it's ordered=True)
b) The appearance order should be used (since sort=False says use DataFrame order)
c) Some hybrid where observed categories use appearance order and unobserved use categorical order

This ambiguity is at the heart of the reported bug - the documentation doesn't clearly specify the expected behavior for this specific combination of parameters.