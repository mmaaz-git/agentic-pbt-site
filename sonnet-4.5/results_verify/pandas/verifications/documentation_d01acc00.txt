DOCUMENTATION ANALYSIS FOR format_percentiles

The function docstring is very clear and explicit about the behavior:

1. **Purpose**: "Outputs rounded and formatted percentiles."

2. **Parameters**: Takes percentiles as list-like, containing floats from interval [0,1]

3. **Critical Documentation in Notes Section**:
   - Line 1562-1564: "Rounding precision is chosen so that: (1) if any two elements of ``percentiles`` differ, they remain different after rounding (2) no entry is *rounded* to 0% or 100%."
   - Line 1565: "Any non-integer is always rounded to at least 1 decimal place."

4. **Key Example in Documentation**:
   - Line 1571-1572 shows: format_percentiles([0.01999, 0.02001, 0.5, 0.666666, 0.9999])
   - Expected output: ['1.999%', '2.001%', '50%', '66.667%', '99.99%']
   - Note that 0.9999 becomes '99.99%' NOT '100%'

5. **Important clarification at Line 1574**:
   - "No element is rounded to 0% or 100% (unless already equal to it)."
   - This explicitly states that values should NOT be rounded to 0% or 100% unless the input is EXACTLY 0 or 1.

6. **Second Example** (Lines 1577-1578):
   - Input: [0, 0.5, 0.02001, 0.5, 0.666666, 0.9999]
   - Output: ['0%', '50%', '2.0%', '50%', '66.67%', '99.99%']
   - Shows that 0 (exactly) becomes '0%' which is allowed
   - Shows that 0.9999 becomes '99.99%' NOT '100%'

The documentation is VERY EXPLICIT that no entry should be rounded to 0% or 100% unless it's already equal to those values. The parenthetical "(unless already equal to it)" makes it clear that only exact 0 or 1 values should produce 0% or 100%.