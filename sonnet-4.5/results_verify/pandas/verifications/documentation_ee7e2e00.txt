# Documentation Analysis

## SparseArray Documentation Findings

### Official pandas Documentation
- SparseArray is documented as "An ExtensionArray for storing sparse data"
- It is part of pandas.arrays module and extends pandas.api.extensions.ExtensionArray
- The documentation doesn't explicitly describe the behavior of argmin/argmax methods
- However, SparseArray does implement argmin() and argmax() methods (confirmed via introspection)

### Numpy Compatibility and Expected Behavior

1. **NumPy argmin/argmax behavior:**
   - When all values are equal, numpy returns index 0 for both argmin() and argmax()
   - This is documented numpy behavior: "When there are multiple minimum/maximum values, the indices corresponding to the first occurrence are returned"
   - This works for any array size and any value (0, positive, negative)

2. **Pandas Series behavior:**
   - pd.Series.argmin() and argmax() follow numpy's behavior exactly
   - When all values are equal, they return index 0
   - Documentation states: "Return int position of the smallest/largest value in the Series"
   - Documentation also states: "If the minimum is achieved in multiple locations, the first row position is returned"

3. **Other pandas ExtensionArrays:**
   - pd.array([0,0,0]) creates an IntegerArray which correctly returns 0 for argmin()
   - SparseArray is confirmed to be a pandas ExtensionArray
   - As an ExtensionArray, it should provide consistent behavior with other pandas data structures

### Implicit Contract

While not explicitly documented for SparseArray, there are strong implicit expectations:
1. **Consistency with pandas ecosystem:** As a pandas ExtensionArray, SparseArray should behave consistently with Series and other array types
2. **Numpy compatibility:** pandas generally follows numpy conventions for array operations
3. **Valid operations on non-empty arrays:** argmin/argmax should work on any non-empty array, regardless of the values it contains

### Documentation Gap

The specific behavior of SparseArray.argmin/argmax when all values equal the fill_value is not explicitly documented. However, based on:
- The behavior of numpy arrays
- The behavior of pandas Series
- The behavior of other pandas ExtensionArrays
- The general principle that argmin/argmax should work on any non-empty array

The expected behavior is clear: it should return index 0 when all values are equal (including when all values equal the fill_value).