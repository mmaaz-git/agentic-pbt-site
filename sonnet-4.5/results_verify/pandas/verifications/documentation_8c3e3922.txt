## Documentation Analysis for pandas.errors.AbstractMethodError

### Official Documentation Found

1. **Class Purpose**:
   - Documented as an error to raise instead of NotImplementedError for abstract methods
   - Intended to provide clearer error messages for methods that must be implemented in concrete classes

2. **Parameters Documentation**:
   - `class_instance`: The class or instance where the abstract method is not implemented
   - `methodtype`: Optional string parameter, defaults to "method"
   - The documentation shows examples with "classmethod" as a valid value

3. **Valid methodtype Values**:
   - The documentation does NOT explicitly list what values are valid for methodtype
   - Only shows examples using "method" (default) and "classmethod"
   - No documentation found that specifies the complete set of valid values {"method", "classmethod", "staticmethod", "property"}

4. **Error Message Requirements**:
   - The documentation does NOT specify how validation error messages should be formatted
   - The documentation does NOT mention that invalid methodtype values should raise a ValueError
   - No requirements found about the format of ValueError messages for invalid parameters

### Key Finding

The documentation is silent on:
1. What happens when an invalid methodtype is provided
2. What the complete set of valid methodtype values is
3. How error messages for invalid parameters should be formatted

The implementation includes validation logic that raises a ValueError for invalid methodtype values, but this validation behavior is completely undocumented. The error message format for this validation is therefore an implementation detail not covered by any specification or documentation.

### Conclusion on Documentation

Since the documentation does not specify:
- That invalid methodtype values should raise an error
- What error should be raised for invalid values
- How such error messages should be formatted

The bug report concerns an undocumented implementation detail. However, the current implementation's error message is objectively backwards and confusing, making it a quality issue worth addressing.