REPRODUCTION OF BUG

The bug report is accurate. I have successfully reproduced the ZeroDivisionError when accessing the density property on an empty SparseArray.

Test results:
1. Simple reproduction case:
   - Created an empty SparseArray with: arr.SparseArray([], fill_value=0)
   - Attempting to access sparse.density raises ZeroDivisionError
   - Error occurs at line 708 in array.py: self.sp_index.npoints / self.sp_index.length
   - The division fails because self.sp_index.length is 0 for empty arrays

2. Hypothesis test:
   - The provided Hypothesis test correctly identifies the issue
   - Fails immediately with values=[] (empty list)
   - The test expects density to return either 0 or NaN, but instead gets ZeroDivisionError

3. Analysis of internal state:
   - For empty SparseArray: sp_index.npoints=0, sp_index.length=0
   - For non-empty arrays: density works correctly (e.g., [0,0,1,1,1] returns 0.6)
   - Arrays with all sparse values work correctly (e.g., [0,0,0] returns 0.0)

The bug is real and reproducible. The density property calculation doesn't handle the edge case of empty arrays, causing a division by zero when sp_index.length is 0.