Documentation Analysis
=====================

After reviewing the pandas documentation and source code, I found the following:

1. Documentation Structure:
   Both split() and rsplit() share the same documentation template (_shared_docs["str_split"]) with different parameter substitutions.

2. split() Method Documentation:
   - Clearly documents the `regex` parameter (added in version 1.4.0)
   - Parameter description states: "pat : str or compiled regex, optional"
   - Has extensive documentation on how the regex parameter works:
     * regex=True: treats pattern as regular expression
     * regex=False: treats pattern as literal string
     * regex=None (default): uses heuristic based on pattern length
   - Multiple examples demonstrate regex usage

3. rsplit() Method Documentation:
   - Uses the same base template as split()
   - However, the parameter substitutions explicitly REMOVE regex-related documentation:
     * "pat_regex": "" (empty string, no regex mention)
     * "pat_description": "String to split on" (no regex mention)
     * "regex_argument": "" (empty, no regex parameter documentation)
     * "regex_examples": "" (empty, no regex examples)
   - The documentation states: "Without the `n` parameter, the outputs of `rsplit` and `split` are identical"
   - Documentation describes rsplit as: "Splits string around given separator/delimiter, starting from the right"

4. Key Documentation Finding:
   The documentation for rsplit() explicitly describes it as splitting "starting from the right" and shows it should behave identically to split() except for the direction when n is used. However, the documentation intentionally removes all regex-related content for rsplit().

5. API Relationship:
   - The documentation presents split() and rsplit() as mirror operations
   - Both are listed in each other's "See Also" sections
   - The shared examples show them producing identical output when n is not specified
   - The only documented difference is the direction of splitting when n is specified

6. Implementation Notes:
   Looking at the code:
   - split() accepts: pat: str | re.Pattern | None = None, regex: bool | None = None
   - rsplit() accepts: pat=None (no type hint for regex patterns), no regex parameter
   - split() calls _str_split() which has regex handling
   - rsplit() calls _str_rsplit() which appears to only handle literal strings

Conclusion:
The documentation does NOT explicitly state that rsplit() should have regex support. In fact, the documentation template for rsplit() intentionally removes all regex-related documentation by setting those template variables to empty strings. This suggests that the lack of regex support in rsplit() may be intentional, not a bug.