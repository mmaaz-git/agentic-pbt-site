Documentation Analysis
======================

Documentation Review:
--------------------
1. pandas.api.interchange.from_dataframe documentation:
   - No specific mention of string encoding requirements
   - No mention of UTF-8 requirements or limitations
   - No documentation about handling of invalid UTF-8 or surrogate characters
   - Simply states it converts from interchange object to pandas DataFrame

2. DataFrame.__dataframe__() documentation:
   - Returns a dataframe interchange object
   - References the interchange protocol spec at data-apis.org
   - No mention of string encoding limitations or UTF-8 requirements
   - No warning about potential issues with certain string content

3. Interchange Protocol Specification (data-apis.org):
   - Defines STRING datatype as "UTF-8" (comment in code: STRING = 21  # UTF-8)
   - This is the ONLY mention of UTF-8 encoding for strings
   - No explicit documentation about:
     * What happens with invalid UTF-8
     * How to handle surrogate characters
     * Whether UTF-8 validation is required
     * Error handling for encoding issues
   - The specification is minimal and doesn't address edge cases

4. PandasColumn._get_data_buffer() documentation:
   - Minimal docstring: "Return the buffer containing the data and the buffer's associated dtype"
   - No mention of encoding requirements or potential errors

5. Related pandas behavior:
   - CSV and JSON export also fail with lone surrogates (consistent behavior)
   - But pandas allows storing such strings internally (inconsistent with export)

Documentation Gaps:
------------------
1. NOWHERE is it documented that:
   - The interchange protocol requires valid UTF-8
   - Lone surrogates will cause crashes
   - Strings must be encodable to UTF-8
   - UnicodeEncodeError can be raised

2. The interchange protocol specification only has a comment saying "UTF-8" but doesn't specify:
   - Whether this is a strict requirement
   - How implementations should handle invalid sequences
   - Whether validation is required

3. No user-facing documentation warns about this limitation

Conclusion:
-----------
The documentation does not adequately specify UTF-8 encoding requirements or limitations. While the interchange protocol specification mentions UTF-8 in a comment, there is no formal requirement documented that strings MUST be valid UTF-8, nor any documentation about error handling for invalid sequences. Users have no way to know from the documentation that lone surrogates will cause crashes.