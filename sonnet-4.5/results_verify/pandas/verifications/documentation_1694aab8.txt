## Documentation Analysis

### ArrowExtensionArray Constructor Documentation:
1. The ArrowExtensionArray class accepts `pa.Array` or `pa.ChunkedArray` in its constructor
2. The documentation states it's "experimental" and implementation may change
3. The class documentation shows examples like `pd.array([1, 1, None], dtype="int64[pyarrow]")` with explicit types
4. **No warnings about null-typed arrays**: The documentation does NOT warn that creating arrays from all-None values without explicit types will create problematic null-typed arrays

### fillna Method Documentation:
1. The fillna method is inherited from ExtensionArray base class
2. Documentation states: "Fill NA/NaN values using the specified method"
3. Parameters include:
   - value: "scalar, array-like" used to fill missing values
   - method: various fill methods (pad, backfill, etc.)
   - limit: maximum number of consecutive NaNs to fill
4. **No mention of null type limitations**: The documentation doesn't warn about null-typed arrays being unable to accept non-null fill values

### PyArrow Null Type Behavior:
1. PyArrow's null type is a special type that can ONLY hold null values
2. Attempting to create a scalar with null type and non-null value raises `ArrowInvalid: Invalid null value`
3. This is a fundamental PyArrow limitation - null type arrays cannot hold non-null values by design

### Key Documentation Gaps:
1. ArrowExtensionArray constructor doesn't warn about accepting null-typed arrays
2. fillna documentation doesn't mention that it will fail on null-typed arrays
3. No guidance that users should specify explicit types when creating arrays from all-None values
4. The error message "Invalid null value" doesn't help users understand the actual issue

### pandas.array Documentation:
- Recommends specifying dtype explicitly for predictable behavior
- Shows handling of None values with various types
- But doesn't specifically warn about PyArrow null type issues

### Conclusion:
The documentation does not adequately describe this limitation. Users following normal documented patterns can easily create null-typed ArrowExtensionArrays that later fail when calling fillna. The documentation should either:
1. Warn about null-typed arrays in the constructor
2. Document the fillna limitation with null types
3. Or both