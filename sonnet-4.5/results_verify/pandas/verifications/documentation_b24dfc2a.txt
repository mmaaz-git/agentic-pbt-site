## Documentation Analysis for _excel2num Function

### Function Documentation (from source code)

The `_excel2num` function is located in `/pandas/io/excel/_util.py` with the following docstring:

```
Convert Excel column name like 'AB' to 0-based column index.

Parameters
----------
x : str
    The Excel column name to convert to a 0-based column index.

Returns
-------
num : int
    The column index corresponding to the name.

Raises
------
ValueError
    Part of the Excel column name was invalid.
```

### Key Documentation Points

1. **Function Purpose**: Converts Excel column names (like 'A', 'B', 'AA', 'AB') to 0-based column indices.

2. **Input Requirements**: The function accepts a string parameter `x` representing an Excel column name.

3. **Output**: Returns an integer representing the 0-based column index.

4. **Error Handling**: The documentation explicitly states it should raise a `ValueError` when "Part of the Excel column name was invalid."

5. **Private Function**: The underscore prefix (`_excel2num`) indicates this is intended as an internal/private function, not part of the public API.

### External Documentation Search Results

- No official public pandas documentation exists for `_excel2num` (returns 404)
- The function is not mentioned in pandas' public API documentation
- This appears to be an internal utility function used by pandas' Excel I/O operations

### Excel Column Name Standards

Based on research into Excel column naming conventions:
- Valid Excel column names consist of uppercase letters A-Z
- Column names can be single letters (A, B, C) or multiple letters (AA, AB, AC)
- Empty strings are NOT valid Excel column names
- Column names must contain at least one letter
- Excel uses a base-26 numbering system for columns

### Documentation Interpretation

The documentation states the function should raise `ValueError` for invalid column names. Key points:
1. "Part of the Excel column name was invalid" - suggests any invalid character should trigger an error
2. An empty string contains no valid parts, so it should be considered invalid
3. The function's purpose is to convert valid Excel column names - an empty string is not a valid Excel column name

### Conclusion from Documentation

Based on the documented behavior ("Raises ValueError: Part of the Excel column name was invalid"), an empty string should raise a ValueError because:
1. It contains no valid Excel column name characters
2. It cannot represent a valid Excel column
3. The documentation doesn't specify any special handling for empty strings that would return a valid index