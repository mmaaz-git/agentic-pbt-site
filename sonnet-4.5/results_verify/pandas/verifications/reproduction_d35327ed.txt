## Bug Reproduction Report

### Summary
I have successfully reproduced the reported bug in the pandas.io.formats.format.format_percentiles function.

### Test Results

1. **Property-Based Test Results:**
   - The hypothesis test failed on the first run
   - It found a failing example with percentile=1.192092896e-07
   - This value was formatted as "1e-05%" without a decimal place, despite being a non-integer

2. **Specific Example from Bug Report:**
   - Input: 0.8899967487632947
   - Expected behavior: Should format with at least 1 decimal place (e.g., "89.0%")
   - Actual output: "89%" (no decimal place)
   - This confirms the bug report is accurate

### Root Cause Analysis

The issue is in line 1594 of the format_percentiles function:
```python
int_idx = np.isclose(percentiles_round_type, percentiles)
```

The function uses np.isclose() to determine which percentiles should be treated as integers. This causes values that are close to integers after rounding to be incorrectly classified as integers, even when they are not true integer percentages.

For example:
- 88.99967487632946% gets rounded to 89 at some precision level
- np.isclose() then considers it "close enough" to be treated as an integer
- The output becomes "89%" instead of "89.0%" or a more precise representation

### Verification
The bug violates the documented contract in the function's docstring (line 1565):
"Any non-integer is always rounded to at least 1 decimal place."

The value 88.99967487632946% is clearly not an integer, yet it is formatted without a decimal place, violating the documented behavior.