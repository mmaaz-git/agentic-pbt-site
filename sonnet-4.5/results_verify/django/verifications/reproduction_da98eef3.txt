## Bug Reproduction Report

### 1. Running the Hypothesis Test

I ran the provided Hypothesis test exactly as given in the bug report. The test failed with the following output:

```
AssertionError: send_messages should return an integer, not None
Falsifying example: test_console_backend_return_type_invariant(
    messages=[],
)
```

The test correctly identified that when an empty list is passed to `send_messages()`, the method returns `None` instead of an integer.

### 2. Running the Simple Reproduction Case

The simple test case also failed as expected:

```
Result: None
Expected: 0
AssertionError
```

This confirms that `console.EmailBackend.send_messages([])` returns `None` instead of `0`.

### 3. Source Code Examination

I examined the source code at `/home/npc/pbt/agentic-pbt/envs/django_env/lib/python3.13/site-packages/django/core/mail/backends/console.py` and found at lines 30-31:

```python
if not email_messages:
    return
```

This is a bare `return` statement that returns `None` in Python when the email_messages list is empty.

### 4. Effect of the Bug

The bug causes `console.EmailBackend` to return `None` instead of `0` when called with an empty message list. This:

1. Violates the documented API contract from `BaseEmailBackend.send_messages` which states it should "return the number of email messages sent"
2. Creates inconsistent behavior compared to other backends like SMTP which correctly return `0`
3. Could cause TypeError exceptions in code that expects an integer return value and performs arithmetic operations on it
4. Affects both console.EmailBackend and filebased.EmailBackend (which inherits from console)

The bug is reproducible and the report accurately describes the issue.