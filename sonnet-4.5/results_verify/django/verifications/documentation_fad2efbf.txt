## Documentation Analysis for django.utils.http.is_same_domain

### Function Documentation
The function `is_same_domain` is located in django/utils/http.py (lines 223-240). It has the following docstring:
```
Return ``True`` if the host is either an exact match or a match
to the wildcard pattern.

Any pattern beginning with a period matches a domain and all of its
subdomains. (e.g. ``.example.com`` matches ``example.com`` and
``foo.example.com``). Anything else is an exact string match.
```

### Key Documentation Points:
1. The function documentation does NOT specify anything about case sensitivity
2. The documentation states it performs "exact string match" for non-wildcard patterns
3. The documentation explains wildcard patterns starting with "." match domain and subdomains

### Current Implementation:
- The function only lowercases the `pattern` parameter (line 235)
- The function does NOT lowercase the `host` parameter
- Comparisons are done with the lowercased pattern against the original host

### Usage Context:
The function is used in Django's security-critical components:
1. **CSRF middleware** (django/middleware/csrf.py) - for validating origins and referrers against trusted domains
2. **HTTP request validation** (django/http/request.py) - for host header validation

### RFC 4343 on DNS Case Sensitivity:
According to RFC 4343 Section 3:
- "comparisons on name lookup for DNS queries should be case insensitive"
- DNS domain names ARE case-insensitive by specification
- Uppercase ASCII letters (0x41-0x5A) must match lowercase counterparts (0x61-0x7A) and vice versa

### Documentation Gap:
The function documentation does not specify:
1. Whether domain comparisons should be case-sensitive or case-insensitive
2. That the function currently treats domains case-sensitively (except for the pattern)
3. Any rationale for why domains would be compared case-sensitively when DNS itself is case-insensitive

### Security Context:
Given that this function is used in security-critical contexts (CSRF protection, host validation), the behavior regarding case sensitivity is important and should be clearly documented if intentionally case-sensitive, or fixed if unintentionally case-sensitive.