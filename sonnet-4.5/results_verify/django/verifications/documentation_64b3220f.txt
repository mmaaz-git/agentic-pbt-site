DOCUMENTATION FINDINGS FOR ModelFormMixin.get_success_url
=========================================================

1. OFFICIAL DJANGO DOCUMENTATION
--------------------------------
The Django documentation states that:
- The `success_url` attribute can contain placeholders like "/polls/{slug}/"
- Placeholders will be interpolated against the object's field attributes
- The documentation explicitly mentions that placeholders are supported and will be formatted using the object's attributes
- If no `success_url` is provided, the method falls back to the object's `get_absolute_url()`

However, the documentation does NOT explicitly specify:
- What happens when a placeholder doesn't match any object attribute
- Whether a KeyError should be raised or handled differently
- Whether there should be error handling for mismatched placeholders

2. SOURCE CODE IMPLEMENTATION
------------------------------
The actual implementation in django/views/generic/edit.py shows:
- Line 120: `url = self.success_url.format(**self.object.__dict__)`
- This line uses Python's string format() method with the object's __dict__
- No try/except block around this formatting operation
- The only error handling is for the fallback case when there's no success_url and no get_absolute_url method

The code does handle one error case explicitly:
- When no success_url is set AND the object doesn't have get_absolute_url(), it raises ImproperlyConfigured with a helpful message

3. ERROR HANDLING PATTERNS IN DJANGO
-------------------------------------
Django commonly uses ImproperlyConfigured exception for configuration errors:
- The same file already imports and uses ImproperlyConfigured
- It's used when neither success_url nor get_absolute_url is available (lines 125-128)
- This establishes a pattern of raising ImproperlyConfigured for configuration-related issues

4. DOCUMENTATION GAPS
---------------------
The documentation doesn't explicitly state:
- Whether placeholder names must exactly match object attributes
- What the expected behavior is for mismatched placeholders
- Whether developers should expect KeyError or a more descriptive error

This is a documentation ambiguity - the feature is documented as supporting placeholders, but the error handling behavior for invalid placeholders is unspecified.