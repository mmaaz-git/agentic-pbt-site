## Bug Reproduction Report

### Bug Confirmed
The bug report is accurate. The FileBased email backend does return `None` instead of `0` when `send_messages()` is called with an empty message list.

### Reproduction Steps
1. Created a test script that instantiates the FileBased EmailBackend
2. Called `send_messages([])` with an empty list
3. Verified the return value

### Results
- `backend.send_messages([])` returns `None` (type: NoneType)
- Expected return value should be `0` (integer)

### Property-Based Test Results
The hypothesis test failed on the first example (num_messages=0) with:
"Expected int, got <class 'NoneType'> for 0 messages"

### Root Cause
The FileBased backend inherits from ConsoleEmailBackend (filebased.py:11).
In console.py:30-31, the `send_messages` method has:
```python
if not email_messages:
    return
```
This returns `None` implicitly instead of returning `0`.

### Impact
This violates the contract that `send_messages()` should return the number of messages sent. Code expecting an integer return value could fail with a TypeError when trying to use the None value in numeric operations.