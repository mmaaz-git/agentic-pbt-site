DOCUMENTATION ANALYSIS FOR get_exception_info
==============================================

Function Purpose:
According to the docstring in django/template/backends/jinja2.py, get_exception_info is designed to:
"Format exception information for display on the debug page using the structure described in the template API documentation."

Documentation Found:
1. The function has a minimal docstring that references "template API documentation" but doesn't specify what that is
2. No explicit documentation was found about how this function should handle empty templates
3. No specification exists about what constitutes a "line" in the context of templates
4. No documentation specifies whether an empty template should have 0 lines or 1 line

Key Observations:
- The function is internal to Django and used for debug page formatting
- It's called when Jinja2 template exceptions occur (lines 47 and 77 in the same file)
- The returned dictionary structure includes:
  * 'total': Total number of lines in the template
  * 'source_lines': List of (line_number, line_text) tuples
  * 'during': The line where the error occurred
  * Other context information for debugging

Behavior Not Specified:
- How to count lines in an empty template (0 vs 1)
- What happens when lineno exceeds the actual number of lines
- Whether whitespace-only templates should be treated as empty
- Edge cases around empty or whitespace-only sources

Related Standards:
- No external specifications (RFCs, PEPs) were referenced
- No Django-specific documentation defines line counting behavior for templates
- Python's str.split('\n') behavior on empty strings returns [''] (one element), which is standard Python behavior

Conclusion:
The documentation does not explicitly specify how empty templates should be counted. The function appears to be an internal utility for error reporting, and the exact line count for empty templates is not documented as part of any public API contract.