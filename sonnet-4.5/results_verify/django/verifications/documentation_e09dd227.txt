Django Documentation Analysis for SECURE_REFERRER_POLICY
=========================================================

## Official Documentation Findings

1. **Default Value**:
   - According to django/conf/global_settings.py line 667, the default value is "same-origin"
   - This means Django provides a reasonable default referrer policy out of the box

2. **Purpose and Behavior**:
   - SECURE_REFERRER_POLICY controls the Referrer-Policy HTTP header
   - The SecurityMiddleware sets this header on responses that don't already have it
   - Supports multiple formats: single string, comma-separated string, or iterable (list/tuple)
   - Multiple values allow for browser fallback support

3. **Valid Values** (from REFERRER_POLICY_VALUES in the source):
   - "no-referrer"
   - "no-referrer-when-downgrade"
   - "origin"
   - "origin-when-cross-origin"
   - "same-origin"
   - "strict-origin"
   - "strict-origin-when-cross-origin"
   - "unsafe-url"

4. **Documentation Gaps**:
   - The documentation does NOT explicitly state what happens with an empty list []
   - The documentation does NOT explicitly state that None should trigger a warning
   - The documentation does NOT clarify that both None and [] would result in no header being sent

5. **Security Check System**:
   - Warning W022 is defined: "You have not set the SECURE_REFERRER_POLICY setting..."
   - Error E023 is defined for invalid values
   - The checks are part of Django's security deployment checklist

## Key Observation

The documentation doesn't explicitly define expected behavior for edge cases:
- It doesn't say that [] should be treated the same as None
- It doesn't say that [] should be considered "not set"
- The default is "same-origin", not None or [], suggesting any deviation from a valid policy should be warned about

## Conclusion

While the documentation doesn't explicitly state that empty lists should trigger warnings, the intent is clear:
1. Django provides a secure default ("same-origin")
2. The warning W022 exists specifically to alert when SECURE_REFERRER_POLICY is "not set"
3. An empty list results in no Referrer-Policy header being sent (same as None)
4. The security check should consistently warn about configurations that result in no referrer policy

The bug report correctly identifies an inconsistency where two functionally equivalent configurations (None and []) are treated differently by the security check system.