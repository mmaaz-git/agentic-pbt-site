## Bug Reproduction Report

I have successfully reproduced both bugs described in the bug report:

### Bug 1: IndexError on empty string
- When calling `b62_decode("")`, the function crashes with `IndexError: string index out of range`
- The crash occurs at line 80 of signing.py where it attempts to access `s[0]` without first checking if the string is non-empty
- Confirmed output: `CRASH: IndexError - string index out of range`

### Bug 2: Invalid round-trip for '-'
- When calling `b62_decode("-")`, the function returns `0`
- However, `b62_encode(0)` returns `"0"`, not `"-"`
- This violates the expected round-trip property between encode and decode functions
- Confirmed output shows: `Round-trip: '-' -> 0 -> '0'`

### Bug 3: Impact on TimestampSigner
- The bug report claims that TimestampSigner.unsign() would crash on malformed signatures with empty timestamp fields
- However, in my testing, this specific case doesn't cause an IndexError crash
- Instead, it raises `BadSignature` exception which is properly handled
- This might be because the BadSignature is raised earlier in the unsign chain before reaching b62_decode

### Verification of the root cause:
The source code examination confirms the bug at line 80 of signing.py:
```python
if s[0] == "-":  # This line causes IndexError when s is empty
```

The function doesn't validate that the input string is non-empty before attempting to access its first character.

### Summary:
The core bugs (empty string crash and invalid round-trip for "-") are confirmed and reproducible. The function fails to handle edge cases properly:
1. It crashes on empty input instead of raising a meaningful error
2. It silently returns incorrect values for invalid inputs like "-" instead of rejecting them