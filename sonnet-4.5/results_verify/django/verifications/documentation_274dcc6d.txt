## Documentation Analysis for Django's Substr Function

### Official Django Documentation
The Django documentation for Substr states:
- Function signature: `Substr(expression, pos, length=None, **extra)`
- Returns a substring of length `length` from the field or expression starting at position `pos`
- The `pos` parameter must be greater than 0 (1-indexed)
- The `length` parameter is optional and defaults to None (returns rest of string)
- **No specific constraints are documented for the `length` parameter when it's provided**

### Comparison with Left Function
The Left function documentation:
- Returns the first `length` characters of a text field
- No specific validation constraints are documented for the `length` parameter

### Source Code Analysis
Looking at the actual implementation:

**Substr function** (`django/db/models/functions/text.py`):
- Validates that `pos` must be > 0 when it's not an expression
- **Does NOT validate the `length` parameter at all**, even when provided

**Left function** (same file):
- Validates that `length` must be > 0 when it's not an expression
- Raises `ValueError("'length' must be greater than 0.")` for invalid values

### Key Finding
The documentation does not explicitly state that `length` in Substr must be positive. However, the Left function (which serves a similar purpose) does validate its length parameter in the implementation, even though this validation requirement is not documented either.

The inconsistency is in the implementation, not the documentation. Both functions' documentation are silent about length validation requirements.