REPRODUCTION ANALYSIS
====================

Bug Summary:
The bug report claims that django.template.defaultfilters.get_digit crashes with a ValueError when given a negative number and a position that accesses the minus sign character.

Reproduction Steps:
1. Imported django.template.defaultfilters
2. Called get_digit(-123, 4)
3. Called get_digit(-1, 2)

Results:
Both test cases crashed exactly as described in the bug report with:
"ValueError: invalid literal for int() with base 10: '-'"

Analysis:
- For get_digit(-123, 4): str(-123) = "-123" (4 chars), str(-123)[-4] = "-"
- For get_digit(-1, 2): str(-1) = "-1" (2 chars), str(-1)[-2] = "-"
- In both cases, the function tries int("-") which raises ValueError

The hypothesis test also confirmed this bug occurs for various combinations of negative numbers when the position parameter causes access to the minus sign.

Code Analysis:
Looking at the implementation (lines 753-770), the function:
1. Validates and converts inputs to integers (lines 760-764)
2. Returns value if arg < 1 (lines 765-766)
3. Tries to get the digit at position -arg from the string representation (line 768)
4. Catches IndexError and returns 0 (lines 769-770)

The bug occurs at line 768 because the function only catches IndexError but not ValueError. When accessing the minus sign position in a negative number's string representation, int("-") raises ValueError which is not caught.

The bug is successfully reproduced and the root cause is confirmed.