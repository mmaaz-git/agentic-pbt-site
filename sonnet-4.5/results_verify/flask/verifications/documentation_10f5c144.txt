DOCUMENTATION ANALYSIS
=====================

I examined the Flask documentation and source code to understand the intended behavior:

1. SOURCE CODE DOCUMENTATION (config.py):
   - Line 307-308: `from_mapping()` docstring states: "Updates the config like :meth:`update` ignoring items with non-upper keys."
   - This is the problematic documentation that the bug report addresses

2. FLASK CONFIG CLASS DOCUMENTATION:
   - The Config class inherits from Python's dict class
   - The class docstring (lines 50-92) mentions: "In both cases (loading from any Python file or loading from modules), only uppercase keys are added to the config."
   - This establishes that filtering uppercase keys is intentional behavior for certain methods

3. METHOD BEHAVIORS FROM SOURCE CODE:
   - `from_object()` (line 252-254): Filters to only uppercase keys
   - `from_pyfile()`: Uses `from_object()` internally, so also filters
   - `from_file()`: Uses `from_mapping()` internally, so also filters
   - `from_mapping()` (line 318-320): Explicitly filters to only uppercase keys
   - `update()`: Inherited from dict, accepts all keys without filtering

4. OFFICIAL FLASK DOCUMENTATION:
   - The online documentation recommends using uppercase keys for configuration
   - It does not explicitly document the difference between `update()` and `from_mapping()`

5. PYTHON DICT DOCUMENTATION:
   - `update()` is a standard dict method that accepts any hashable keys
   - No filtering is performed by default

CONCLUSION: The docstring is misleading because it compares `from_mapping()` to `update()` using the phrase "like :meth:`update`", which suggests similar behavior. However:
- `update()` accepts all keys (standard dict behavior)
- `from_mapping()` filters to only uppercase keys (Flask-specific behavior)

The documentation should clarify this distinction rather than suggesting similarity.