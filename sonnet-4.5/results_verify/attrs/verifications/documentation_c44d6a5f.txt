DOCUMENTATION ANALYSIS
======================

## Function Status
`_split_what` is a PRIVATE/INTERNAL function in the attrs library, as indicated by:
1. Leading underscore in the function name (_split_what)
2. No public documentation available on attrs.org
3. Not mentioned in the official API documentation

## Documentation Found

### In Source Code
The function has a minimal docstring:
```
Returns a tuple of `frozenset`s of classes and attributes.
```

This docstring:
- Does NOT specify what input types are accepted
- Does NOT mention that the input must be reusable/non-consumable
- Does NOT warn about generator incompatibility
- Does NOT specify that it will iterate multiple times over the input

### Public API Usage
The function is used internally by two public functions:

1. `include(*what)` - Documented to accept:
   - "Can be a type, a name, or an attribute"
   - Version 23.1.0: Added support for strings with field names

2. `exclude(*what)` - Documented to accept:
   - "Can be a type, a name, or an attribute"
   - Version 23.3.0: Added support for field name strings

Both functions work correctly because they pass `what` (the tuple of arguments) to `_split_what`, not generators.

## Key Observations

1. **Private Function**: `_split_what` is not part of the public API (underscore prefix)
2. **No Contract Specified**: The function has no documented contract about input requirements
3. **Implementation Detail**: This is an internal implementation detail not meant for direct use
4. **Public APIs Work**: The public `include()` and `exclude()` functions that use `_split_what` work correctly
5. **No Generator Warning**: Neither the docstring nor any documentation warns about generator incompatibility

## Conclusion

Since `_split_what` is a private function with no documented contract about input types, and the public API functions that use it work correctly, this could be considered either:
- A bug in an internal function that should handle all iterables consistently
- Expected behavior for an undocumented private function
- A missing documentation warning about generator incompatibility