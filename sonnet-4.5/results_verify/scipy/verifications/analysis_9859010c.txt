## Bug Triage Analysis

### Consideration for BUG (Valid Bug Report)

**Why it IS a bug:**
1. **Documented behavior violation**: The documentation states parameters should be "Rotation instance" without restrictions, yet single rotations fail when used together.
2. **Inconsistent API behavior**: The method works in 3 out of 4 combinations (single-array, array-single, array-array) but fails for single-single.
3. **Precedent from other methods**: Other Rotation methods like multiplication handle single-single combinations without issue.
4. **Poor error message**: The error "Expected `quat` to have shape (4,) or (N, 4), got ()" is cryptic and doesn't guide users to the solution.
5. **Breaks principle of least surprise**: Users reasonably expect all Rotation instances to work equally.

### Consideration for INVALID

**Why it might be invalid:**
- None. The documentation clearly states "Rotation instance" without restrictions, and the inconsistent behavior cannot be justified.

### Consideration for WONTFIX

**Why it might be WONTFIX:**
1. Easy workaround exists (wrap in array using `Rotation.concatenate([r])`).
2. May be a rare edge case in practice.

**Why it's NOT WONTFIX:**
- The inconsistency affects basic usage patterns (reducing with identity is a common operation).
- The error message is unhelpful, causing user confusion.
- The fix is trivial (normalize inputs to arrays internally).

### Consideration for FEATURE_REQUEST

**Why it might be a feature request:**
- Could argue that supporting single-single combination is a "new feature".

**Why it's NOT a feature request:**
- The documentation already claims to accept "Rotation instance" which includes single rotations.
- Other combinations already work, making this a consistency fix, not a new feature.

### Consideration for DOCUMENTATION_FIX

**Why it might be a documentation fix:**
- Could update docs to say "Rotation array instance" or add a warning about single rotations.

**Why it's NOT just a documentation fix:**
- The current behavior is inconsistent (works sometimes, fails sometimes).
- Other methods in the same class handle this correctly.
- Fixing the documentation would make the API less intuitive and inconsistent with the rest of the module.

## FINAL ASSESSMENT

This is clearly a **BUG**. The method fails to handle a valid input combination that:
1. Is allowed by the documentation
2. Works in similar methods
3. Works in 3 out of 4 combinations within the same method
4. Has no technical reason to fail

The proposed fix (normalizing single rotations to arrays internally) is straightforward and maintains backward compatibility while fixing the inconsistency.