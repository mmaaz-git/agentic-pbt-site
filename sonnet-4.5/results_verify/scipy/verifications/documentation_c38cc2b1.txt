## Documentation Analysis

### SciPy Documentation
The documentation for `scipy.io.matlab.savemat` function is found in `/scipy/io/matlab/_mio.py` at lines 271-273:

```
Note that if this dict has a key starting with `_` or a sub-dict has a key
starting with `_` or a digit, these key's items will not be saved in the mat
file and `MatWriteWarning` will be issued.
```

This documentation explicitly states two rules:
1. Variables starting with underscore (_) will not be saved and will issue a warning
2. Variables starting with a digit will not be saved and will issue a warning

### Implementation Code
The actual implementation in `/scipy/io/matlab/_mio5.py` at lines 884-888:

```python
if name[0] == '_':
    msg = (f"Starting field name with a "
           f"underscore ({name}) is ignored")
    warnings.warn(msg, MatWriteWarning, stacklevel=2)
    continue
```

The implementation only checks for underscore, NOT for digits.

### MATLAB Specification
According to MATLAB's official documentation and specifications:
- Valid MATLAB variable names MUST start with a letter (not a digit)
- A valid identifier consists of letters, digits, and underscores, but the first character MUST be a letter
- Variable names starting with digits are NOT valid in MATLAB

### Conclusion
The documentation correctly describes what the behavior SHOULD be according to MATLAB specifications. Variables starting with digits are not valid MATLAB identifiers and should be filtered out with a warning. However, the implementation fails to enforce this documented behavior, only checking for underscores and not digits.

This is a clear case where the documentation is correct and aligned with MATLAB specifications, but the implementation is incomplete and does not match the documented contract.