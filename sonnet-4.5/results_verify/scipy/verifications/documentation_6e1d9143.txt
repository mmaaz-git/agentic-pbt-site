DOCUMENTATION ANALYSIS
======================

SciPy Documentation Review for tilbert/itilbert:

1. Official Documentation Found:
   The scipy.fftpack.tilbert documentation explicitly states:

   "If sum(x, axis=0) == 0 and n = len(x) is odd, then tilbert(itilbert(x)) == x"

   This is a CRITICAL statement that directly contradicts the bug report's assumption.

2. Key Documentation Points:

   a) Round-trip Property:
      - The documentation EXPLICITLY states round-trip works ONLY for ODD-length sequences
      - Round-trip is guaranteed only when: sum(x) == 0 AND len(x) is odd
      - There is NO claim that even-length sequences should round-trip

   b) Even-Length Handling:
      - Documentation states: "For even len(x), the Nyquist mode of x is taken as zero"
      - This explains why even-length sequences lose information - Nyquist mode is zeroed

   c) Mathematical Definition:
      - tilbert: y_j = sqrt(-1) * coth(j*h*2*pi/period) * x_j, y_0 = 0
      - itilbert: y_j = -sqrt(-1) * tanh(j*h*2*pi/period) * x_j, y_0 = 0
      - These are pseudo-differential operators in Fourier space

3. Documentation Clarity:
   The documentation is CLEAR and UNAMBIGUOUS about the round-trip limitation. It does not promise or imply that even-length sequences should round-trip correctly.

4. Comparison with Bug Report Claims:
   - Bug report claims: "tilbert/itilbert pair should preserve the input signal when composed"
   - Documentation says: Only preserves for odd-length, zero-sum sequences
   - The bug report's assumption is INCORRECT based on documented behavior

5. Conclusion:
   The observed behavior (failing to round-trip for length-2 arrays) is DOCUMENTED and EXPECTED. This is not undefined behavior - it's explicitly defined as working only for odd-length arrays.