## Documentation Analysis for zpk2tf and tf2zpk

### Official Documentation Review

**zpk2tf function:**
- Purpose: "Return polynomial transfer function representation from zeros and poles"
- Takes zeros (z), poles (p), and gain (k) as input
- Returns numerator (b) and denominator (a) polynomial coefficients
- No warnings or notes about numerical stability
- No mentions of precision loss with repeated roots
- No mentions of round-trip conversion issues

**tf2zpk function:**
- Purpose: "Return zero, pole, gain (z, p, k) representation from a numerator, denominator representation"
- Takes numerator (b) and denominator (a) polynomial coefficients
- Returns zeros (z), poles (p), and gain (k)
- Has a note about BadCoefficients warning when values are too close to 0
- No specific warnings about repeated roots
- No mentions of numerical instability with round-trip conversions
- No documentation about precision loss for multiple/repeated roots

### Key Documentation Gaps

1. **No warning about round-trip precision loss**: Neither function documents that zpk2tf â†’ tf2zpk conversion can lose significant precision, especially with repeated roots.

2. **No mention of numerical instability**: The documentation does not warn about the inherent numerical instability of finding repeated roots from polynomial coefficients.

3. **No guidance on when to avoid these functions**: The documentation doesn't suggest using alternative representations (like state-space) for systems with repeated poles/zeros.

### Related Documentation and Known Issues

From GitHub issues and discussions:
- Issue #2443: "IIR filter design should not transform to tf representation internally" - acknowledges that conversion to tf format introduces numerical errors
- Multiple issues document that zpk works better than tf for numerical stability
- Finding roots of polynomials with repeated roots is a well-known numerical analysis challenge

### Mathematical Context

The fundamental mathematical issue is well-documented in numerical analysis literature:
- Polynomial root finding is ill-conditioned for repeated roots
- Small perturbations in coefficients can cause large changes in root locations
- The condition number of root-finding increases dramatically with root multiplicity

### Conclusion

The documentation for zpk2tf and tf2zpk does NOT warn users about:
1. Precision loss in round-trip conversions
2. Numerical instability with repeated poles/zeros
3. The inherent mathematical limitations of the polynomial coefficient representation

This is a significant documentation gap, as users would reasonably expect round-trip conversions to preserve the original representation within machine precision.