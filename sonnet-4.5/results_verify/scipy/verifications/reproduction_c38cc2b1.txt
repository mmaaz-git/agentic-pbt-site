## Reproduction Analysis

I have successfully reproduced the reported bug. Here are my findings:

### Hypothesis Test Results
- The Hypothesis test failed as expected with the error: "AssertionError: Variables starting with digit should not be saved"
- The test correctly identifies that '1invalid' is being saved to the .mat file when it shouldn't be
- No MatWriteWarning is issued for variables starting with digits

### Manual Reproduction Results
When running the manual test code:
- MatWriteWarning issued: False (no warning was raised)
- '1invalid' in loaded file: True (the variable was incorrectly saved)
- '1invalid' appears in the list of keys in the loaded .mat file

### Control Test with Underscore
As a control, I tested variables starting with underscore:
- MatWriteWarning issued: True (warning was correctly raised)
- '_invalid' in loaded file: False (the variable was correctly filtered)
- The warning message states: "Starting field name with a underscore (_invalid) is ignored"

### Effect Summary
The bug is confirmed. Variables starting with digits:
1. ARE being saved to the .mat file (but shouldn't be according to documentation)
2. DO NOT trigger a MatWriteWarning (but should according to documentation)

In contrast, variables starting with underscore are correctly:
1. NOT saved to the .mat file
2. DO trigger a MatWriteWarning

This confirms a clear discrepancy between the documented behavior and the actual implementation for digit-starting variable names.