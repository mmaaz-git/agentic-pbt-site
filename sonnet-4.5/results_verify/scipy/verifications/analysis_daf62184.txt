TRIAGE ANALYSIS
===============

Analyzing whether this bug report should be classified as BUG, INVALID, WONTFIX, FEATURE_REQUEST, or DOCUMENTATION_FIX:

CONSIDERATION FOR BUG:
- A vertex of a Delaunay triangulation is definitionally part of the triangulation
- find_simplex() returning -1 means "point is outside the triangulation"
- It's mathematically incorrect for a vertex to be "outside" its own triangulation
- The default tolerance is insufficient for a basic operation (finding vertices)
- Users reasonably expect vertices to be findable without special tolerance settings
- The function works correctly with a slightly larger tolerance, showing it's a numerical precision issue
- This violates the principle of least surprise - vertices should be findable

CONSIDERATION FOR WONTFIX:
- This is a numerical precision issue at the limits of floating-point arithmetic
- The issue only occurs with the default tolerance of 100*eps (2.22e-14)
- Working around it is simple: use tol=1e-12 or larger
- Vertices lie exactly on simplex boundaries, making them edge cases
- The vertex_to_simplex attribute exists as an alternative way to find simplices for vertices
- Changing the default tolerance might affect other use cases

CONSIDERATION FOR INVALID:
- The documentation doesn't explicitly guarantee vertices will be found
- Vertices on boundaries are inherently ambiguous in terms of which simplex they belong to
- The function is designed for general point queries, not specifically for vertices
- Numerical precision issues are expected in computational geometry

CONSIDERATION FOR FEATURE_REQUEST:
- Could be viewed as requesting better handling of vertex queries
- Might need a special case for when query points match vertices exactly
- Could add a "find_simplex_for_vertex" method specifically for this use case

CONSIDERATION FOR DOCUMENTATION_FIX:
- The documentation could warn about this limitation
- Could recommend using tol=1e-12 when querying points that might be vertices
- Could clarify that the default tolerance may be insufficient for boundary cases
- Could point users to vertex_to_simplex for vertex queries

STRONGEST ARGUMENT:
This is a BUG because:
1. It violates mathematical correctness - a vertex cannot be outside its own triangulation
2. The failure is silent and misleading (returns -1 instead of raising an error or warning)
3. The default behavior fails for a fundamental query (is this vertex in the triangulation?)
4. The fix is straightforward - adjust the default tolerance
5. Users have no way to know they need a different tolerance without encountering this bug
6. The documentation gives no hint that vertices might not be findable