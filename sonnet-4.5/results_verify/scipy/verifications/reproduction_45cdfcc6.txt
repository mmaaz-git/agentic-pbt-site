REPRODUCTION RESULTS
===================

I successfully reproduced the bug described in the report. Here are my findings:

1. HYPOTHESIS TEST RESULTS:
   - The provided Hypothesis test fails when given a single-element array [0.0]
   - The error message matches exactly: "ValueError: Invalid number of data points (0) specified"
   - The test also reveals additional failures with odd-length arrays and numerical precision issues
   - The single-element case is the most critical failure

2. MANUAL REPRODUCTION:
   - Input: np.array([5.0]) with shape (1,)
   - scipy.fft.rfft(x) successfully returns [5.+0.j] with shape (1,)
   - scipy.fft.irfft(fft_result) fails with "ValueError: Invalid number of data points (0) specified"
   - The workaround scipy.fft.irfft(fft_result, n=1) works correctly and returns [5.]

3. SOURCE CODE VERIFICATION:
   - Confirmed the bug is in scipy/fft/_pocketfft/basic.py lines 87-90
   - For single-element input: n = (1 - 1) * 2 = 0
   - This triggers the ValueError when n < 1
   - The calculation is: n = (tmp.shape[axis] - 1) * 2

4. EFFECT OF THE BUG:
   - scipy.fft.rfft() accepts single-element arrays and returns valid results
   - scipy.fft.irfft() cannot process the output of rfft() for single-element arrays
   - This breaks the expected round-trip property: irfft(rfft(x)) should return x
   - The workaround (passing n=1 explicitly) proves the operation is mathematically valid

The bug report is accurate in its description, reproduction steps, and identification of the root cause.