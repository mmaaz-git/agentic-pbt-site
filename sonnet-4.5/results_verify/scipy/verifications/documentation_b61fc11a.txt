DOCUMENTATION ANALYSIS
======================

I reviewed the official scipy documentation for savemat and loadmat functions.

Key Documentation Points:
-------------------------

1. Round-Trip Guarantees:
   The scipy.io.loadmat documentation explicitly states that the default parameter
   `struct_as_record=True` allows "easier round-trip load and save of MATLAB files."

   This is a clear statement that round-trip preservation is an expected feature.

2. Data Type Support:
   - Both functions support complex numbers (demonstrated in documentation examples)
   - No explicit limitations mentioned for special float values (NaN, Infinity)
   - Format 4 is listed as a supported format alongside format 5

3. No Warnings About Complex Infinity:
   The documentation does not warn users about:
   - Limitations with complex numbers containing infinity
   - Potential data corruption during round-trips
   - Special handling requirements for IEEE 754 special values

4. Expected Behavior:
   Based on the documentation's claim about "easier round-trip load and save,"
   users would reasonably expect:
   - Data preservation during save/load cycles
   - Proper handling of standard IEEE 754 values
   - Complex numbers to maintain their real and imaginary parts

5. Mathematical Standards:
   Complex numbers with 0+infj are valid mathematical entities in IEEE 754
   and Python/NumPy. The documentation doesn't state these are unsupported.

Conclusion:
-----------
The documentation establishes an expectation of round-trip data preservation
without listing complex infinity as an exception. The corruption of 0.+infj
to nan+infj violates the documented behavior and reasonable user expectations.