BUG REPORT CATEGORIZATION ANALYSIS
===================================

## Evaluation Against Each Category

### 1. INVALID - Why it might be invalid:
- The documentation does mention that for odd-length signals, n must be specified
- Single-element arrays are a special case of odd-length arrays
- The error technically occurs due to documented behavior (n = 2*(m-1))

### Why it's NOT invalid:
- The error message is objectively misleading ("specified" when user didn't specify anything)
- Single-element arrays are a valid input to rfft, so their output should be valid input to irfft
- The round-trip property is a fundamental expectation for FFT operations
- The documentation doesn't explicitly warn about this edge case

### 2. WONTFIX - Why it might be WONTFIX:
- Single-element FFTs are an edge case that rarely occurs in practice
- Users can work around it by always specifying n
- The mathematical formula n = 2*(m-1) is technically correct for the general case

### Why it's NOT WONTFIX:
- The error message is actively misleading and causes confusion
- Property-based testing legitimately discovers this edge case
- The fix is simple and improves user experience
- Single-element arrays are valid mathematical entities for FFT

### 3. FEATURE_REQUEST - Why it might be a feature request:
- Asking for irfft to automatically handle single-element arrays could be seen as a new feature
- The current behavior follows the documented formula

### Why it's NOT a feature request:
- This is about fixing broken behavior, not adding new functionality
- The round-trip property should work for all valid inputs
- At minimum, the error message needs correction (which is a bug fix)

### 4. DOCUMENTATION_FIX - Why it might be a documentation fix:
- The documentation could be updated to explicitly warn about single-element arrays
- Could add examples showing the n parameter is required for single elements
- The documentation already mentions odd-length arrays need n specified

### Why it's NOT just a documentation fix:
- The error message itself is incorrect/misleading in the code
- The behavior violates reasonable expectations
- Even with documentation, the error message would still be confusing

### 5. BUG - Why this IS a bug:
- **Misleading error message**: Says "Invalid number of data points (0) specified" when the user never specified 0
- **Violates round-trip expectation**: irfft(rfft(x)) should work for all valid x or give a clear error
- **Valid input produces invalid state**: Single-element arrays are valid for rfft, but their output breaks irfft
- **Poor user experience**: The error doesn't guide users to the solution
- **Easy fix available**: The proposed fix improves the error message significantly

## Additional Considerations

1. **Severity**: While single-element FFTs are uncommon, the misleading error message affects debugging and understanding
2. **Impact on testing**: Property-based testing legitimately finds this issue
3. **Consistency**: Other FFT implementations may handle this case better
4. **Fix quality**: The proposed fix doesn't change functionality, just improves the error message

## Conclusion

This is primarily a BUG because:
1. The error message is objectively incorrect (says "specified" when nothing was specified)
2. It violates the principle of least surprise
3. The fix improves user experience without breaking compatibility
4. Valid inputs should not produce confusing errors

The bug report correctly identifies both the problem and proposes a reasonable solution. The issue is not about the mathematical correctness of the formula but about the user experience and error messaging.