DOCUMENTATION FINDINGS FOR scipy.signal.normalize

## Official Documentation States:

1. **Function Purpose**: "Normalize numerator/denominator of a continuous-time transfer function"

2. **Key Documented Behavior**:
   - "If values of `b` are too close to 0, they are removed. In that case, a BadCoefficients warning is emitted."
   - The documentation EXPLICITLY states that leading zeros will be removed from the numerator
   - Example provided shows: "[0, 3, 6]" being normalized to "[1.5, 3.]" (leading zero removed)

3. **Warning Behavior**:
   - Documentation clearly shows that a BadCoefficients warning is expected when leading coefficients are zero
   - Example in docs demonstrates this with:
     ```python
     >>> with warnings.catch_warnings(record=True) as w:
     ...     num, den = normalize([0, 3, 6], [2, -5, 4])
     >>> num
     array([1.5, 3. ])  # Leading zero removed
     ```

4. **Source Code Confirms**:
   - Lines 1927-1943 in _filter_design.py explicitly implement leading zero removal
   - Comments indicate "Trim leading zeros of numerator"
   - A warning is issued when this happens: "Badly conditioned filter coefficients"

5. **Transfer Function Representation**:
   - Documentation specifies coefficients should be in descending exponent order
   - Example: "s^2 + 3s + 5" represented as "[1, 3, 5]"
   - For continuous-time systems, leading zeros would represent higher-order terms with zero coefficients

## Critical Finding:
The documentation EXPLICITLY describes that leading zeros will be removed from the numerator. This is not an undocumented behavior - it's clearly shown in the examples and described in the function notes. The function is working exactly as documented.