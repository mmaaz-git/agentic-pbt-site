# Documentation Analysis

## Key Documentation Findings

### Official SciPy Documentation

1. **boxcox1p function**:
   - Purpose: "Computes the Box-Cox transformation of 1 + x"
   - Mathematical definition clearly stated:
     - If λ ≠ 0: y = ((1+x)^λ - 1) / λ
     - If λ = 0: y = log(1+x)
   - No mention of behavior for "very small" lambda values
   - No explicit threshold mentioned for treating lambda as zero

2. **inv_boxcox1p function**:
   - Purpose: "Computes the inverse of the Box-Cox transformation"
   - **CRITICAL**: Documentation explicitly states it is "Directly inverse of boxcox1p function"
   - Example provided shows round-trip property:
     ```python
     y = boxcox1p([1, 4, 10], 2.5)
     inv_boxcox1p(y, 2.5)  # Returns [1., 4., 10.]
     ```
   - This example directly demonstrates the expected inverse relationship

### Mathematical Background (Wikipedia)

- The Box-Cox transformation uses λ = 0 as a special case via limit
- The λ = 0 case is derived through Taylor series expansion
- No standard mathematical definition for "approximately zero" threshold

## Documentation Contract Violation

The documentation establishes a clear contract:
1. `inv_boxcox1p` is the "direct inverse" of `boxcox1p`
2. The example demonstrates that applying both functions should recover original values
3. There is NO documented exception for extremely small lambda values
4. There is NO documented threshold below which lambda is treated as zero

## Conclusion

The bug represents a clear violation of the documented behavior. The documentation promises an inverse relationship without any caveats about lambda thresholds. Users relying on the documented inverse property would reasonably expect it to hold for all valid inputs, including very small lambda values.

The fact that the functions use different thresholds (~1e-157) to decide when to use the λ=0 special case is an implementation detail that breaks the documented contract. This is not a case of undefined behavior - the documentation explicitly defines the expected behavior (inverse relationship) and provides examples demonstrating it.