## Documentation Analysis for scipy.signal.windows.get_window

### Official Documentation Review

The official documentation for `get_window` specifies that it accepts window types as strings, floats, or tuples. For parametric windows like kaiser_bessel_derived, the documentation states that a tuple should be used with the window name and parameters.

The documentation lists kaiser_bessel_derived as one of the supported window types but does not explicitly specify what string name should be used in the tuple. The documentation shows examples like:
- `signal.get_window(('kaiser', 4.0), 9)` for kaiser window
- No specific example is given for kaiser_bessel_derived

### Source Code Examination

Looking at the source code in `scipy/signal/windows/_windows.py` (lines 2335-2355), the window name mapping dictionary `_win_equiv_raw` shows:

1. Line 2348: `('kaiser bessel derived', 'kbd'): (kaiser_bessel_derived, True)`

This explicitly maps the strings 'kaiser bessel derived' (with spaces) and 'kbd' to the kaiser_bessel_derived function. Notably, 'kaiser_bessel_derived' (with underscores) is NOT in this mapping.

2. Other windows with underscores in their function names have both forms registered:
   - Line 2341: `('general cosine', 'general_cosine')` - both forms supported
   - Line 2342-2343: `('general gaussian', 'general_gaussian', ...)` - both forms supported
   - Line 2344: `('general hamming', 'general_hamming')` - both forms supported

### Key Finding

The documentation does not explicitly specify which string form should be used for window names in get_window. It does not state that:
- Function names with underscores should work
- Only specific string aliases are supported
- There's a difference between the function name and the string identifier

The documentation shows the function exists as `windows.kaiser_bessel_derived` but doesn't clarify that when calling through `get_window`, a different string identifier must be used.

### Conclusion

The documentation is ambiguous about window name string identifiers. While it lists kaiser_bessel_derived as a supported window type and shows the function name with underscores, it does not clarify that get_window requires 'kaiser bessel derived' (with spaces) or 'kbd' as the string identifier. This creates a reasonable expectation that the function name itself would work as the identifier, especially since other similarly-named windows (general_cosine, general_gaussian, general_hamming) support both forms.