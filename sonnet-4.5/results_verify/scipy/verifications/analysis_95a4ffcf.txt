Bug Triage Analysis for scipy.constants.find()
================================================

## Consideration for Each Category

### BUG (Valid Bug Report)
**Arguments For:**
- The docstring explicitly states the function returns "list of physical_constant keys"
- The docstring says "By default, return all keys" when sub=None
- The implementation uses _current_constants instead of physical_constants
- Users can access constants via physical_constants[key] but cannot find them with find()
- This violates the principle of least surprise - a find function should find all available items
- The function name and documentation create a clear contract that is being violated
- 90 keys (20% of all constants) are inaccessible through find() despite being in physical_constants

**Arguments Against:**
- The implementation has been this way for some time without complaints
- Perhaps the intent was always to search only current constants

### INVALID (Incorrect Bug Report)
**Arguments For:**
- None - the bug report is factually correct about the behavior

**Arguments Against:**
- The bug is real and reproducible
- The documentation clearly states what should happen
- The implementation demonstrably differs from the documentation

### WONTFIX (Trivial/Unimportant)
**Arguments For:**
- Users can still access all constants directly via physical_constants
- Most users probably only need current CODATA constants
- The missing constants are from older CODATA versions

**Arguments Against:**
- This affects 90 out of 445 constants (20%) - not a trivial number
- The function explicitly claims to search physical_constants
- Users rely on find() to discover available constants
- This is a clear contract violation, not an edge case

### FEATURE_REQUEST (New Functionality)
**Arguments For:**
- One could argue that searching all historical constants is a new feature
- The current behavior might be intentional to focus on latest CODATA

**Arguments Against:**
- The documentation already promises this behavior
- This isn't asking for new functionality, but for the function to do what it claims
- The docstring explicitly says "physical_constant keys" and "all keys"

### DOCUMENTATION_FIX (Documentation Error)
**Arguments For:**
- The easiest fix would be to update the documentation to match current behavior
- Could clarify that find() searches only current CODATA constants
- The implementation might be intentional, and the docs are wrong

**Arguments Against:**
- The documentation clearly references physical_constants, which includes all versions
- Changing docs would break the semantic relationship between find() and physical_constants
- The examples show using find() results with physical_constants, implying they should match
- It makes more sense to fix the implementation (2 line change) than break the API contract

## Analysis Summary

This is a clear case where:
1. The documentation makes explicit promises about behavior
2. The implementation violates those promises
3. The violation affects a significant portion of the data (20%)
4. The fix is straightforward (use physical_constants instead of _current_constants)
5. Users have a reasonable expectation that find() would search all available constants

The bug report correctly identifies:
- The exact nature of the discrepancy
- The root cause in the code
- A proper fix

This is not about unspecified behavior, edge cases, or feature requests. The function has a clear contract in its documentation that it violates. The principle of least surprise supports that a find() function should find all available items unless explicitly limited.