DOCUMENTATION ANALYSIS
======================

## Official SciPy Documentation Review

### scipy.signal.tf2ss
The documentation states:
- Converts transfer function representation to state-space representation
- Uses controller canonical form
- Parameters: numerator and denominator polynomial coefficients
- Returns: A, B, C, D matrices for state-space representation
- No explicit mention of round-trip properties or guarantees

### scipy.signal.ss2tf
The documentation states:
- Converts state-space representation to transfer function representation
- Parameters: A, B, C, D matrices from state-space model
- Returns: numerator and denominator polynomials
- No explicit mention of round-trip properties or preservation of polynomial degree

## Control Theory Documentation

### Mathematical Foundation
According to control theory references and Wikipedia:
- Transfer function: G(s) = C(sI-A)^{-1}B + D
- For pure feedthrough systems where B=0 and C=0, the first term becomes zero
- Result should be G(s) = D (a constant)

### Pure Feedthrough Systems
From control engineering resources:
- A pure feedthrough system has direct input-to-output connection with no internal dynamics
- Characterized by zero state evolution (A, B, C matrices may be zero or have no effect)
- The D matrix represents the direct feedthrough gain
- For a constant transfer function H(s) = k, the correct representation is numerator=[k], denominator=[1]

## Documentation Gaps

1. **Round-trip behavior not specified**: Neither tf2ss nor ss2tf documentation explicitly states that round-trip conversion should preserve polynomial coefficients or degree.

2. **Pure feedthrough handling not documented**: The documentation doesn't specify how pure feedthrough systems (where state matrices have no dynamics) should be handled.

3. **Canonical forms not fully explained**: While tf2ss mentions "controller canonical form," the implications for round-trip conversion aren't discussed.

## Implicit Expectations

Despite documentation gaps, there are reasonable implicit expectations:
1. Mathematical correctness: The conversion should follow standard control theory (G(s) = C(sI-A)^{-1}B + D)
2. Minimal representation: Polynomials shouldn't have unnecessary terms (no spurious zeros)
3. Consistency with MATLAB and other tools: MATLAB's ss2tf handles this case correctly

## Conclusion

While the documentation doesn't explicitly promise round-trip preservation, the current behavior violates:
1. Mathematical correctness (introducing spurious polynomial terms)
2. Standard control theory conventions
3. Reasonable user expectations for system conversion tools

The bug represents incorrect implementation of well-established mathematical theory rather than a documentation issue.