# Documentation Analysis for scipy.special logit/expit

## Key Documentation Claims

### 1. Inverse Relationship Claim

**expit documentation explicitly states:**
"It is the inverse of the logit function."

**logit documentation shows an example:**
```python
>>> logit(expit([-2.5, 0, 3.1, 5.0]))
array([-2.5,  0. ,  3.1,  5. ])
```

**expit documentation also shows:**
```python
>>> expit(logit([0.1, 0.75, 0.999]))
array([ 0.1  ,  0.75 ,  0.999])
```

### 2. Critical Finding: No Documented Limitations

The documentation **does not mention any numerical limitations** for the inverse relationship. Specifically:

1. No warning about precision loss for large values of x
2. No mention that logit(expit(x)) may fail for x >= 40
3. No discussion of floating point limitations
4. No caveat about the composition breaking down for certain input ranges

### 3. Examples Are Misleading

The documentation examples only use small values:
- expit examples: [-2.5, 0, 3.1, 5.0] - all values where the inverse works perfectly
- logit examples: [0.1, 0.75, 0.999] - all values in (0,1) where precision is maintained

These examples give users false confidence that the functions are true inverses for all inputs.

### 4. Mathematical Definitions

- expit(x) = 1/(1+exp(-x))
- logit(p) = log(p/(1-p))

While mathematically these are inverses, the documentation doesn't acknowledge that floating point arithmetic makes this relationship approximate, not exact.

### 5. Domain and Range Specifications

- logit: Defined for p in (0,1), returns real numbers (-inf to inf)
- expit: Defined for all real numbers, returns values in (0,1)

The documentation correctly states that logit(0) = -inf and logit(1) = inf, but doesn't warn that expit(large_x) may round to exactly 1.0 in floating point.

## Conclusion

The documentation makes an unqualified claim that these functions are inverses and provides examples that reinforce this claim. There are **no warnings, caveats, or mentions of numerical limitations** that would alert users to the fact that the inverse relationship breaks down for moderate to large values (|x| > 25).

This is a clear discrepancy between the documented behavior ("It is the inverse of the logit function") and the actual behavior (fails for x >= 40, significant error for x >= 27).