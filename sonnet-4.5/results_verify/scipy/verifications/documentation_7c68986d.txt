## Documentation Analysis for scipy.io.mmwrite and scipy.io.mmread

### Official scipy.io.mmwrite Documentation
The scipy.io.mmwrite function documentation shows:
- It accepts a `field` parameter that can be 'real', 'complex', 'pattern', or 'integer'
- The function is supposed to support complex arrays with special symmetry handling
- The documentation states that for complex matrices, complex number structure is preserved in the output
- There is no explicit mention of automatic field type detection based on the input matrix dtype
- There is no explicit guarantee about round-trip preservation of dtypes

### Official scipy.io.mmread Documentation
The scipy.io.mmread function documentation shows:
- It reads Matrix Market format files and returns ndarray or coo_array
- The documentation does not explicitly guarantee dtype preservation
- There is no specific mention of how complex data types should be handled
- There is no explicit round-trip guarantee mentioned in the documentation

### Matrix Market Format Specification
According to the NIST Matrix Market Exchange Format specification:
- The format explicitly supports complex data types with "complex" specified in the header
- The first header line should follow: "%%MatrixMarket matrix [format] [dtype] [symmetry]"
- Valid data types include: real, complex, integer, pattern
- The format is designed to preserve data type information in the header
- The format allows representing matrix structure even with zero values

### Key Finding
The Matrix Market format specification clearly states that the data type (real, complex, integer, pattern) must be specified in the header line. This is a fundamental part of the format, not an optional feature. The header should reflect the data type of the matrix being written, regardless of whether the matrix has non-zero values or not.

### Documentation Gap
Neither the scipy.io.mmwrite nor scipy.io.mmread documentation explicitly states that:
1. Round-trip preservation of dtype is guaranteed
2. How the field type is automatically determined if not specified
3. Whether empty sparse matrices should preserve their dtype

However, the Matrix Market format itself is designed to preserve data type information, and the scipy implementation is meant to be a faithful implementation of this format.