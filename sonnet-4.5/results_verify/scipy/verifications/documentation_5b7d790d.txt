## Documentation Analysis

### Source Code Review

From examining the scipy.constants._codata.py source code, I found:

1. **physical_constants dictionary construction** (lines 2061-2067):
   - `physical_constants` is built by merging constants from ALL CODATA versions (2002, 2006, 2010, 2014, 2018, 2022)
   - This results in a comprehensive dictionary containing both current and obsolete constants

2. **_current_constants definition** (line 2068):
   - `_current_constants = _physical_constants_2022`
   - Only contains the latest CODATA 2022 constants

3. **Obsolete constant tracking** (lines 2072-2075):
   - The code explicitly identifies and tracks obsolete constants
   - Any key in `physical_constants` but not in `_current_constants` is marked as obsolete

### find() Function Documentation

The docstring for `find()` states:
- Line 2204: "Return list of physical_constant keys containing a given string."
- Line 2209: "Sub-string to search keys for. By default, return all keys."

The documentation clearly promises:
1. To search "physical_constant keys" (not just current constants)
2. When sub=None, to "return all keys"

### find() Function Implementation (lines 2250-2254)

The actual implementation:
- When `sub is None`: returns `list(_current_constants.keys())`
- When searching: searches only in `_current_constants`

This contradicts the documentation which refers to "physical_constant keys" (implying all keys in the physical_constants dictionary).

### Official SciPy Documentation

The online documentation doesn't explicitly clarify whether find() should search all historical constants or just current ones. However, it does:
- Mention `ConstantWarning` for accessing obsolete constants
- Refer to the function searching "physical constant dictionary keys"

### Key Finding

The documentation is ambiguous but leans toward the interpretation that find() should search all physical_constants:
1. The docstring says "physical_constant keys" not "current physical constant keys"
2. The parameter description says "By default, return all keys" without qualification
3. The examples show usage with `physical_constants` dictionary, implying consistency between find() and physical_constants