DOCUMENTATION ANALYSIS
======================

Documentation Review Summary:
The documentation does NOT specify any restrictions on the shape relationship between observations and features.

Key Documentation Findings:

1. Input Data Requirements (from scipy.cluster.vq.kmeans2 docs):
   - Accepts 'M' by 'N' array of 'M' observations in 'N' dimensions
   - Also accepts Length 'M' array of 1-D observations
   - No mention that M must be != N or any other shape restrictions
   - No warning about square matrices (M == N)

2. minit='random' Parameter:
   - Documented as: "Generate centroids from Gaussian with data-estimated mean/variance"
   - No mention of limitations when observations == features
   - No warning about potential LinAlgError for certain data shapes
   - Other minit options ('points', '++', 'matrix') don't have this issue

3. Expected Exceptions:
   - Documentation mentions ClusterError for empty clusters (when missing='raise')
   - No mention of LinAlgError being a possible exception
   - No documentation about rank-deficient covariance matrices

4. Mathematical Expectations:
   - K-means clustering is a general-purpose algorithm
   - Should work for any valid data matrix regardless of shape
   - Square matrices (n_obs == n_features) are valid clustering inputs
   - Nothing in k-means theory prohibits square data matrices

5. Comparison with Other Initialization Methods:
   - minit='points' and minit='++' work fine with square matrices
   - Only minit='random' has this issue
   - This inconsistency is not documented

Conclusion:
The documentation provides no indication that kmeans2 with minit='random' should fail on square matrices. Users would reasonably expect the function to handle all valid input shapes, especially since other initialization methods work correctly with the same data. The crash is unexpected behavior not covered by the documentation.