Bug Reproduction Analysis

I successfully reproduced the reported bug and conducted comprehensive testing:

1. EXACT REPRODUCTION OF REPORTED BUG:
When calling scipy.fft.dct(np.array([1.0]), type=1), the function raises:
   RuntimeError: zero-length FFT requested

This matches exactly what the bug report claims.

2. IDCT TYPE 1 ALSO AFFECTED:
scipy.fft.idct(np.array([1.0]), type=1) produces the same error:
   RuntimeError: zero-length FFT requested

3. OTHER DCT TYPES WORK CORRECTLY:
I tested DCT types 2, 3, and 4 with single-element arrays:
- Type 2: Works correctly, roundtrip successful
- Type 3: Works correctly, roundtrip successful
- Type 4: Works correctly, roundtrip successful

All three alternative types handle single-element arrays without error and maintain the roundtrip property idct(dct(x)) ≈ x.

4. DCT TYPE 1 WITH 2 ELEMENTS:
With a 2-element array [1.0, 2.0], DCT type 1 works correctly:
- dct produces [3., -1.]
- Roundtrip idct(dct(x)) correctly returns [1., 2.]

5. TECHNICAL ACCURACY OF BUG REPORT:
The bug report's technical claims are accurate:
- The error occurs exactly as described
- Other DCT types do handle single elements
- The error message "zero-length FFT requested" suggests internal implementation uses 2*(n-1) sizing

6. MATHEMATICAL CLAIM VERIFICATION:
The bug report claims DCT-I is "mathematically well-defined for arrays of any size." This is INCORRECT.
According to mathematical references and scipy documentation, DCT-I requires N > 1 by mathematical definition, not just implementation choice.

The formula for DCT-I inherently requires at least 2 elements because it references both endpoints (x_0 and x_{N-1}) and includes a summation that's only valid for N ≥ 2.

SUMMARY:
The behavior is reproducible and matches the report, but this is documented, expected behavior based on the mathematical definition of DCT-I, not a bug.