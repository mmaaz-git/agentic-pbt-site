## Documentation Findings for scipy.optimize Root Finders

### RootResults Class Documentation
According to the official scipy documentation, the RootResults class has the following documented attributes:
- `root` (float): "Estimated root location"
- `iterations` (int): "Number of iterations needed to find the root"
- `function_calls` (int): "Number of times the function was called"
- `converged` (bool): Indicates whether the root-finding routine successfully converged
- `flag` (str): "Description of the cause of termination"
- `method` (str): "Root finding method used"

The documentation specifically states that the `iterations` field is an integer representing "Number of iterations needed to find the root."

### Function Documentation for bisect, brentq, ridder, brenth
The documentation for these functions states:
1. They require `f(a)` and `f(b)` to have opposite signs
2. If `full_output=True`, they return a tuple `(x, r)` where `x` is the root and `r` is a RootResults object
3. The functions will find a root between the bracketing interval [a, b]

### Key Documentation Gap
The documentation does NOT specify what should happen when:
- The root is exactly at one of the boundaries (a or b)
- What the `iterations` field should contain when no iteration is actually needed (boundary case)

### Relevant Constraint from Documentation
The documentation states "f(a) and f(b) cannot have the same signs" or "f(a) and f(b) must have opposite signs". This implies:
- If f(a) = 0, then a is a root, and f(b) must have a different sign (non-zero)
- If f(b) = 0, then b is a root, and f(a) must have a different sign (non-zero)
- The documentation doesn't explicitly prohibit boundary roots

### Contract Expectation
The documentation establishes a clear contract that:
1. The `iterations` field should be an integer
2. It should represent "Number of iterations needed to find the root"
3. There is no documented exception for boundary cases

### Conclusion
The documentation establishes that `iterations` should always be a meaningful integer representing the actual iteration count. There is no documented exception that would permit uninitialized/garbage values in any case, including boundary roots. The bug report's claim that this violates the documented contract appears valid based on the documentation review.