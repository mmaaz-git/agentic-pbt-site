Bug Reproduction Report
=======================

I have successfully reproduced the bug described in the report. Here are my findings:

1. Main Bug Confirmation:
   - scipy.fft.dct(np.array([0.0]), type=1, norm='ortho') raises RuntimeError: zero-length FFT requested
   - scipy.fft.dct(np.array([1.0]), type=1, norm='ortho') raises the same RuntimeError
   - The error occurs for any single-element array with DCT type 1

2. Property-Based Test:
   - The Hypothesis test fails as described with data=[0.0], dct_type=1
   - The error is RuntimeError: zero-length FFT requested

3. Consistency Testing Results:
   Single-element array [1.0]:
   - DCT type 1: FAILS with RuntimeError
   - DCT type 2: SUCCESS, returns [1.]
   - DCT type 3: SUCCESS, returns [1.]
   - DCT type 4: SUCCESS, returns [1.]
   - DST type 1: SUCCESS, returns [1.]  (despite similar documentation)
   - DST type 2: SUCCESS, returns [1.]
   - DST type 3: SUCCESS, returns [1.]
   - DST type 4: SUCCESS, returns [1.]

4. Two-element array test:
   - DCT type 1 with [1.0, 2.0] works correctly, returning [2.12132034, -0.70710678]

5. Error Message Analysis:
   - The error message "zero-length FFT requested" is misleading
   - The input array has length 1, not 0
   - This suggests an internal implementation issue where N-1 is calculated somewhere

The bug is real and reproducible. DCT type 1 is uniquely unable to handle single-element arrays among all DCT/DST types, and the error message is incorrect.