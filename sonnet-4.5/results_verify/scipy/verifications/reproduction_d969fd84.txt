## Reproduction Analysis

### Confirmed Behavior
I successfully reproduced the reported behavior:
- DCT Type 1 with a single-element array raises `RuntimeError: zero-length FFT requested`
- DCT Types 2, 3, and 4 all handle single-element arrays correctly and return appropriate results

### Test Results
1. For `np.array([0.])`:
   - Type 1: RuntimeError
   - Type 2: Returns `[0.]`
   - Type 3: Returns `[0.]`
   - Type 4: Returns `[0.]`

2. For other single-element values (1.0, -1.0, 5.0, 100.0):
   - Type 1: Always raises RuntimeError
   - Types 2, 3, 4: All return valid transformed values

### Mathematical Verification
The DCT-I formula is: X_k = 1/2(x_0 + (-1)^k x_{N-1}) + ∑_{n=1}^{N-2} x_n cos[π/(N-1) nk]

For N=1:
- The term π/(N-1) = π/0 results in division by zero
- The summation from n=1 to N-2 = -1 is invalid (empty sum)
- Therefore, DCT Type 1 is mathematically undefined for single-element arrays

### Error Message Analysis
The error "zero-length FFT requested" makes sense because DCT-I is typically implemented using FFT of length 2(N-1). For N=1, this becomes 2(0) = 0, resulting in a zero-length FFT request.

### Verification with N=2
DCT Type 1 works correctly for N=2 (the minimum valid size), confirming that the implementation works for all valid inputs according to the mathematical definition.

### Conclusion
The behavior is exactly as reported in the bug report. However, this appears to be mathematically correct behavior, not a bug, as DCT Type 1 is undefined for N < 2 according to both the documentation and mathematical definition.