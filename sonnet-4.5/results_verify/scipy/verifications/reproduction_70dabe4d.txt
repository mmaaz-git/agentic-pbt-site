BUG REPRODUCTION REPORT
=======================

I have successfully reproduced the reported bug in scipy.io.matlab's loadmat/savemat functions.

## Hypothesis Test
The provided Hypothesis test failed as expected when using chars_as_strings=False. The test correctly identifies that the round-trip behavior is not idempotent when character arrays are loaded without conversion to strings.

## Manual Reproduction
The manual test confirmed the exact behavior described in the bug report:

1. Initial save and load with chars_as_strings=False:
   - Original Python string 'hello' â†’ Array shape (1, 5)
   - Type: numpy.ndarray containing individual characters ['h', 'e', 'l', 'l', 'o']

2. Second round-trip (save loaded data, load again):
   - Array shape changes to (1, 5, 1)
   - The character array gains an extra dimension

3. Third round-trip:
   - Array shape changes to (1, 5, 1, 1)
   - Another dimension is added

This pattern continues indefinitely, with each save-load cycle adding a trailing dimension to the array.

## Control Test with chars_as_strings=True
When using chars_as_strings=True (the default), the round-trip works correctly:
- The text remains as ['hello'] through multiple cycles
- No dimension changes occur
- The data remains identical and idempotent

## Impact
The bug is real and significant because:
1. It violates the principle of idempotent round-trips after the first cycle
2. Data structures unexpectedly change shape during normal save/load operations
3. This could break code that expects consistent array dimensions
4. The behavior is inconsistent with the documented goal of enabling "easier round-trip load and save"