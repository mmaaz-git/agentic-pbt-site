DOCUMENTATION ANALYSIS
======================

## Key Documentation Findings

### 1. Round-Trip Property Documentation

The documentation states that "irfft(rfft(x), len(x)) == x to within numerical accuracy". Note the explicit inclusion of `len(x)` as the second parameter. This is a crucial detail.

The documentation also mentions:
- By default, irfft assumes an even-length output signal
- For odd-length signals, you MUST specify the n parameter to recover the original signal

### 2. Default Behavior of irfft's n Parameter

When n is not specified, the documentation states it defaults to `2*(m-1)` where m is the input length. This formula works correctly for even-length arrays but fails for:
- Single-element arrays (produces n=0)
- Odd-length arrays (produces incorrect output length)

### 3. Documentation Gaps and Issues

1. **Single-element array case is not explicitly mentioned**
   - The documentation doesn't warn about the n=0 edge case
   - No example shows single-element array handling

2. **Error message is misleading**
   - The error "Invalid number of data points (0) specified" incorrectly implies the user specified n=0
   - The documentation doesn't explain that this error can occur from internal calculations

3. **Round-trip property claim is incomplete**
   - The statement "irfft(rfft(x), len(x)) == x" suggests you always need to specify len(x)
   - But examples show irfft(rfft(x)) working for even-length arrays without n
   - This inconsistency is confusing

### 4. Expected Behavior Based on Documentation

Given the documentation:
- Users would expect irfft(rfft(x)) to work for ANY array, or
- The documentation should clearly state that n must be specified for odd-length arrays (including single elements)

### 5. Comparison with NumPy FFT

NumPy's equivalent functions (numpy.fft.rfft/irfft) handle this case differently and may set different expectations for users migrating from NumPy.

## Conclusion

The documentation is incomplete regarding:
1. The single-element array edge case
2. The misleading error message when n computes to 0
3. Clear guidance on when n must be specified vs. when it can be omitted

The bug report correctly identifies a case where the current behavior violates reasonable user expectations based on the incomplete documentation.