## Bug Report Triage Analysis

### Considering INVALID
**Why it might be INVALID:**
- The documentation doesn't explicitly state what should happen for all-zero vectors
- One could argue the behavior is "unspecified"

**Why it's NOT INVALID:**
- Functions in scipy.spatial.distance are expected to be valid distance/dissimilarity metrics
- A fundamental property of any distance metric is d(x,x) = 0
- Returning NaN for identical vectors violates this basic mathematical property
- The function is not behaving correctly from a mathematical perspective

### Considering WONTFIX
**Why it might be WONTFIX:**
- All-zero vectors might be considered an edge case
- Users could check for this condition themselves

**Why it's NOT WONTFIX:**
- This is not an obscure edge case - sparse boolean vectors are common in real applications
- The exact same issue was already fixed in the jaccard function (scipy 1.2.0)
- The fix is simple and doesn't break existing functionality
- Comparing empty sets/features is a realistic use case in document similarity, set operations, etc.

### Considering DOCUMENTATION_FIX
**Why it might be DOCUMENTATION_FIX:**
- The documentation doesn't mention this edge case
- One could update docs to say "returns NaN for all-zero vectors"

**Why it's NOT DOCUMENTATION_FIX:**
- The current behavior is mathematically incorrect, not just poorly documented
- Documenting incorrect behavior doesn't make it correct
- The jaccard function was fixed (not just documented) for the same issue

### Considering FEATURE_REQUEST
**Why it might be FEATURE_REQUEST:**
- Handling all-zero vectors could be seen as a new feature
- The current implementation doesn't have this capability

**Why it's NOT FEATURE_REQUEST:**
- This is fixing broken behavior, not adding new functionality
- The function should already handle this case correctly as a dissimilarity metric
- It's a bug fix to make the function mathematically correct

### Considering BUG
**Why it IS a BUG:**
1. **Violates metric properties**: Any dissimilarity metric must satisfy d(x,x) = 0. Returning NaN violates this.
2. **Inconsistent with similar functions**: jaccard was fixed for this exact issue in scipy 1.2.0
3. **Mathematical correctness**: The 0/0 case should be handled as 0 for identical empty sets
4. **Real-world impact**: Sparse boolean vectors are common in practice
5. **Clear precedent**: The jaccard fix shows this is considered a bug worth fixing
6. **User expectations**: Users expect functions in scipy.spatial.distance to behave as valid metrics

### Conclusion
This is clearly a **BUG**. The function fails to satisfy the fundamental metric property d(x,x) = 0, which is a mathematical requirement for any dissimilarity measure. The fact that jaccard was already fixed for the identical issue provides strong precedent. The proposed fix is simple, correct, and consistent with the existing codebase.