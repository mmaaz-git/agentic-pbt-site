DOCUMENTATION ANALYSIS
======================

scipy.linalg.funm Documentation:
- Purpose: Evaluates matrix functions by extending scalar functions to matrices
- Algorithm: Uses Schur decomposition (Algorithm 9.1.1 from Golub & Van Loan)
- Parameters: Takes a matrix A and a callable scalar function
- Returns: Matrix result of applying the function, with optional error estimate
- Warnings: The function can emit warnings about inaccuracy when disp=True
- NO EXPLICIT MENTION of limitations with nilpotent or defective matrices in the main documentation

scipy.linalg.expm Documentation:
- Purpose: Specifically designed to compute matrix exponential e^A
- Algorithm: Uses Padé approximation with dynamic order adjustment
- Optimized for matrix exponentials with proven algorithms (Al-Mohy and Higham, 2009)
- NO MENTION of funm or comparison between the two functions

GitHub Issue #2304 (Historical Context):
- Title: "funm gives incorrect results for non-diagonalizable inputs"
- Confirms that funm has KNOWN ISSUES with non-diagonalizable matrices
- The issue was acknowledged and addressed by adding documentation warnings
- The problem is inherent to the algorithm - funm requires computing numerical derivatives for Jordan blocks
- For non-diagonalizable matrices, funm needs to compute f'(λ), f''(λ), etc., which is numerically challenging

Key Documentation Gaps:
1. The main funm documentation does NOT explicitly warn about defective/nilpotent matrices
2. There is NO documentation stating that funm(A, np.exp) should equal expm(A)
3. The warning "funm result may be inaccurate" does not convey the severity - the result can be fundamentally wrong
4. No documentation directs users to use expm instead of funm for matrix exponentials

Expected Behavior:
While not explicitly documented, there is a reasonable expectation that:
- funm(A, np.exp) should compute the matrix exponential
- This should match expm(A) for the same input
- The exponential function is a fundamental matrix function that should work correctly

Documentation vs Reality:
- The documentation doesn't promise funm works for all matrices
- But it also doesn't clearly warn about the severe limitations with defective matrices
- The existing warning system is insufficient - it warns but still returns wrong results
- Users would reasonably expect funm(A, exp) = expm(A) even without explicit documentation