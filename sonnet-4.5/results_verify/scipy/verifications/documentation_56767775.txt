DOCUMENTATION FINDINGS FOR scipy.datasets.face()

Official Documentation:
The scipy.datasets.face() function documentation states:
- It returns a 1024 x 768 image of a raccoon face
- The 'gray' parameter is optional (bool): if True, returns 8-bit grayscale image; if False (default), returns color image
- Returns an ndarray containing the image data

Key Documentation Observations:
1. The documentation does NOT specify which grayscale conversion formula or weights are used
2. The documentation does NOT specify that any particular standard (ITU-R BT.601, BT.709, etc.) should be followed
3. The documentation does NOT state that the weights should sum to 1.0
4. The documentation does NOT promise any particular behavior regarding luminance preservation
5. The function is simply described as returning a "grayscale image" when gray=True

Source Code Review:
The actual implementation in scipy/datasets/_fetchers.py shows:
- Lines 223-224: face = (0.21 * face[:, :, 0] + 0.71 * face[:, :, 1] + 0.07 * face[:, :, 2]).astype('uint8')
- These weights (0.21, 0.71, 0.07) sum to 0.99, not 1.0

External Standards Research:
Standard RGB-to-grayscale conversion formulas include:
- ITU-R BT.601: (0.299, 0.587, 0.114) - sums to 1.0
- ITU-R BT.709 (sRGB): (0.2126, 0.7152, 0.0722) - sums to 1.0
- ITU-R BT.2100: (0.2627, 0.6780, 0.0593) - sums to 1.0

The scipy weights appear to be incorrectly rounded versions of BT.709:
- 0.2126 → 0.21 (rounded down)
- 0.7152 → 0.71 (rounded down)
- 0.0722 → 0.07 (rounded down)

Documentation Gap:
Since the documentation doesn't specify:
- Which conversion method should be used
- Whether weights should sum to 1.0
- Whether any specific standard should be followed
- Whether luminance should be preserved

The behavior is technically undefined from a documentation perspective. The function simply promises to return a "grayscale image" without specifying the exact conversion methodology.