BUG TRIAGE ANALYSIS
===================

## Consideration for BUG

**Why it might be a BUG:**
1. The documentation explicitly promises "easier round-trip load and save" functionality
2. The behavior violates the principle of idempotent operations after the first round-trip
3. Each save-load cycle progressively corrupts the data structure by adding dimensions
4. This is not a edge case - it affects a documented parameter (chars_as_strings=False)
5. The behavior is deterministic and consistently reproducible
6. Users working with MATLAB files containing character arrays will encounter data corruption
7. The matlab_compatible=True option sets chars_as_strings=False, suggesting this mode should work correctly

**Why it might NOT be a BUG:**
- chars_as_strings=False is not the default setting (but it is still a documented, supported option)

## Consideration for INVALID

**Why it might be INVALID:**
- The documentation doesn't explicitly guarantee idempotent round-trips for all parameter combinations

**Why it is NOT INVALID:**
1. The documentation promises round-trip support as a key feature
2. The behavior is objectively broken - dimensions keep growing infinitely
3. There's no reasonable interpretation where adding dimensions each cycle is correct behavior
4. The bug affects a documented, supported parameter

## Consideration for WONTFIX

**Why it might be WONTFIX:**
- Users can work around it by using chars_as_strings=True (the default)

**Why it is NOT WONTFIX:**
1. This is not an obscure edge case - character arrays are common in MATLAB files
2. The matlab_compatible mode uses chars_as_strings=False, so this affects compatibility
3. The progressive dimension corruption is a serious data integrity issue
4. Some users need chars_as_strings=False for proper MATLAB compatibility

## Consideration for FEATURE_REQUEST

**Why it might be FEATURE_REQUEST:**
- Could argue that proper round-trip support with chars_as_strings=False is a new feature

**Why it is NOT FEATURE_REQUEST:**
1. Round-trip support is already documented as existing
2. This is fixing broken behavior, not adding new functionality
3. The current behavior is clearly a defect, not a missing feature

## Consideration for DOCUMENTATION_FIX

**Why it might be DOCUMENTATION_FIX:**
- The documentation could be updated to warn about this limitation

**Why it is NOT DOCUMENTATION_FIX:**
1. The code behavior is objectively wrong - dimensions shouldn't grow infinitely
2. Fixing the documentation would not solve the underlying data corruption issue
3. The promise of "easier round-trip" would be false if this behavior is intended

## CONCLUSION

This is clearly a **BUG**. The behavior is:
1. Objectively incorrect (infinite dimension growth)
2. Violates documented promises (round-trip support)
3. Causes data corruption (array dimensions change unexpectedly)
4. Affects a supported use case (MATLAB compatibility)
5. Not an edge case (character arrays are common in MATLAB)

The progressive addition of dimensions on each round-trip is indefensible as correct behavior. No reasonable user would expect or want their array dimensions to grow infinitely with each save-load cycle. This is a clear implementation defect that should be fixed.