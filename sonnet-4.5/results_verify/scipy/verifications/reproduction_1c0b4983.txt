## Reproduction Results for scipy.ndimage.shift Bug Report

### Environment
- SciPy version: 1.16.2
- NumPy version: Confirmed working
- Python 3

### Bug Reproduction - Confirmed

The bug report's claim is CONFIRMED. The round-trip shift with mode='wrap' is NOT invertible.

#### Test Case Results:

1. **Original array**: [0., 1., 2., 3., 4.]
2. **After shift by 2 with mode='wrap'**: [2., 3., 0., 1., 2.]
3. **After shift back by -2 with mode='wrap'**: [0., 1., 2., 3., 0.]
4. **Expected (original)**: [0., 1., 2., 3., 4.]

**Result**: The last element is 0.0 instead of the expected 4.0

### Hypothesis Test Results

The property-based test FAILED immediately on the first example with a simple 1D array and shift=1. This confirms the issue is systematic and not limited to the specific example in the bug report.

### Comparison with grid-wrap Mode

When the same tests are run with mode='grid-wrap':
1. **After shift by 2**: [3., 4., 0., 1., 2.]
2. **After shift back by -2**: [0., 1., 2., 3., 4.]
3. **Result**: PERFECT round-trip, array is correctly restored

The hypothesis test with 'grid-wrap' mode passed all 100 examples without any failures.

### Analysis of the Problem

The 'wrap' mode shows two issues:

1. **Forward shift is incorrect**: When shifting by 2, we expect [3., 4., 0., 1., 2.] but get [2., 3., 0., 1., 2.]. The first two elements are wrong.

2. **Backward shift compounds the error**: The incorrect forward shift leads to an incorrect backward shift, resulting in the final element being 0 instead of 4.

### Key Finding

The 'wrap' mode has fundamental issues with boundary handling that make it non-invertible. However, the 'grid-wrap' mode (available since SciPy 1.6) works correctly and IS invertible as expected for periodic boundary conditions.

### Technical Correctness of Bug Report

The bug report is technically correct in its observations:
- The code examples run correctly
- The outputs match what the bug report claims
- The property-based test correctly identifies the issue
- The expectation that periodic boundaries should be invertible is reasonable

However, the documentation explicitly notes that 'wrap' mode has ambiguous behavior at boundaries, and 'grid-wrap' was introduced specifically to address this issue.