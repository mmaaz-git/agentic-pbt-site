TRIAGE ANALYSIS: scipy.stats.quantile Integer p Values

Evaluation of each possible categorization:

1. INVALID
Arguments against:
- The bug report correctly identifies that the function rejects valid mathematical inputs
- Integer 0 and 1 are valid probability values
- The reproduction code works as described in the report
- NumPy's equivalent functions accept these values

Arguments for:
- The documentation does say "array_like of float" which could be interpreted as requiring float type
- The error message is technically accurate

Verdict: NOT INVALID - The bug is real and the report is accurate

2. WONTFIX
Arguments for:
- Users can easily work around by using 0.0 instead of 0
- The error message clearly explains the issue
- Changing this might break existing code that relies on the type check

Arguments against:
- This is not an obscure edge case - using 0 and 1 for min/max quantiles is common
- The inconsistency with NumPy is significant
- The fix is trivial and non-breaking (accepting more inputs, not fewer)

Verdict: NOT WONTFIX - This affects common usage patterns and creates ecosystem inconsistency

3. FEATURE_REQUEST
Arguments for:
- The function technically works as documented if you interpret "float" strictly
- Adding integer support could be seen as a new feature

Arguments against:
- This is about accepting mathematically valid inputs that should work
- NumPy already supports this, so it's fixing an inconsistency not adding new functionality
- The code already has the machinery to handle this (xp_promote with force_floating=True)

Verdict: NOT FEATURE_REQUEST - This is fixing overly restrictive validation, not adding new functionality

4. DOCUMENTATION_FIX
Arguments for:
- The documentation could be clearer about the dtype requirement
- Adding "must be floating-point dtype" would prevent confusion

Arguments against:
- The code behavior is unnecessarily restrictive, not the documentation
- Documenting this restriction would codify an implementation detail
- The mathematical definition doesn't require float dtype

Verdict: NOT DOCUMENTATION_FIX - The code should be fixed to match expectations, not document the restriction

5. BUG
Arguments for:
- The function rejects mathematically valid inputs (0 and 1 as integers)
- Creates inconsistency with NumPy's quantile/percentile functions
- Violates principle of least surprise for Python users
- The restriction serves no mathematical or computational purpose
- The code already has xp_promote(..., force_floating=True) to handle conversion
- Common use cases (min/max quantiles) are affected
- The fix is simple and non-breaking

Arguments against:
- The current behavior matches the strict interpretation of the documentation
- The error message is clear about what's wrong

Verdict: This is a BUG - The function unnecessarily rejects valid inputs that users reasonably expect to work

FINAL ASSESSMENT:
This is a valid BUG report. The scipy.stats.quantile function has an overly restrictive type check that rejects integer p values even though they are mathematically valid, commonly used, and accepted by NumPy's equivalent functions. The restriction serves no purpose since the code already handles type promotion to float.