Documentation Findings for scipy.optimize.curve_fit
====================================================

Based on review of the official scipy documentation and docstrings, I found the following key information:

1. RETURN VALUES:
The documentation clearly states that curve_fit returns:
- popt: Optimal parameter values
- pcov: Estimated parameter covariance matrix, where "diagonals provide the variance of the parameter estimate"

2. BEHAVIOR WHEN COVARIANCE CANNOT BE ESTIMATED:
The documentation EXPLICITLY states in the Returns section:
"If the Jacobian matrix at the solution doesn't have a full rank, then 'lm' method returns a matrix filled with np.inf, on the other hand 'trf' and 'dogbox' methods use Moore-Penrose pseudoinverse to compute the covariance matrix."

This means returning inf values is DOCUMENTED BEHAVIOR for the 'lm' method (which is the default).

3. WARNINGS:
The documentation lists under Raises:
- "OptimizeWarning if parameter covariance can't be estimated"

It does NOT say it raises an exception when covariance cannot be estimated - it only raises an OptimizeWarning.

4. HANDLING OF EXACT DATA/PERFECT FITS:
The documentation does NOT specify any special handling for exact data or perfect fits. It does mention:
- "Covariance matrices with large condition numbers may indicate unreliable results"
- "For reliable results, the model func should not be overparametrized"

5. SOURCE CODE INSPECTION:
Looking at the actual implementation in _minpack_py.py, lines around where pcov.fill(inf) is called:
- When pcov is None or contains NaN, the code explicitly fills it with inf
- This is followed by setting warn_cov = True
- A warning is issued: "Covariance of the parameters could not be estimated"

CONCLUSION:
The current behavior of returning inf values in the covariance matrix when it cannot be estimated is EXPLICITLY DOCUMENTED in the official scipy documentation. This is the intended behavior for the 'lm' method, not a bug.