Documentation Analysis for scipy.constants.find()
==================================================

## Official Documentation

The docstring for `scipy.constants.find()` states:

```
Return list of physical_constant keys containing a given string.

Parameters
----------
sub : str
    Sub-string to search keys for. By default, return all keys.
```

## Key Documentation Claims

1. **Function Purpose**: "Return list of physical_constant keys containing a given string"
   - This explicitly mentions "physical_constant keys" (referring to the `physical_constants` dictionary)

2. **Default Behavior**: "By default, return all keys"
   - When `sub=None` (the default), the function should return ALL keys
   - No qualifier is given that limits this to current CODATA keys only

3. **Examples in Documentation**:
   - All examples show finding keys and then accessing them via `physical_constants[key]`
   - This implies that any key returned by `find()` should be usable with `physical_constants`

## Module-Level Documentation

The `scipy.constants` module documentation states:
- `physical_constants` is a "Dictionary of physical constants" containing values from CODATA
- The dictionary is described as containing physical constants with their values, units, and uncertainties
- There is no indication that `find()` would search a subset of `physical_constants`

## Documentation Consistency

The documentation creates a clear expectation:
1. `find()` searches through `physical_constants` keys
2. When called with `sub=None`, it returns "all keys"
3. Any key returned by `find()` can be used with `physical_constants`

## What the Documentation Does NOT Say

The documentation does NOT:
- Mention that `find()` only searches current CODATA constants
- Indicate that there are different versions of constants (2006, 2010, 2014, 2018, 2022)
- State that `find()` searches `_current_constants` instead of `physical_constants`
- Warn users that some keys in `physical_constants` won't be found by `find()`

## Conclusion

The documentation clearly states that `find()` should:
1. Return keys from `physical_constants`
2. Return ALL keys when `sub=None`

The current implementation violates both of these documented behaviors. This is not a case of unspecified behavior - the documentation explicitly describes what should happen, and the implementation does something different.