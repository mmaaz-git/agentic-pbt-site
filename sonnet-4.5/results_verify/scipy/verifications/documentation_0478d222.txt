## Documentation Analysis

1. **SciPy Documentation**: The official scipy.io.arff documentation does not explicitly state whether nominal attributes can have empty values. The examples show nominal attributes with defined values like `{red,green,blue,yellow,black}`, but there's no mention of the empty case.

2. **ARFF Format Specification**: The ARFF specification from Weka shows the format as `{[nominal-name1], [nominal-name2], [nominal-name3], ...}` which implies values are expected, but does not explicitly prohibit empty sets. The specification lacks clarity on this edge case.

3. **Implementation Details**:
   - The regex pattern `r'{(.+)}'` used for parsing nominal attributes requires at least one character, preventing empty nominal attributes from being parsed from ARFF files.
   - The constructor's use of `max(len(i) for i in values)` assumes non-empty values.
   - The `__str__` method assumes at least one value exists by directly accessing `self.values[-1]`.

4. **Expected Behavior**: Based on the ARFF format's purpose (defining attributes for machine learning), a nominal attribute without any possible values doesn't make logical sense. It would be an attribute that cannot hold any data, which contradicts the purpose of attributes in data files.

5. **Documentation Gap**: Neither the SciPy documentation nor the ARFF specification explicitly addresses empty nominal attributes, leaving this as undefined behavior. The implementation implicitly assumes non-empty values throughout.