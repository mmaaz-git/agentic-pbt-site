BUG TRIAGE ANALYSIS
==================

Evaluating the bug report against each possible category:

1. BUG (Valid Bug Report)
-------------------------
Arguments FOR:
- The behavior is counterintuitive - '__all__' is a documented special keyword that loses its special meaning in comma-separated lists
- Users would reasonably expect '__all__' to disable all plugins even when combined with other values
- The documentation lists '__all__' as a way to disable all plugins but doesn't clarify this limitation
- This could lead to security/functionality issues where users think they've disabled all plugins but haven't
- The fix is straightforward and makes the behavior more consistent

Arguments AGAINST:
- The code technically works as implemented - it checks for exact string matches
- One could argue the documentation table shows these as separate options (exact values vs comma-separated)

2. INVALID
----------
Arguments FOR:
- The implementation matches a strict reading of the code - exact string matching for special values
- The documentation table could be interpreted as showing mutually exclusive options

Arguments AGAINST:
- The behavior violates the principle of least surprise
- '__all__' is clearly meant as a special keyword, not a plugin name
- No reasonable user would expect '__all__' to be treated as a literal plugin name

3. WONTFIX
----------
Arguments FOR:
- This might be considered an edge case that rarely occurs in practice
- Users can just use '__all__' alone without combining it with other values

Arguments AGAINST:
- This is not an obscure edge case - combining disable directives is a reasonable use case
- The fix is simple and improves consistency
- This could cause confusion and potential security issues

4. FEATURE_REQUEST
------------------
Arguments FOR:
- One could argue this is requesting new functionality - making '__all__' work in lists
- The current code never explicitly promised this would work

Arguments AGAINST:
- This is fixing unexpected behavior of an existing feature, not adding new functionality
- '__all__' is already documented as disabling all plugins

5. DOCUMENTATION_FIX
--------------------
Arguments FOR:
- The documentation could be updated to clarify that '__all__' only works as an exact value
- This would document the current behavior rather than changing code

Arguments AGAINST:
- The current behavior is counterintuitive and should be fixed in code, not just documented
- Documenting this limitation would be acknowledging a design flaw rather than fixing it

CONCLUSION
----------
This is a valid BUG. The current implementation violates user expectations and the principle of least surprise. When '__all__' is documented as a special keyword to disable all plugins, users reasonably expect it to maintain this special meaning even when combined with other values in a comma-separated list. The fact that it becomes a literal plugin name in this context is counterintuitive and could lead to security/functionality issues where users believe they've disabled all plugins but haven't. The proposed fix is reasonable and makes the behavior more consistent.