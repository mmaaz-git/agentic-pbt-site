REPRODUCTION RESULTS FOR BUG REPORT
====================================

1. BUG REPRODUCTION - CONFIRMED:
   The bug report is technically accurate. The function does reject Content-Type headers with parameters.

2. TEST RESULTS:

   A. Basic Test Case from Bug Report:
      - Input: '{"key": "value"}' with content_type='application/json'
        Result: SUCCESS - Returns {'key': 'value'}

      - Input: '{"key": "value"}' with content_type='application/json; charset=utf-8'
        Result: FAILURE - TypeError: Unknown content-type: application/json; charset=utf-8

   B. Extended Testing with Various Content-Types:
      WORKING Content-Types (no parameters):
      ✓ 'application/json'
      ✓ 'text/javascript'
      ✓ 'application/javascript'

      FAILING Content-Types (with parameters):
      ✗ 'application/json; charset=utf-8'
      ✗ 'application/json;charset=utf-8' (no space)
      ✗ 'application/json; charset=ISO-8859-1'
      ✗ 'text/javascript; charset=utf-8'
      ✗ 'application/javascript; charset=utf-8'

   C. Hypothesis Test:
      - The hypothesis test FAILED as expected
      - Falsifying example: Any dict with content_type containing charset parameter
      - Confirms the bug exists for all JSON data when charset is specified

3. ROOT CAUSE ANALYSIS:
   The code at line 37 uses:
   ```python
   if content_type.endswith(('json', 'javascript')):
   ```

   This fails because:
   - 'application/json; charset=utf-8' ends with 'utf-8', not 'json'
   - The check is too simplistic for real-world Content-Type headers

4. IMPACT:
   - The function cannot handle standard HTTP Content-Type headers
   - Real-world HTTP responses commonly include charset parameters
   - This breaks compatibility with many web APIs and HTTP clients

5. DEPRECATION STATUS:
   - Function is already deprecated in Pydantic V2.0
   - Will be removed in V3.0
   - All tests emit deprecation warnings