DOCUMENTATION FINDINGS FOR PYDANTIC_DISABLE_PLUGINS
====================================================

## Official Documentation Review

I reviewed the official Pydantic documentation for the PYDANTIC_DISABLE_PLUGINS environment variable. Here's what I found:

### What the documentation explicitly states:
1. The environment variable can disable all plugins by setting it to `__all__`, `1`, or `true`
2. The environment variable can disable specific plugins by providing a comma-separated list of plugin names
3. Example provided in docs: `PYDANTIC_DISABLE_PLUGINS=my-plugin-1,my-plugin2` (note: NO spaces after comma)

### What the documentation does NOT specify:
1. The documentation does NOT explicitly state whether whitespace is allowed or not allowed in the comma-separated list
2. The documentation does NOT specify that spaces must be stripped or that they are significant
3. The documentation does NOT provide any warning about whitespace sensitivity
4. The documentation example shows no spaces, but this is not explicitly called out as a requirement

### Code Implementation Review:
Looking at the actual implementation in `/home/npc/pbt/agentic-pbt/envs/pydantic_env/lib/python3.13/site-packages/pydantic/plugin/_loader.py`:

Line 45: `if disabled_plugins is not None and entry_point.name in disabled_plugins.split(','):`

The code performs a simple `split(',')` operation without any whitespace stripping.

### Comparison with Common Practices:
1. Many configuration systems that accept comma-separated values are whitespace-tolerant (e.g., CSV parsers, many config file formats)
2. Users commonly write comma-separated lists with spaces after commas for readability (e.g., "a, b, c")
3. The Python standard library's csv module and many other tools handle whitespace gracefully

### Documentation Gaps:
The documentation does not clearly specify:
- Whether "plugin1, plugin2" (with space) is equivalent to "plugin1,plugin2" (without space)
- That whitespace in the list is significant and will be part of the plugin name
- That users must avoid spaces after commas

This creates ambiguity about the expected format and could lead to user confusion when their naturally-formatted lists don't work as expected.