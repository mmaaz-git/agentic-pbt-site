## Bug Reproduction Results

### Test 1: Basic Reproduction
**Input**: `load_str_bytes(json_str, content_type='application/json; charset=utf-8')`
**Expected (per bug report)**: Should parse JSON successfully
**Actual Result**: `TypeError: Unknown content-type: application/json; charset=utf-8`
**Confirmation**: Bug reproduced exactly as reported

### Test 2: Control Test Without Parameters
**Input**: `load_str_bytes(json_str, content_type='application/json')`
**Result**: Successfully parses JSON and returns `{'key': 'value'}`
**Observation**: Function works correctly when Content-Type has no parameters

### Test 3: Various Parameter Formats
All the following valid Content-Type headers failed:
- `application/json; charset=utf-8` - Failed with TypeError
- `application/json;charset=utf-8` (no space) - Failed with TypeError
- `text/json; encoding=utf-8` - Failed with TypeError
- `application/javascript; charset=ISO-8859-1` - Failed with TypeError

### Test 4: Current Implementation Behavior
The function successfully accepts:
- `application/json` - Works
- `text/json` - Works
- `application/javascript` - Works
- `text/javascript` - Works
- `anything/json` - Works (ends with 'json')
- `json` - Works (ends with 'json')

### Hypothesis Test Result
The property-based test from the bug report failed immediately on the first example with:
`TypeError: Unknown content-type: application/json; charset=utf-8`

### Technical Analysis of the Bug
1. **Root Cause Confirmed**: The implementation uses `content_type.endswith(('json', 'javascript'))` at line 37 of parse.py
2. **Why It Fails**: When charset is present, the string ends with 'utf-8' or similar, not 'json'
3. **Example**: `'application/json; charset=utf-8'.endswith('json')` returns `False`

### Deprecation Warning
All tests triggered deprecation warnings: "load_str_bytes is deprecated. Deprecated in Pydantic V2.0 to be removed in V3.0"

### Conclusion
The bug is technically reproducible exactly as described. The function cannot parse JSON when the Content-Type header includes standard parameters like charset, which are common in real-world HTTP communications.