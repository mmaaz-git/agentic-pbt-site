## Bug Reproduction Report

### Summary
I have successfully reproduced the reported bug in pydantic's plugin loader regarding whitespace handling in the PYDANTIC_DISABLE_PLUGINS environment variable.

### Reproduction Steps

1. **Hypothesis Test Execution:**
   - Ran the provided property-based test
   - The test fails with input `"plugin1,  plugin2"` (two spaces after comma)
   - The test correctly identifies that when split by comma, spaces are preserved in plugin names

2. **Direct Reproduction Test:**
   - Executed the provided reproduction code
   - Input: `"plugin1, plugin2, plugin3"`
   - Output confirms the bug:
     - Split result: `['plugin1', ' plugin2', ' plugin3']`
     - The string 'plugin2' is NOT found in the list
     - Instead, ' plugin2' (with leading space) is in the list
     - This means a plugin named 'plugin2' would NOT be disabled

3. **Source Code Verification:**
   - Located the actual source at: `/home/npc/pbt/agentic-pbt/envs/pydantic_env/lib/python3.13/site-packages/pydantic/plugin/_loader.py`
   - Line 45 contains the problematic code:
     ```python
     if disabled_plugins is not None and entry_point.name in disabled_plugins.split(','):
     ```
   - This code does indeed split by comma without stripping whitespace from each element

### Impact
The bug causes plugin names with leading/trailing spaces to not match actual plugin names, preventing plugins from being properly disabled when users format their comma-separated list with spaces (a common practice).

### Test Results
All provided test cases successfully demonstrate the bug:
- `"plugin1,plugin2"` - Works correctly (no spaces)
- `"plugin1, plugin2"` - Fails (space after comma)
- `"plugin1 , plugin2"` - Fails (space before and after comma)
- `"plugin1,  plugin2"` - Fails (two spaces after comma)

The bug is reproducible and behaves exactly as described in the report.