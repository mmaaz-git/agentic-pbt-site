DOCUMENTATION FINDINGS FOR pydantic.deprecated.parse.load_str_bytes
=====================================================

1. FUNCTION STATUS:
   - The function `load_str_bytes` is marked as DEPRECATED in Pydantic V2.0
   - It will be REMOVED in Pydantic V3.0
   - The function is decorated with @deprecated and emits PydanticDeprecatedSince20 warnings
   - Located in pydantic/deprecated/parse.py

2. DOCUMENTATION AVAILABILITY:
   - No official documentation found in current Pydantic docs
   - Function is not documented in the main Pydantic API documentation
   - Migration guide does not provide specific guidance for this function
   - No alternative or replacement function is explicitly documented

3. FUNCTION SIGNATURE AND PARAMETERS:
   From source code inspection:
   - content_type: str | None = None
   - encoding: str = 'utf8'
   - proto: Protocol | None = None
   - allow_pickle: bool = False
   - json_loads: Callable[[str], Any] = json.loads

4. CONTENT-TYPE HANDLING IN SOURCE CODE:
   The implementation shows:
   - Line 37: Uses `content_type.endswith(('json', 'javascript'))` to detect JSON
   - Line 39: Uses `content_type.endswith('pickle')` to detect pickle
   - Line 42: Raises TypeError for unrecognized content-type
   - NO documentation about expected content-type format
   - NO specification about whether parameters are allowed

5. HTTP STANDARDS (RFC 2616 and RFC 7231):
   - Content-Type headers MAY include parameters (e.g., charset)
   - Format: "media-type = type/subtype *( OWS ';' OWS parameter )"
   - "application/json; charset=utf-8" is a VALID Content-Type per standards
   - Parameters are commonly used in real-world HTTP applications

6. KEY OBSERVATION:
   The function lacks any documentation about:
   - Whether content-type parameters are supported
   - What format content-type should be in
   - That it only checks if content-type ENDS WITH certain strings
   - This is undocumented behavior that users cannot reasonably predict