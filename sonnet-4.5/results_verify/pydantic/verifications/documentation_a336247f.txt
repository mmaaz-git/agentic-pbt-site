DOCUMENTATION ANALYSIS
======================

Pydantic Experimental Pipeline Documentation
--------------------------------------------
The pipeline module is marked as experimental with the warning: "Be careful with this API, it's subject to change."

The module docstring states: "Experimental pipeline API functionality. Be careful with this API, it's subject to change."

There is no specific documentation found about:
- How many times constraints should be applied
- Whether double application is intended behavior
- Implementation details of _apply_constraint

The public API documentation mentions:
- The constrain method is used to "Constrain a value to meet a certain condition"
- Supports most conditions from annotated_types
- No mention of constraint application frequency

Annotated Types Documentation
------------------------------
The annotated_types library (which provides Gt, Ge, Lt, Le, Len, MultipleOf) documentation indicates:
- These constraints express bounds on orderable values
- They are meant to provide clear, simple constraints
- No indication that double application is expected

Code Intent Analysis
--------------------
Looking at the implementation pattern:

1. The Gt constraint implementation shows clear intent:
   - Apply constraint directly to schema when possible (for performance)
   - Fall back to wrapper function only when schema doesn't support it natively
   - This is evidenced by the else clause at line 458

2. The pattern suggests optimization intent:
   - Direct schema constraints are more efficient (handled by pydantic-core in Rust)
   - Wrapper functions are less efficient (Python function calls)
   - The code tries to use direct constraints when the schema type supports them

3. The missing else clauses appear to be a coding error:
   - All constraint types follow the same pattern
   - Gt has the else clause (correct)
   - Ge, Lt, Le, Len, MultipleOf are missing it (bug)

Conclusion
----------
There is no documentation suggesting that constraints should be applied twice. The code structure and the correct implementation of Gt strongly suggest that single application is the intended behavior. The double application appears to be an unintended bug caused by missing else clauses.