Documentation Findings for CFScaleOffsetCoder
==============================================

1. VariableCoder Base Class Documentation (xarray/coding/common.py):
   - Line 29-30: "Subclasses should implement encode() and decode(), which should satisfy the identity `coder.decode(coder.encode(variable)) == variable`."
   - This is an explicit requirement that the round-trip property must be maintained.

2. CFScaleOffsetCoder Class Documentation (xarray/coding/variables.py):
   - Lines 490-494: Class docstring states it "Scale and offset variables according to CF conventions"
   - Follows the formula: "decode_values = encoded_values * scale_factor + add_offset"
   - No explicit documentation about constraints on scale_factor values

3. CF Conventions Documentation (cfconventions.org):
   - The CF conventions reference scale_factor and add_offset for packed data
   - They defer to the NetCDF User's Guide for specific details
   - No explicit constraints on scale_factor being zero are mentioned

4. NetCDF User's Guide Best Practices:
   - Provides formulas for computing scale_factor:
     * scale_factor = (dataMax - dataMin) / (2^n - 1)
     * scale_factor = (dataMax - dataMin) / (2^n - 2)
   - These formulas imply scale_factor should be non-zero (as dataMax != dataMin normally)
   - However, no explicit statement prohibits scale_factor=0.0

5. Xarray I/O Documentation:
   - States that scale_factor and add_offset must be of the same type
   - Shows the decoding formula: decoded = scale_factor * encoded + add_offset
   - No explicit constraints on scale_factor being zero

Summary:
--------
The documentation does NOT explicitly state that scale_factor=0.0 is invalid or prohibited. However:
- The VariableCoder base class EXPLICITLY requires the round-trip property to be satisfied
- The formulas in the NetCDF best practices suggest scale_factor should typically be non-zero
- The mathematical operation of dividing by zero during encoding is undefined behavior

The lack of explicit documentation about this edge case combined with the explicit requirement for round-trip property preservation suggests this is a real issue that needs to be addressed.