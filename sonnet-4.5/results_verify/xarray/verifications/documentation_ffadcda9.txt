## Documentation Analysis for collapsible_section

### Function Signature
The function `collapsible_section` in `xarray/core/formatting_html.py` has the following signature:
```python
def collapsible_section(
    name, inline_details="", details="", n_items=None, enabled=True, collapsed=False
) -> str
```

### Documentation Status
**No documentation found.** The function has:
- No docstring
- No type hints for most parameters
- No documentation in xarray's official docs
- No specification of expected behavior for edge cases

### Observed Usage Patterns
From examining the codebase, the function is used internally for HTML representation:

1. **Primary caller**: `_mapping_section()` always passes `n_items=len(mapping)` which is guaranteed to be a non-negative integer (0 or positive).

2. **Other usage**: `dim_section()` doesn't pass `n_items` at all (uses default None).

### Intent from Implementation
Based on the code logic:
- `has_items = n_items is not None and n_items` checks if there are items to display
- When `has_items` is False, the section is disabled and collapsed
- When `has_items` is True, the section respects the `enabled` and `collapsed` parameters

### Missing Specifications
The documentation does not specify:
1. What values are valid for `n_items`
2. Whether negative values should be accepted
3. Expected behavior for edge cases (negative, float, string, etc.)
4. Whether this is a public API function or internal-only

### Conclusion
This is an **undocumented internal function** with no explicit contract about parameter validation. The bug report's assumption that negative values should be treated as "no items" is reasonable but not explicitly documented anywhere. The function appears to be designed for internal use where `n_items` comes from `len()` operations, which are always non-negative.