Documentation Findings for _interval_to_bound_points
=====================================================

1. Function Documentation:
   The function `_interval_to_bound_points` has minimal documentation - just a docstring stating:
   "Helper function which returns an array with the Intervals' boundaries."

   This documentation is ambiguous about what "the Intervals' boundaries" means - it could mean:
   - All boundaries (left and right) of all intervals
   - Only the outer boundaries forming a continuous sequence (assuming contiguous intervals)

2. Function Location and Context:
   - The function is located in xarray.plot.utils module
   - It's a private/internal function (prefixed with underscore)
   - Used specifically in the context of pcolormesh plotting

3. Usage Context:
   The function is called from `_resolve_intervals_2dplot` when `func_name == "pcolormesh"`.
   This function is used to convert interval coordinates into boundary points for pcolormesh plotting.

4. Implementation Details:
   The current implementation:
   - Takes all left boundaries from the intervals
   - Adds only the right boundary of the last interval
   - Returns: [interval[0].left, interval[1].left, ..., interval[n-1].left, interval[n-1].right]

5. Related Functions:
   - `_interval_to_mid_points`: Returns mid-points of intervals (used for non-pcolormesh plots)
   - `_interval_to_double_bound_points`: Creates double points for step plots

6. External Documentation:
   - No explicit documentation found in xarray's public API documentation about this internal function
   - xarray's pcolormesh documentation mentions "infer_intervals" parameter but doesn't detail the internal interval handling
   - matplotlib's pcolormesh expects X and Y to specify "corners of the quadrilaterals"

7. Implicit Assumptions:
   The implementation appears to assume intervals are contiguous (i.e., interval[i].right == interval[i+1].left).
   This assumption is not documented or validated in the code.

8. Missing Documentation:
   - No mention of contiguity requirements
   - No parameter validation or error handling
   - No specification of expected behavior for non-contiguous intervals
   - No examples in the docstring