## Documentation Review for xarray.compat.npcompat.isdtype

### NumPy's isdtype Documentation (NumPy >= 2.0)
According to NumPy's official documentation for numpy.isdtype:
- Purpose: "Determine if a provided dtype is of a specified data type kind"
- The function expects a **dtype** as its first parameter, not a scalar value
- Supported kinds include: 'bool', 'signed integer', 'unsigned integer', 'integral', 'real floating', 'complex floating', 'numeric'
- Only supports built-in NumPy data types, not third-party dtypes

The documentation indicates that scalar values like np.int32(5) should use `.dtype` to get the type, e.g., `np.isdtype(np.int32(5).dtype, 'signed integer')`.

### xarray.compat.npcompat Module Documentation
The xarray.compat.npcompat module serves as a compatibility layer to handle differences between NumPy versions. The module comments at the top indicate it's derived from NumPy code (BSD license), but there's no specific documentation about the intended behavior of the isdtype function with regard to scalar inputs.

### xarray.core.dtypes.isdtype Documentation
The xarray.core.dtypes module provides a wrapper function isdtype() at line 201-222. The docstring states:
- "Compatibility wrapper for isdtype() from the array API standard."
- "Unlike xp.isdtype(), kind must be a string."
- The wrapper validates inputs before calling npcompat.isdtype

The wrapper only calls npcompat.isdtype when `isinstance(dtype, np.dtype)` is True (line 214-215), which excludes scalar values.

### Key Finding
The xarray.compat.npcompat.isdtype function has two implementations:
1. **NumPy >= 2.0**: Directly imports numpy.isdtype (line 37), which rejects scalar values
2. **NumPy < 2.0**: Custom fallback implementation (lines 54-75) that explicitly handles np.generic scalars (lines 72-73)

The fallback implementation explicitly checks `isinstance(dtype, np.generic)` and handles it specially, which creates version-dependent behavior. This is inconsistent with NumPy 2.0's specification that isdtype should only accept dtype objects, not scalar values.

### Conclusion on Documentation
Neither NumPy nor xarray documentation explicitly states that the compatibility layer should accept scalar values. The NumPy 2.0 documentation clearly indicates that isdtype should accept dtype objects, not scalar values. The presence of scalar handling in the fallback implementation appears to be an implementation detail rather than a documented feature.