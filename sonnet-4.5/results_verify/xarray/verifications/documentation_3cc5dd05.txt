## Documentation Findings for build_grid_chunks

### Function Location
The `build_grid_chunks` function is located in `xarray/backends/chunks.py` and appears to be an internal utility function for the xarray library's zarr backend support.

### No Public Documentation Found
- The function is NOT documented in the official xarray documentation website
- No docstring is present in the function definition
- The function appears to be an internal utility, not part of the public API

### Function Signature
```python
def build_grid_chunks(
    size: int,
    chunk_size: int,
    region: slice | None = None,
) -> tuple[int, ...]
```

### Inferred Purpose from Code Context
Based on the implementation and usage:
1. The function generates chunk sizes for zarr grid-based storage
2. It's used by `grid_rechunk` function to determine how to split data into chunks
3. The `size` parameter represents the total size of the dimension to be chunked
4. The `chunk_size` parameter is the desired/preferred chunk size for zarr storage
5. The `region` parameter specifies a slice of the data to work with

### Usage Context
The function is called in `grid_rechunk` with:
- `size = sum(var_chunks)` - the total size of existing variable chunks
- `chunk_size` - the encoding chunk size for zarr
- `region` - a slice specifying the region of interest

### Existing Tests
The test file includes test cases that expect:
- `(10, 3, slice(1, 11), (2, 3, 3, 2))` - chunks should sum to 10
- `(10, 3, slice(None, None), (3, 3, 3, 1))` - chunks should sum to 10
- `(10, 3, None, (3, 3, 3, 1))` - chunks should sum to 10

All existing test cases demonstrate that chunks should sum to the `size` parameter.

### Key Observation
There is NO documentation that specifies what should happen when `chunk_size > size`. The function implementation does not handle this edge case properly, but there's no explicit documentation stating the expected behavior in this scenario.