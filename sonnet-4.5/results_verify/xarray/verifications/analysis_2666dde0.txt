## Bug Report Analysis: NamedArray.permute_dims() with Duplicate Dimensions

### Category: BUG

**Why this is a BUG:**
1. **Documented behavior violated**: The method documentation states it will "reverse the order of dimensions" by default, which for 2D arrays means transposing the data. With duplicate dimension names, it returns unchanged data instead.
2. **Inconsistent with NumPy semantics**: The method references `numpy.transpose`, which always transposes the underlying data regardless of any metadata.
3. **Logic error in implementation**: The code incorrectly checks if dimension names are the same (`dims == self.dims`) rather than checking if the axis order is unchanged.
4. **Real data corruption potential**: Users expecting transposed data receive unchanged data, which could lead to incorrect calculations downstream.

### Why this is NOT INVALID:

1. **Clear contract violation**: The documentation promises transposition, the code doesn't deliver
2. **The warning about duplicate dimensions mentions "silent failures" but doesn't exempt `permute_dims()` from its documented behavior**
3. **The fix is straightforward**: Check axis order rather than dimension names
4. **The test case is reasonable**: Creating arrays with duplicate dimension names is explicitly allowed by the library

### Why this is NOT WONTFIX:

1. **Not an obscure edge case**: Duplicate dimension names generate a warning but are explicitly allowed
2. **Significant impact**: Data transposition is a fundamental array operation
3. **Easy to fix**: The proposed solution is minimal and correct
4. **Violates principle of least surprise**: Users expect `permute_dims()` to transpose data

### Why this is NOT FEATURE_REQUEST:

1. **Not asking for new functionality**: Transposition is already documented behavior
2. **Bug in existing code**: The implementation has a clear logic error
3. **Not an enhancement**: This is fixing broken functionality, not adding new capabilities

### Why this is NOT DOCUMENTATION_FIX:

1. **The documentation is correct**: It says the method should "reverse the order of dimensions"
2. **The code is wrong**: It fails to transpose when dimension names are duplicates
3. **The warning about duplicate dimensions doesn't override method contracts**: While it warns about potential issues, it doesn't say `permute_dims()` is exempt from its documented behavior

### Additional Considerations:

**Arguments for INVALID (weak):**
- The warning explicitly states "We do not yet support duplicate dimension names"
- Could argue users should heed the warning and rename dimensions

**Counter-arguments:**
- The library allows creation of such objects
- The warning says functionality "is likely to fail silently" - this is acknowledging a bug, not defining expected behavior
- Silent failure is exactly what's happening and should be fixed

**Arguments for WONTFIX (weak):**
- Users are warned about duplicate dimensions
- Could be considered user error to use duplicate names

**Counter-arguments:**
- The library explicitly allows this construction
- The fix is simple and doesn't break anything
- Correctness matters more than punishing users for edge cases

### Conclusion:

This is a **BUG**. The implementation contains a clear logic error where it checks dimension name equality instead of axis order equality. The documented behavior promises transposition, the actual behavior delivers unchanged data. The fix is simple, correct, and addresses a real issue that could cause data processing errors.