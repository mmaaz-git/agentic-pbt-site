## Reproduction Analysis

I have successfully reproduced the bug described in the report.

### Bug Verification

1. **Execution of the failing code:**
   ```python
   from xarray.indexes import RangeIndex
   idx = RangeIndex.linspace(0.0, 1.0, num=1, endpoint=True, dim='x')
   ```

   **Result:** ZeroDivisionError: float division by zero

2. **Location of the error:**
   The error occurs at line 283 of `/lib/python3.13/site-packages/xarray/indexes/range_index.py`:
   ```python
   if endpoint:
       stop += (stop - start) / (num - 1)  # Division by zero when num=1
   ```

   When `num=1`, the expression `(num - 1)` evaluates to 0, causing a division by zero.

3. **Comparison with NumPy's behavior:**
   NumPy's `linspace` function handles `num=1` correctly:
   ```python
   np.linspace(0.0, 1.0, num=1, endpoint=True)  # Returns [0.]
   np.linspace(5.0, 10.0, num=1, endpoint=True)  # Returns [5.]
   ```

   NumPy returns the `start` value when `num=1`, regardless of the `stop` value or `endpoint` setting.

### Impact

The bug causes a crash (ZeroDivisionError) whenever users try to create a RangeIndex with a single point using `linspace` with `endpoint=True`. This is a valid use case that should return a single-element index containing the start value, similar to NumPy's behavior.

The bug report is accurate in identifying the problem, its location in the code, and the expected behavior based on NumPy's implementation.