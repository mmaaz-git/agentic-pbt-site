## Documentation Analysis

### sum_where Function Documentation
The sum_where function in xarray.core.duck_array_ops has **NO documentation**. There is no docstring, and it does not appear in the public xarray API documentation. My searches found no official documentation for this function on docs.xarray.dev.

This appears to be an internal utility function that is not part of the public API.

### Function Name Semantics
Despite the lack of documentation, the function name "sum_where" strongly implies it should:
- Sum elements WHERE a condition is True
- Follow the same semantics as numpy.sum's 'where' parameter

### NumPy's where Parameter Documentation
According to numpy.org documentation for numpy.sum:
- The 'where' parameter specifies "Elements to include in the sum"
- It accepts "A boolean array which is broadcasted to match the dimensions of array, and selects elements to include in the reduction"
- When where[i] is True, element i is included in the sum
- When where[i] is False, element i is excluded from the sum

Example from NumPy docs:
```python
np.sum([1, 2, 3], where=[True, False, True])  # Returns 4 (1+3)
```

### Expected Behavior Based on Naming Convention
Given that:
1. The function is named sum_where (implying sum WHERE condition is true)
2. It accepts a 'where' parameter like numpy.sum
3. NumPy's established convention is that where=True includes elements

The reasonable expectation is that sum_where should sum elements where the condition is True, matching numpy.sum's behavior.

### Internal vs Public API
Since sum_where is not documented in the public API, one could argue this is an internal function. However:
- It's used by the public nansum function
- Its behavior affects the correctness of public API functions
- The inverted logic makes it a confusing internal utility that contradicts NumPy conventions