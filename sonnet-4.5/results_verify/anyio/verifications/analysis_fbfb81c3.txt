## Bug Triage Analysis

### Considering BUG:
**Arguments for:**
- Clear mismatch between type hints (`float`) and runtime behavior (rejects floats except math.inf)
- Type hints are part of the public API contract
- Users relying on type hints, IDE autocomplete, or type checkers would expect float values to work
- No documentation warns about this restriction
- The inconsistency is not obvious or expected behavior

**Arguments against:**
- The error message is clear about what's accepted ("must be an int or math.inf")
- The implementation is internally consistent (just not with the type hints)

### Considering INVALID:
**Arguments for:**
- None really - the type hints clearly state float is accepted

**Arguments against:**
- The type hints explicitly promise float support
- There's no documentation suggesting this limitation
- This isn't a case of "unspecified behavior" - the types are specified

### Considering WONTFIX:
**Arguments for:**
- Could argue that capacity tokens conceptually should be whole numbers
- math.inf support shows some float handling is intentional
- Existing code might rely on integer-only behavior

**Arguments against:**
- This isn't an obscure edge case - float values like 1.5 are reasonable
- Type hints are a form of API contract that should be honored
- The issue affects normal usage patterns

### Considering DOCUMENTATION_FIX:
**Arguments for:**
- The code's current behavior (int or math.inf only) might be the intended design
- Could update documentation to clarify the restriction
- Could change type hints to `Union[int, float]` with a note that float means math.inf

**Arguments against:**
- Type hints are already documentation - they promise float support
- Changing type hints to match current behavior would be a breaking change for type checkers
- The natural interpretation of `float` includes values like 1.5

### Considering FEATURE_REQUEST:
**Arguments for:**
- Could frame this as "add support for fractional tokens"
- The current implementation doesn't support this, so it's a new feature

**Arguments against:**
- The type hints already promise this feature exists
- This isn't asking for new functionality, but for the promised functionality to work

### Final Assessment:
This is clearly a **BUG**. The type hints create an explicit API contract that float values are accepted, but the implementation violates this contract. This is not unspecified behavior, not an obscure edge case, and not a documentation issue - it's a straightforward mismatch between the declared types and runtime behavior.

The fix should either:
1. Accept float values as the type hints promise (preferred)
2. Change the type hints to accurately reflect the implementation (breaking change)

Given that:
- Type hints are increasingly important in Python ecosystems
- Tools like mypy, IDE autocomplete, and documentation generators rely on these hints
- The current state misleads developers about what values are accepted

This should be classified as a BUG that needs fixing.