Bug Reproduction Analysis
=========================

I have successfully reproduced the bug described in the report.

Test Execution:
- Created a test file with the provided code from the bug report
- The property-based test fails as expected
- The direct reproduction code demonstrates the issue clearly

Bug Behavior Confirmed:
1. Created two MockListener instances ("A" and "B")
2. Created a nested_multi MultiListener containing both listeners
3. Before creating outer MultiListener: nested_multi has 2 listeners
4. After creating outer MultiListener([nested_multi]): nested_multi has 0 listeners
5. The nested_multi.listeners list was indeed cleared to empty

The Effect:
The bug is real and has the following impact:
- When a MultiListener is passed to another MultiListener's constructor, the inner MultiListener's listeners list is mutated (cleared)
- Line 116 in stapled.py contains: `del listener.listeners[:]` which performs this mutation
- This makes the nested MultiListener object unusable after being added to an outer MultiListener
- The mutation is a side effect that happens during __post_init__ of the outer MultiListener

This is unexpected behavior - constructing a new object should not mutate the objects passed to it as arguments. The nested MultiListener becomes essentially broken after this operation, as it no longer contains any listeners.