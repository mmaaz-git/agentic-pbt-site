## Documentation Analysis for MultiListener

I examined the documentation for the MultiListener class in anyio.streams.stapled module. The primary documentation is the docstring in the source code at lines 96-107:

```
"""
Combines multiple listeners into one, serving connections from all of them at once.

Any MultiListeners in the given collection of listeners will have their listeners
moved into this one.

Extra attributes are provided from each listener, with each successive listener
overriding any conflicting attributes from the previous one.

:param listeners: listeners to serve
:type listeners: Sequence[Listener[T_Stream]]
"""
```

The critical phrase here is: "Any MultiListeners in the given collection of listeners will have their listeners **moved** into this one."

The word "moved" is significant. In programming terminology, "move" typically implies a transfer of ownership or resources from one object to another, often leaving the source object in an invalid or empty state. This is different from "copy" which would preserve the original.

This documentation explicitly states that listeners will be "moved" from nested MultiListeners. This suggests that the mutating behavior - where the input MultiListener has its listeners cleared - is actually the documented and intended behavior.

The documentation does not specify that:
- Input objects should remain unchanged
- The constructor should be non-destructive
- MultiListeners can be reused after being passed to another MultiListener

Since the documentation uses the word "moved" rather than "copied" or "extracted", it appears the mutation is intentional and documented behavior.