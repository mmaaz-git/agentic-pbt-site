## Documentation Analysis for numpy.ma.unique

I have reviewed the official documentation for numpy.ma.unique from multiple sources:

1. **Official NumPy Documentation**: The function is documented at https://numpy.org/doc/stable/reference/generated/numpy.ma.unique.html

2. **Function Docstring**: Retrieved via Python's help() function

### Key Documentation Statements

The documentation explicitly states:
- **"Masked values are considered the same element (masked)."** - This is stated clearly in the docstring.
- "The output array is always a masked array."
- The function is meant to find unique elements of an array while treating all masked values as equivalent.

### Documentation Example

The documentation provides an example that demonstrates the expected behavior:
```python
>>> a = [1, 2, 1000, 2, 3]
>>> mask = [0, 0, 1, 0, 0]
>>> masked_a = np.ma.masked_array(a, mask)
>>> np.ma.unique(masked_a)
masked_array(data=[1, 2, 3, --],
            mask=[False, False, False,  True],
    fill_value=999999)
```

In this example, there is only ONE masked value (1000 with mask=1), and the result contains only ONE masked element (shown as --).

### Clear Contract

The documentation establishes a clear contract that:
1. All masked values, regardless of their underlying data values, should be treated as a single unique element
2. The output should contain at most one masked value when the input contains any masked values
3. This behavior is different from numpy.unique which would treat different underlying values as distinct

### No Ambiguity

The documentation is unambiguous about this behavior. There is no indication that multiple masked values with different underlying data should appear as multiple unique masked values. The statement "Masked values are considered the same element (masked)" is definitive and leaves no room for interpretation.
