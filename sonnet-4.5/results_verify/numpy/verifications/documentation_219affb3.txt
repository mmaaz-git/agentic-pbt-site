NUMPY.REC.ARRAY DOCUMENTATION FINDINGS

The numpy.rec.array function is documented as a flexible record array constructor that creates arrays from various input types including None, strings, lists, tuples, recarrays, files, and ndarrays.

Key documentation points:
1. The function accepts 'obj' as the primary input parameter which can be various types including lists and tuples.
2. The documentation explicitly states it handles lists and tuples as input objects.
3. There is NO specific mention in the documentation about how empty lists should be handled.
4. The documentation does not specify that lists must be non-empty to work correctly.
5. Examples in the documentation show non-empty lists but don't explicitly exclude empty ones.

From examining the source code (numpy/_core/records.py lines 1055-1059), the implementation shows:
- When obj is a list or tuple, the code immediately checks obj[0] to determine the dispatch path
- Line 1056 attempts to access obj[0] without first verifying the list/tuple is non-empty
- This creates an IndexError for empty sequences

Comparison with standard numpy behavior:
- numpy.array([]) with a dtype works correctly and returns an empty array
- This establishes precedent that empty sequences are valid inputs for array construction in NumPy

The documentation does not explicitly state that empty lists are invalid inputs, nor does it warn users about this limitation. Given that numpy.array handles empty lists gracefully and rec.array is meant to be a flexible constructor for record arrays, the absence of empty list handling appears to be an oversight rather than intentional design.