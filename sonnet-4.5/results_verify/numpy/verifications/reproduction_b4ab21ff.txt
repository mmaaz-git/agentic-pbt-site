# Reproduction Analysis

## Bug Confirmation
I have successfully reproduced the bug as described in the report.

### Test Results

1. **Hypothesis Property Test**: The hypothesis test correctly fails when `formats=[]`, producing:
   - Error: `ValueError: max() iterable argument is empty`
   - Location: Line 266 in `/home/npc/miniconda/lib/python3.13/site-packages/numpy/_core/records.py`

2. **Simple Reproduction**: The minimal reproduction case also fails with the same error when calling `pprint()` on an empty record.

### Empty Record Characteristics
- Empty records can be created successfully with `dtype=np.dtype([])`
- The resulting record has:
  - `dtype.names = ()` (empty tuple)
  - Other methods like `str()` and `repr()` work fine, returning `()` and `np.record((), dtype=[])` respectively
  - The record is a valid numpy object of type `<class 'numpy.record'>`

### Source Code Analysis
The bug occurs at line 266 in `records.py`:
```python
def pprint(self):
    """Pretty-print all fields."""
    names = self.dtype.names
    maxlen = max(len(name) for name in names)  # <-- Crashes here when names is empty
```

When `names` is an empty tuple, the `max()` function raises `ValueError` because it cannot compute the maximum of an empty sequence.

### Comparison with Non-Empty Records
Records with fields work correctly. For example, a record with fields `('x', 'y')` successfully returns:
```
x: 0
y: 0.0
```

## Conclusion
The bug is reproducible exactly as described. The `pprint()` method crashes with a `ValueError` when called on records with no fields, while other record methods handle the empty case gracefully.