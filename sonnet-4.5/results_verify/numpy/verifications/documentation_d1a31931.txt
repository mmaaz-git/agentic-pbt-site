## Documentation Analysis

### NumPy Documentation Review

1. **numpy.char.partition Documentation**:
   - States it applies Python's str.partition method element-wise
   - Claims to split string at first occurrence of separator
   - Returns 3-part result: before, separator, after
   - No mention of null byte limitations or special handling

2. **numpy.char.rpartition Documentation**:
   - States it's the element-wise equivalent of Python's str.rpartition
   - Claims to split at right-most separator
   - Returns 3-part result like partition
   - No mention of null byte limitations

3. **Python str.partition/rpartition Documentation**:
   - Standard library documentation makes no special mention of null bytes
   - Null bytes are valid string characters in Python
   - Methods work correctly with null bytes as confirmed by testing

### Critical Documentation Findings

After extensive research, I discovered that NumPy has KNOWN LIMITATIONS with null byte handling:

1. **GitHub Issue #20118**: Documents that strings containing null bytes are treated as equal to empty strings in NumPy. This was closed as "not a bug" but a "known limitation of the representation of strings in NumPy arrays."

2. **GitHub Issue #22174**: Documents that numpy.char functions cannot use null bytes as separators due to how NumPy handles string storage.

3. **NumPy String Documentation**: States that "NumPy cannot tell the difference between intentionally stored trailing nulls and padding nulls."

4. **Design Limitation**: NumPy uses fixed-width string storage with null-byte padding, making it impossible to distinguish between data null bytes and padding null bytes.

### Documentation Gap

The numpy.char.partition and numpy.char.rpartition documentation DOES NOT mention these null byte limitations, despite:
- Claiming to be equivalent to Python's str.partition/rpartition
- These limitations being known and documented in other parts of NumPy
- The behavior clearly diverging from Python's standard library

This is a significant documentation omission - users would reasonably expect these functions to handle all valid Python strings, including those with null bytes, since the documentation claims equivalence to Python's methods.