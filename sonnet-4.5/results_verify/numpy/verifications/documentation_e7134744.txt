DOCUMENTATION ANALYSIS FOR numpy.fft.hfft

1. FUNCTION PURPOSE (from docstring):
"Compute the FFT of a signal that has Hermitian symmetry, i.e., a real spectrum."

2. PARAMETER DOCUMENTATION:
The docstring states for parameter 'a':
- "a : array_like" - The input array
- No restriction mentioned on minimum array size
- No statement that single-element arrays are unsupported

For parameter 'n':
- "If n is not given, it is taken to be 2*(m-1) where m is the length of the input"
- This formula explicitly produces n=0 for m=1, which is invalid

3. INVERSE RELATIONSHIP DOCUMENTATION:
The documentation explicitly states (lines 591-592):
- "even: ihfft(hfft(a, 2*len(a) - 2)) == a, within roundoff error"
- "odd: ihfft(hfft(a, 2*len(a) - 1)) == a, within roundoff error"

This establishes that hfft and ihfft should be inverses of each other.

4. COMPARISON WITH ihfft:
The ihfft function documentation:
- Also accepts "array_like" input with no size restrictions
- Works correctly with single-element arrays
- Uses n = a.shape[axis] as default (which gives n=1 for single element)

5. COMPARISON WITH SIMILAR FUNCTIONS:
The irfft function has identical default n calculation issue:
- Uses n = (a.shape[axis] - 1) * 2
- Also fails on single-element arrays

The rfft function:
- Works correctly with single-element arrays
- Different default calculation that doesn't produce n=0

6. KEY DOCUMENTATION FINDINGS:

a) NO DOCUMENTED RESTRICTION: The documentation does not state that single-element arrays are invalid input. The parameter is simply "array_like" which includes arrays of any size >= 0.

b) INVERSE RELATIONSHIP PROMISE: The documentation promises that hfft and ihfft are inverse operations. This promise is broken when hfft crashes but ihfft works.

c) FORMULA ISSUE: The documented formula "2*(m-1)" explicitly produces an invalid value (0) for m=1, yet this edge case is not mentioned or handled.

d) INCONSISTENCY: Other FFT functions (fft, ifft, rfft, ihfft) handle single-element arrays, creating an inconsistency in the API.

CONCLUSION: The documentation does not exclude single-element arrays, promises an inverse relationship that fails for this case, and provides a default formula that produces invalid values without warning. This is a genuine bug, not a documentation issue.