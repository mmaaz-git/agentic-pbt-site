## Documentation Analysis for numpy.char Case Functions

### Official NumPy Documentation
The documentation for `numpy.char.upper()`, `numpy.char.capitalize()`, and `numpy.char.swapcase()` explicitly states:

1. **numpy.char.upper**: "Calls :meth:`str.upper` element-wise"
2. **numpy.char.capitalize**: "Calls :meth:`str.capitalize` element-wise"
3. **numpy.char.swapcase**: "Calls :meth:`str.swapcase` element-wise"

Each function references the corresponding Python str method and claims to call it element-wise. The documentation includes "See Also" sections that directly reference Python's str.upper, str.capitalize, and str.swapcase.

### Python str Method Behavior
Python's str.upper() correctly implements Unicode case mappings as specified by the Unicode standard:
- 'ß'.upper() returns 'SS' (length 2)
- 'ﬁ'.upper() returns 'FI' (length 2)
- These are well-defined Unicode case mappings

### Unicode Standard
According to Unicode Technical Report #21 (Case Mappings):
- The German character U+00DF 'ß' (small letter sharp s) expands to 'SS' when uppercased
- Some case mappings produce strings of different length than the original
- These expansions are part of the official Unicode SpecialCasing file

### Key Documentation Finding
The numpy.char documentation promises behavior matching Python's str methods but does not mention any limitations regarding:
- Fixed-size character arrays
- Truncation of expanded characters
- Inability to handle Unicode case mappings that change string length

The documentation examples only show ASCII characters that don't expand during case conversion, obscuring this limitation.

### Conclusion
The documentation creates a clear expectation that numpy.char case functions should behave identically to Python's str methods. There is no warning about truncation or limitations with Unicode characters that expand during case conversion.