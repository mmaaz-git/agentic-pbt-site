## Documentation Analysis

### Key Documentation Findings:

1. **Round-Trip Property Guarantee**
   The NumPy documentation explicitly states that FFT operations should satisfy the round-trip property:
   - For irfft: "irfft(rfft(a), len(a)) == a" within numerical accuracy
   - For irfftn: "irfftn(rfftn(a), a.shape) == a" within numerical accuracy

   This is a fundamental guarantee of the FFT operations.

2. **No Minimum Size Requirements**
   - The documentation does not specify any minimum size requirements for input arrays
   - No mention that size-1 arrays are unsupported or should be avoided
   - Examples show small arrays (2x2x2) but don't exclude size-1 arrays

3. **Default 'n' Parameter Calculation**
   The documentation states:
   - For irfft: When n is not specified, it is "taken to be 2*(m-1) where m is the length of the input"
   - This formula is problematic for m=1: n = 2*(1-1) = 0

4. **Expected Behavior for Size-1 Arrays**
   - The forward transforms (rfft, rfftn) successfully handle size-1 arrays
   - The documentation doesn't state that size-1 arrays are edge cases or unsupported
   - Mathematical FFT theory supports size-1 arrays (they simply represent constant values)

5. **Round-Trip Works with Explicit Parameters**
   Our testing shows that when the length/shape is explicitly provided:
   - irfft(rfft(arr), n=1) works correctly for size-1 arrays
   - irfftn(rfftn(arr), arr.shape) works correctly

   This proves the underlying FFT implementation supports size-1 arrays; only the default parameter calculation is broken.

### Conclusion:
The documentation establishes that the round-trip property should work for all valid inputs, with no exclusion of size-1 arrays. The bug violates this documented guarantee when using default parameters.