BUG REPRODUCTION RESULTS

The bug report claims that numpy.rec.array([]) crashes with IndexError when passed an empty list. My testing confirms this is accurate.

REPRODUCTION TESTS:

1. Exact bug scenario from report:
   Code: rec.array([], dtype=[('x', 'i4')])
   Result: IndexError: list index out of range
   Status: BUG CONFIRMED

2. Empty list without dtype:
   Code: rec.array([])
   Result: IndexError: list index out of range
   Status: BUG CONFIRMED

3. Empty tuple with dtype:
   Code: rec.array((), dtype=[('x', 'i4')])
   Result: IndexError: tuple index out of range
   Status: BUG CONFIRMED (same issue with tuples)

4. Comparison with standard numpy.array:
   Code: np.array([], dtype=[('x', 'i4')])
   Result: SUCCESS - Returns empty array with shape (0,) and correct dtype
   Status: This demonstrates that NumPy's standard array constructor handles empty lists correctly

5. Non-empty list test (control):
   Code: rec.array([(1,), (2,)], dtype=[('x', 'i4')])
   Result: SUCCESS - Works as expected
   Status: Confirms the function works with non-empty lists

HYPOTHESIS TEST:
The property-based test with hypothesis confirms that the function fails specifically on empty list input while working correctly for non-empty lists. The test fails immediately when given an empty list as input.

ROOT CAUSE:
The error occurs at line 1056 in numpy/_core/records.py where the code attempts to access obj[0] without first checking if the list/tuple is empty. This is a clear logic error in the implementation.

IMPACT:
This is a real crash that prevents users from creating empty record arrays from empty sequences, even though creating empty arrays is a common and valid use case in NumPy (as demonstrated by np.array([]) working correctly).