DOCUMENTATION ANALYSIS FOR numpy.strings.rfind

Official NumPy Documentation:
The numpy.strings.rfind documentation states that this function:
- Finds the highest index of a substring within each string element
- Returns -1 if the substring is not found
- Takes parameters: a (array), sub (substring), start (default 0), end (default None)
- Returns an ndarray of integers representing the highest index where substring is found

Python's str.rfind Documentation:
Python's built-in str.rfind method:
- Returns the highest index where substring is found
- Returns -1 if the substring is not found
- Is the standard behavior that users would expect for "rfind" functionality

Key Documentation Findings:

1. EXPECTED BEHAVIOR IS CLEAR: Both NumPy and Python documentation explicitly state that rfind should return -1 when a substring is not found. This is an unambiguous specification.

2. NO SPECIAL NULL CHARACTER HANDLING MENTIONED: Neither documentation mentions any special handling for null characters ('\x00'). The documentation treats null characters as regular characters that should be searched for like any other character.

3. NUMPY CLAIMS COMPATIBILITY: The NumPy documentation presents numpy.strings.rfind as the array equivalent of Python's str.rfind, implying it should behave identically for individual string elements.

4. NO UNDEFINED BEHAVIOR: There is no mention in the documentation that null characters are undefined, unsupported, or handled differently. The function should treat '\x00' as a regular searchable character.

5. RETURN VALUE SPECIFICATION: The documentation is explicit that the return value should be either:
   - The highest index where the substring is found (0 or positive integer)
   - -1 if the substring is not found

The documentation provides no basis for returning the string length when a substring (including null character) is not found. The behavior described in the bug report directly contradicts the documented specification.