Bug Reproduction Report
=======================

Environment:
- NumPy version: 2.3.0
- Python version: 3.13

Hypothesis Test Reproduction:
-----------------------------
The hypothesis test from the bug report was executed successfully and immediately found the failing case with an empty list:
- Falsifying example: test_array_constructor_preserves_length(int_list=[])
- Error: IndexError: list index out of range
- Location: numpy/_core/records.py, line 1056

Direct Reproduction:
-------------------
The direct code example from the bug report was confirmed:

1. numpy.rec.array([], dtype=[('value', 'i4')]) raises IndexError: list index out of range
2. numpy.rec.array((), dtype=[('value', 'i4')]) raises IndexError: tuple index out of range

Both empty list and empty tuple trigger the same error.

Root Cause:
-----------
The error occurs in numpy/_core/records.py at line 1056:
```python
if isinstance(obj[0], (tuple, list)):
```

The code attempts to access obj[0] without first checking if obj is empty, causing an IndexError when obj is an empty list or tuple.

Comparison with numpy.array():
------------------------------
Regular numpy.array([]) works perfectly fine and returns an empty array with shape (0,) and dtype float64. This shows that NumPy generally supports empty sequences as input.

Conclusion:
----------
The bug is fully reproducible. The issue is that numpy.rec.array() does not handle empty sequences (lists or tuples) properly, while the regular numpy.array() function handles them without issue. The error occurs exactly as described in the bug report.