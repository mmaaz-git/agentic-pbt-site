## Bug Reproduction Results

### Summary
The bug report is accurate. Both `numpy.ma.clump_masked()` and `numpy.ma.clump_unmasked()` crash with an IndexError when given empty masked arrays.

### Hypothesis Test Results
The property-based test using Hypothesis successfully found the bug. When run, it immediately failed with:
- Failing input: `masked_array(data=[], mask=[], fill_value=999999, dtype=int64)`
- Error: `IndexError: index 0 is out of bounds for axis 0 with size 0`
- Location: `/home/npc/miniconda/lib/python3.13/site-packages/numpy/ma/extras.py`, line 2199

### Minimal Reproduction Results
Both minimal reproduction cases confirmed the bug:

1. `ma.clump_masked()` with empty array:
   - Input: `ma.array([], dtype=int, mask=[])`
   - Result: IndexError raised with message "index 0 is out of bounds for axis 0 with size 0"

2. `ma.clump_unmasked()` with empty array:
   - Input: `ma.array([], dtype=int, mask=[])`
   - Result: IndexError raised with message "index 0 is out of bounds for axis 0 with size 0"

### Root Cause Verification
Examined the source code at `/home/npc/miniconda/lib/python3.13/site-packages/numpy/ma/extras.py`.
The bug is in the `_ezclump()` function at line 2199, which accesses `mask[0]` without first checking if the mask has any elements.

The function processes the mask array but doesn't handle the edge case where the mask is empty (size 0), leading to an out-of-bounds array access.

### Conclusion
The bug report accurately describes a real crash that occurs when either `clump_masked()` or `clump_unmasked()` is called with an empty masked array. The root cause analysis in the bug report is also correct.