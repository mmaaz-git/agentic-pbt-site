## Documentation Analysis

### 1. Source Code Documentation
Location: `/numpy/fft/_pocketfft.py` line 399
Exact text: "If the input `a` contains an imaginary part, it is silently discarded."

This documentation line is part of the docstring for the `numpy.fft.rfft` function. It appears in the "Notes" section of the function documentation.

### 2. Official Online Documentation
The official NumPy documentation at https://numpy.org/doc/stable/reference/generated/numpy.fft.rfft.html contains the same text:
"If the input a contains an imaginary part, it is silently discarded."

### 3. Mathematical Context
The rfft (Real FFT) function is specifically designed for real-valued input signals. The documentation explains that:
- When DFT is computed for purely real input, the output is Hermitian-symmetric
- Negative frequency terms are complex conjugates of positive-frequency terms
- rfft exploits this symmetry by computing only non-negative frequency terms

### 4. Documentation Intent vs Implementation
The documentation clearly indicates an intended behavior where:
- Complex inputs should be accepted
- The imaginary part should be silently ignored (discarded)
- Only the real part should be used for the FFT computation

However, the implementation:
- Does not accept complex input at all
- Raises a TypeError immediately when complex arrays are passed
- Never gets to the point where it could discard the imaginary part

### 5. Related Functions
Other FFT functions in NumPy handle complex input correctly:
- `numpy.fft.fft`: Accepts both real and complex input
- `numpy.fft.ifft`: Accepts complex input (expected for inverse FFT)
- `numpy.fft.irfft`: Accepts complex input (inverse of rfft)

### Conclusion
The documentation unambiguously states that complex input should be handled by silently discarding the imaginary part. This is not an ambiguous statement or open to interpretation. The documentation creates a clear contract that the implementation violates.