## Documentation Findings for NBitBase Deprecation

### Official NumPy Documentation
Based on the NumPy 2.3.0 release notes and documentation:

1. **NBitBase is officially deprecated**: The NumPy 2.3.0 release notes explicitly state that `numpy.typing.NBitBase` has been deprecated. The deprecation was introduced to address type checking issues that arose from changes in NumPy 2.2.0.

2. **Clear deprecation timeline**: The type was introduced in NumPy 1.20 and is now deprecated as of NumPy 2.3.

3. **Deprecation warning expected**: The documentation states that NBitBase is "deprecated" and will be removed in a future version. The standard Python practice for deprecated features is to emit a DeprecationWarning when accessed.

4. **Source code confirms intent**: The numpy/typing/__init__.py file (lines 173-184) contains explicit code to emit a DeprecationWarning when NBitBase is accessed via __getattr__:
   - The warning message states: "`NBitBase` is deprecated and will be removed from numpy.typing in the future..."
   - The comment indicates: "Deprecated in NumPy 2.3, 2025-05-01"
   - The warning is supposed to be emitted with stacklevel=2

5. **Recommended alternatives documented**: The documentation provides clear alternatives:
   - Use @typing.overload with explicit type signatures
   - Use TypeVar with a scalar-type as upper bound

### Conclusion
The documentation and source code clearly indicate that accessing `numpy.typing.NBitBase` SHOULD emit a DeprecationWarning. The presence of the __getattr__ hook with explicit warning code confirms this is the intended behavior. The fact that the warning is not being emitted represents a deviation from the documented and intended behavior.