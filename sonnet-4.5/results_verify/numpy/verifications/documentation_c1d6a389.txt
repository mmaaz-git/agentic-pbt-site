DOCUMENTATION ANALYSIS
======================

## Documentation Review

### Official Documentation Statement
The numpy.ma.unique function documentation explicitly states:
"Masked values are considered the same element (masked)."

This statement appears in:
1. The function's docstring in numpy/ma/extras.py
2. The online NumPy documentation at numpy.org
3. The inline help text accessible via help(numpy.ma.unique)

### Documentation Clarity
The documentation is clear and unambiguous about the expected behavior:
- ALL masked values should be treated as equivalent
- They should collapse to a single masked element in the output
- This is regardless of the underlying data values

### Example Analysis
The provided example in the documentation shows:
```python
a = [1, 2, 1000, 2, 3]
mask = [0, 0, 1, 0, 0]
```
Results in: [1, 2, 3, --] with only ONE masked value

This example works correctly because 1000 only appears as masked. The documentation doesn't show what should happen when the same value appears both masked and unmasked, but the statement "Masked values are considered the same element" is categorical and applies to all cases.

### Related Documentation
The function references numpy.unique for additional details, but numpy.unique operates on regular arrays without mask semantics. The ma.unique documentation explicitly states it handles masked values specially, setting it apart from the regular unique function.

### Conclusion
The documentation clearly specifies that all masked values should be treated as a single element. There is no ambiguity or missing specification here. The current implementation violates this documented contract.