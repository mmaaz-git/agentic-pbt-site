# Bug Report Categorization Analysis

## BUG - Reasons why this should be categorized as BUG:
1. **Fundamental contract violation**: The roots() method returns values that don't satisfy P(r) ≈ 0, violating the mathematical definition of a root
2. **Silent failure**: The method returns incorrect results without warnings or errors (except in extreme cases where it crashes)
3. **Realistic use case**: Tiny coefficients can arise from normal floating-point operations (e.g., subtraction of nearly equal values)
4. **Clear expected behavior**: By definition, polynomial roots must satisfy P(r) = 0 within numerical tolerance
5. **Reproducible**: The issue is consistently reproducible with specific inputs
6. **Impact**: Returns mathematically meaningless results (e.g., p(root) = 1.0 when it should be ≈ 0)

## WONTFIX - Reasons why this might be WONTFIX:
1. **Edge case with extreme values**: Coefficients like 1e-273 are at the extreme limits of floating-point representation
2. **Known numerical challenge**: Polynomial root-finding with extreme coefficient ranges is a well-known hard problem
3. **Workaround exists**: Users can manually trim tiny coefficients before calling roots()
4. **Performance impact**: Adding automatic coefficient trimming might affect performance for normal cases

However, these are weak arguments since the method should either work correctly or raise an appropriate error.

## INVALID - Reasons why this might be INVALID:
1. **Numerical limitations**: One could argue that floating-point arithmetic inherently has limitations
2. **User responsibility**: Users working with extreme values should handle edge cases

However, this is clearly NOT INVALID because:
- The documentation promises "roots" without qualifying that extreme coefficients might fail
- The returned values are demonstrably not roots (P(r) ≠ 0)
- The method silently returns wrong answers rather than raising an error

## DOCUMENTATION_FIX - Reasons why this might be DOCUMENTATION_FIX:
1. **Missing warnings**: The documentation could be updated to warn about tiny coefficient issues
2. **Clarify limitations**: Could document that extreme coefficient ranges may produce invalid results

However, this is insufficient because:
- The fundamental issue is incorrect behavior, not just missing documentation
- Documenting that "roots() might not return actual roots" would be absurd

## FEATURE_REQUEST - Reasons why this might be FEATURE_REQUEST:
1. **Enhancement**: Automatic coefficient trimming could be seen as a new feature
2. **Not explicitly promised**: The documentation doesn't explicitly promise handling of extreme coefficients

However, this is clearly NOT a feature request because:
- Returning actual roots is not a "feature" - it's the core functionality
- The bug report identifies broken existing functionality, not requesting new capabilities

## Final Assessment

This is clearly a **BUG**. The roots() method fails to fulfill its fundamental purpose - returning roots of the polynomial. When it returns values where P(r) = 1.0 instead of P(r) ≈ 0, it's not a limitation or edge case - it's incorrect behavior. The proposed fix (trimming tiny coefficients) is reasonable and addresses the numerical instability issue. While extreme coefficient values are edge cases, the method should either handle them correctly or raise an informative error, not silently return mathematically incorrect results.