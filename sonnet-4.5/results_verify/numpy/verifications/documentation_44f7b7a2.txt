DOCUMENTATION ANALYSIS
======================

1. NUMPY.STRINGS DOCUMENTATION CLAIMS:

According to the official NumPy documentation (numpy.org/doc/stable):

a) numpy.strings.upper():
   - States: "Calls str.upper() element-wise"
   - States: "Mirrors Python's built-in str.upper() method"
   - Purpose: "Converts array elements to uppercase"

b) Similar claims for other affected functions:
   - lower: Element-wise lowercase conversion
   - capitalize: First character capitalization per element
   - title: Element-wise title casing
   - swapcase: Element-wise case swapping
   - strip: Leading/trailing character removal per element
   - partition: Element-wise partitioning around separator

2. KEY DOCUMENTATION STATEMENTS:

The documentation explicitly states these functions:
- "Call str.<method>() element-wise"
- "Mirror Python's built-in str.<method>() methods"
- Are designed to provide element-wise string operations on arrays

3. SPECIAL CHARACTER HANDLING:

The documentation does NOT:
- Mention any special handling or exclusions for null bytes (\x00)
- State that null bytes will be converted to empty strings
- Provide any warnings about different behavior for special characters
- Include any caveats about data alteration for certain inputs

4. PYTHON COMPATIBILITY EXPECTATION:

The documentation clearly establishes that these functions should behave identically to Python's string methods applied element-wise. In Python:
- '\x00'.upper() returns '\x00' (preserves the null byte)
- '\x00' is a valid 1-character string
- String case operations preserve string length and non-alphabetic characters

5. IMPLICATIONS:

Since the documentation claims to "mirror" and "call" Python's string methods element-wise, users have a reasonable expectation that:
- All valid Python strings will be handled identically
- String length will be preserved for non-stripping operations
- Non-alphabetic characters (including null bytes) will pass through unchanged

CONCLUSION: The documentation establishes clear expectations of Python compatibility that are violated by the current implementation's handling of null bytes.