Bug Reproduction Results
========================

Test Environment: NumPy version 2.3.0

1. Hypothesis Test Results
--------------------------
The property-based test from the bug report FAILS with an empty list:
- Input: records=[]
- Error: IndexError: list index out of range
- The test expects that len(rec) == len(records), which would be 0 for empty input

2. Direct Reproduction of numpy.rec.fromrecords([])
---------------------------------------------------
CONFIRMED: Calling numpy.rec.fromrecords([], names='a,b') raises:
- Error: IndexError: list index out of range
- Stack trace shows the error occurs in fromarrays at line 624: shape = arrayList[0].shape
- The function attempts to access the first element of an empty list

3. Direct Reproduction of numpy.rec.fromarrays([])
--------------------------------------------------
CONFIRMED: Calling numpy.rec.fromarrays([], names='a,b') raises:
- Error: IndexError: list index out of range
- Same error location: line 624 in fromarrays trying to access arrayList[0]

4. Comparison with Regular numpy.array([])
------------------------------------------
WORKS: numpy.array([]) successfully returns:
- An empty ndarray with shape (0,) and dtype float64
- No errors raised
- This demonstrates NumPy can handle empty sequences in other contexts

5. Control Tests with Non-Empty Data
------------------------------------
Both functions work correctly with non-empty input:
- fromrecords([(1,'a'), (2,'b'), (3,'c')]) works fine
- fromarrays([[1,2,3], ['a','b','c']]) works fine
- Both return proper recarrays with the expected structure

6. Alternative Methods for Empty Structured Arrays
--------------------------------------------------
NumPy DOES support empty structured arrays through other methods:
- np.zeros(0, dtype=[('a', int), ('b', 'U10')]) successfully creates an empty structured array
- This can be converted to a recarray using .view(np.recarray)
- This proves that empty recarrays are a valid concept in NumPy

Technical Analysis:
------------------
The error occurs because the fromarrays implementation unconditionally accesses arrayList[0] when shape is None (line 624 in records.py). The code assumes at least one element exists to infer the shape, without checking if the list is empty first.

The bug report's claim is technically accurate: the functions crash with IndexError on empty input, while other NumPy functions handle empty inputs gracefully.