DOCUMENTATION ANALYSIS
======================

After reviewing the pandas documentation and related specifications, here are the key findings:

1. Pandas Documentation on read_excel():
   - Does NOT specify how large float values, infinity, or NaN should be handled
   - Does NOT provide any round-trip guarantees for Excel files
   - Only mentions that dtypes are inferred from data if not specified

2. Pandas Documentation on to_excel():
   - Explicitly states "there is no native representation for infinity in Excel"
   - Provides an 'inf_rep' parameter to customize infinity representation
   - Does NOT warn about precision loss for very large float values
   - Does NOT specify what happens when values exceed Excel's numeric limits

3. Excel Specifications (from web search):
   - Excel uses IEEE 754 double-precision floating-point (same as Python)
   - Maximum representable value is approximately 1.79769313486232E308
   - Excel has 15 significant digit precision limitation
   - Values exceeding the maximum are typically represented as infinity

4. Inconsistency in pandas implementation:
   - The xlrd reader (another Excel reader in pandas) DOES check for math.isfinite() before int conversion
   - The openpyxl reader does NOT have this check, leading to the crash
   - This suggests an implementation oversight rather than intentional behavior

5. No documentation explicitly states:
   - Whether round-tripping DataFrames through Excel should preserve all values
   - How edge cases like very large floats should be handled
   - Whether OverflowError is an expected exception when reading Excel files

The lack of documentation about these edge cases and the inconsistency between xlrd and openpyxl implementations suggests this is an unintended behavior rather than a documented limitation.