# Documentation Analysis

## NumPy Documentation Claims

### numpy.char.find
- Documentation states: "For each element, return the lowest index in the string where substring sub is found"
- "See Also" section explicitly references: str.find
- Expected behavior: Should match Python's str.find() which returns -1 when substring is not found

### numpy.char.rfind
- Documentation states: "For each element, return the highest index in the string where substring sub is found"
- "See Also" section explicitly references: str.rfind
- Expected behavior: Should match Python's str.rfind() which returns -1 when substring is not found

### numpy.char.startswith
- Documentation states: "Returns a boolean array which is True where the string element in a starts with prefix"
- "See Also" section explicitly references: str.startswith
- Expected behavior: Should match Python's str.startswith() behavior exactly

### numpy.char.endswith
- Documentation states: "Returns a boolean array which is True where the string element in a ends with suffix"
- "See Also" section explicitly references: str.endswith
- Expected behavior: Should match Python's str.endswith() behavior exactly

## Python str Method Behavior (Per Official Docs)

### str.find()
- Returns lowest index of substring, or -1 if not found
- Empty string: ''.find('\x00') returns -1 (null character not in empty string)

### str.rfind()
- Returns highest index of substring, or -1 if not found
- Empty string: ''.rfind('\x00') returns -1 (null character not in empty string)

### str.startswith()
- Returns True if string starts with prefix, False otherwise
- Empty string: ''.startswith('\x00') returns False (empty string doesn't start with null)

### str.endswith()
- Returns True if string ends with suffix, False otherwise
- Empty string: ''.endswith('\x00') returns False (empty string doesn't end with null)

## Important Notes

1. **Legacy Module Warning**: numpy.char is marked as legacy and no longer receives updates. The documentation recommends using numpy.strings instead.

2. **No Null Character Warnings**: Neither NumPy nor Python documentation mentions any special handling or limitations for null characters ('\x00'). They should be treated as regular characters.

3. **Clear API Contract**: All four numpy.char functions explicitly reference their Python str counterparts in "See Also" sections, establishing a clear expectation that they should behave identically on a per-element basis.

4. **No Documented Exceptions**: There are no documented exceptions, caveats, or special cases mentioned for null character handling in either NumPy or Python documentation.

## Conclusion

The documentation clearly establishes that numpy.char functions should behave identically to their Python str counterparts when applied element-wise. The observed behavior with null characters violates this documented contract. There are no warnings or notes suggesting null characters should be handled differently.