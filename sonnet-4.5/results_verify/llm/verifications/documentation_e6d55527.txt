## Documentation Analysis

### Function Documentation:

The only documentation available for `remove_dict_none_values` is the docstring in the function itself:
```python
"""
Recursively remove keys with value of None or value of a dict that is all values of None
"""
```

### Key Observations:

1. **Docstring is ambiguous**: The docstring says "Recursively remove keys with value of None or value of a dict that is all values of None". This specifically mentions:
   - Removing keys with None values
   - Removing keys whose values are dicts that contain only None values
   - It does NOT mention anything about handling None values within lists

2. **No external documentation found**:
   - No documentation found on the official LLM documentation site (https://llm.datasette.io/)
   - No mention in the GitHub repository documentation
   - No API documentation specifying the behavior of this function

3. **Usage context**: The function is used internally in the llm package's OpenAI models plugin to clean up API response data before storing it. It appears to be processing JSON response data from OpenAI's API.

4. **Function name interpretation**: The function name `remove_dict_none_values` could be interpreted in two ways:
   - Remove None values from dictionaries (narrow interpretation - only dict keys/values)
   - Remove None values from dictionary data structures (broad interpretation - including nested lists)

### Critical Analysis:

The docstring does NOT specify that None values should be removed from lists. It only mentions:
1. Keys with value of None
2. Keys with dict values that are all None

The docstring doesn't promise to remove None from all nested structures - only from dictionary keys. This is a crucial distinction.

### Conclusion:

Based on the available documentation (the docstring), the function's current behavior of NOT removing None values from lists could be considered CORRECT according to the documented specification. The documentation never claims to remove None values from lists, only from dictionary keys/values.