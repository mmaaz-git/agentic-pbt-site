{
  "reports": [
    {
      "title": "addict.Dict Union Operators Violate Standard Dict Semantics",
      "target": "addict.Dict",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The Dict class's union operators (| and |=) violate Python's standard dict union semantics by recursively merging nested dicts instead of replacing them.",
      "package": "addict",
      "file_name": "bug_report_addict_Dict_union_2025-08-18_22-02_jsng.md",
      "file_path": "opus-4.1/addict/bug_reports/bug_report_addict_Dict_union_2025-08-18_22-02_jsng.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "DefaultBotProperties LinkPreviewOptions Not Created When All Options Are False",
      "target": "aiogram.client.default.DefaultBotProperties",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-01-18",
      "summary": "The `DefaultBotProperties.__post_init__` method fails to create a `LinkPreviewOptions` object when all link preview options are explicitly set to `False`, incorrectly treating explicit `False` values as if the options were not provided.",
      "package": "aiogram",
      "file_name": "bug_report_aiogram_client_default_2025-01-18_02-55_x3k9.md",
      "file_path": "opus-4.1/aiogram/bug_reports/bug_report_aiogram_client_default_2025-01-18_02-55_x3k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aiogram.dispatcher.flags FlagDecorator Fails to Validate Falsy Values",
      "target": "aiogram.dispatcher.flags.FlagDecorator",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "FlagDecorator's __call__ method fails to raise ValueError when both a falsy value (0, False, \"\", [], {}, None) and kwargs are provided, violating its documented API contract.",
      "package": "aiogram",
      "file_name": "bug_report_aiogram_dispatcher_flags_2025-08-18_17-45_k3f8.md",
      "file_path": "opus-4.1/aiogram/bug_reports/bug_report_aiogram_dispatcher_flags_2025-08-18_17-45_k3f8.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aiogram.enums String Representation Inconsistency",
      "target": "aiogram.enums",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "String-based enums in aiogram that inherit from `(str, Enum)` have inconsistent string behavior: while they equal their string values, `str()` returns the full enum representation instead of the value.",
      "package": "aiogram",
      "file_name": "bug_report_aiogram_enums_2025-08-18_23-04_2ctz.md",
      "file_path": "opus-4.1/aiogram/bug_reports/bug_report_aiogram_enums_2025-08-18_23-04_2ctz.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aiogram.filters.command Whitespace Arguments Lost",
      "target": "aiogram.filters.command.Command.extract_command",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `extract_command` method loses whitespace-only arguments, returning `None` instead of preserving the whitespace characters.",
      "package": "aiogram",
      "file_name": "bug_report_aiogram_filters_command_2025-08-18_23-03_xpsh.md",
      "file_path": "opus-4.1/aiogram/bug_reports/bug_report_aiogram_filters_command_2025-08-18_23-03_xpsh.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aiogram.filters.command Whitespace Normalization Bug",
      "target": "aiogram.filters.command.CommandObject.text",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `CommandObject.text` property fails to preserve original whitespace when reconstructing command text, violating its documented contract to \"Generate original text from object\".",
      "package": "aiogram",
      "file_name": "bug_report_aiogram_filters_command_2025-08-18_23-07_651b.md",
      "file_path": "opus-4.1/aiogram/bug_reports/bug_report_aiogram_filters_command_2025-08-18_23-07_651b.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aiogram.methods JSON Serialization Fails with Default Values",
      "target": "aiogram.methods",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `model_dump_json()` method fails with a `PydanticSerializationError` when called on any aiogram method class that contains Default objects in its fields.",
      "package": "aiogram",
      "file_name": "bug_report_aiogram_methods_2025-08-18_23-07_c4dy.md",
      "file_path": "opus-4.1/aiogram/bug_reports/bug_report_aiogram_methods_2025-08-18_23-07_c4dy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aiogram.types Accepts Negative Values for Non-Negative Fields",
      "target": "aiogram.types.MessageEntity",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Multiple aiogram type classes accept negative values for fields that should be non-negative (dimensions, offsets, lengths, durations, counts), violating logical constraints and Telegram API expectations.",
      "package": "aiogram",
      "file_name": "bug_report_aiogram_types_negative_values_2025-08-18_23-08_nj5o.md",
      "file_path": "opus-4.1/aiogram/bug_reports/bug_report_aiogram_types_negative_values_2025-08-18_23-08_nj5o.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aiogram.types InlineKeyboardButton Missing Validation",
      "target": "aiogram.types.InlineKeyboardButton",
      "severity": "High",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "InlineKeyboardButton accepts invalid configurations that violate Telegram Bot API specification, which states \"Exactly one of the optional fields must be used to specify type of the button.\"",
      "package": "aiogram",
      "file_name": "bug_report_aiogram_types_inline_keyboard_button_2025-08-18_23-08_2z0f.md",
      "file_path": "opus-4.1/aiogram/bug_reports/bug_report_aiogram_types_inline_keyboard_button_2025-08-18_23-08_2z0f.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aiogram.types.Poll Missing Options Validation",
      "target": "aiogram.types.Poll",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Poll accepts invalid configurations including empty options lists and single options, violating Telegram Bot API requirement that polls must have at least 2 options.",
      "package": "aiogram",
      "file_name": "bug_report_aiogram_types_poll_validation_2025-08-18_23-08_6j70.md",
      "file_path": "opus-4.1/aiogram/bug_reports/bug_report_aiogram_types_poll_validation_2025-08-18_23-08_6j70.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aiogram.utils.deep_linking Length Check Applied After Encoding",
      "target": "aiogram.utils.deep_linking.create_deep_link",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `create_deep_link` function incorrectly applies the 64-character limit to the encoded payload instead of the original payload, causing legitimate short strings to fail when `encode=True`.",
      "package": "aiogram",
      "file_name": "bug_report_aiogram_utils_deep_linking_2025-08-18_23-07_gc7m.md",
      "file_path": "opus-4.1/aiogram/bug_reports/bug_report_aiogram_utils_deep_linking_2025-08-18_23-07_gc7m.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aiogram.utils.markdown Double-Escaping in Nested Functions",
      "target": "aiogram.utils.markdown",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Nesting markdown formatting functions causes double-escaping of special characters, resulting in invalid markdown output.",
      "package": "aiogram",
      "file_name": "bug_report_aiogram_utils_markdown_2025-08-18_23-04_xv1h.md",
      "file_path": "opus-4.1/aiogram/bug_reports/bug_report_aiogram_utils_markdown_2025-08-18_23-04_xv1h.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aiogram.webhook.security IPFilter Network Address Parsing",
      "target": "aiogram.webhook.security.IPFilter",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "IPFilter.allow_ip() crashes when given CIDR network notation with host bits set (e.g., \"192.168.1.100/24\"), even though this is a common way users specify networks.",
      "package": "aiogram",
      "file_name": "bug_report_aiogram_webhook_security_2025-08-18_23-07_m7e0.md",
      "file_path": "opus-4.1/aiogram/bug_reports/bug_report_aiogram_webhook_security_2025-08-18_23-07_m7e0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "FibonacciRetry Ignores Attempt Parameter",
      "target": "aiohttp_retry.retry_options.FibonacciRetry",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "FibonacciRetry's `get_timeout()` method completely ignores the `attempt` parameter and uses internal mutable state instead, causing incorrect and inconsistent retry behavior across multiple requests.",
      "package": "aiohttp-retry",
      "file_name": "bug_report_aiohttp_retry_fibonacciretry_2025-08-18_22-42_tyya.md",
      "file_path": "opus-4.1/aiohttp-retry/bug_reports/bug_report_aiohttp_retry_fibonacciretry_2025-08-18_22-42_tyya.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "FibonacciRetry Stateful get_timeout() Method",
      "target": "aiohttp_retry.retry_options.FibonacciRetry",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "FibonacciRetry.get_timeout() incorrectly maintains internal state between calls, causing the same attempt number to return different timeout values on subsequent calls.",
      "package": "aiohttp-retry",
      "file_name": "bug_report_aiohttp_retry_retry_options_2025-08-18_22-40_xwgn.md",
      "file_path": "opus-4.1/aiohttp-retry/bug_reports/bug_report_aiohttp_retry_retry_options_2025-08-18_22-40_xwgn.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aiohttp_retry FibonacciRetry.get_timeout() Ignores Attempt Parameter",
      "target": "aiohttp_retry.retry_options.FibonacciRetry.get_timeout",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `FibonacciRetry.get_timeout()` method ignores its `attempt` parameter and instead maintains mutable internal state, causing incorrect and unpredictable timeout values.",
      "package": "aiohttp-retry",
      "file_name": "bug_report_aiohttp_retry_fibonacci_2025-08-18_12-00_f3k9.md",
      "file_path": "opus-4.1/aiohttp-retry/bug_reports/bug_report_aiohttp_retry_fibonacci_2025-08-18_12-00_f3k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aiohttp_retry.ExponentialRetry Incorrect Timeout Calculation",
      "target": "aiohttp_retry.retry_options.ExponentialRetry",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "ExponentialRetry calculates incorrect timeout values because it receives 1-based attempt indices but expects 0-based, causing all retries to wait longer than intended.",
      "package": "aiohttp-retry",
      "file_name": "bug_report_aiohttp_retry_ExponentialRetry_2025-08-18_22-42_jzsz.md",
      "file_path": "opus-4.1/aiohttp-retry/bug_reports/bug_report_aiohttp_retry_ExponentialRetry_2025-08-18_22-42_jzsz.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aiohttp_retry.ListRetry Off-by-One Error Causes IndexError",
      "target": "aiohttp_retry.retry_options.ListRetry",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "ListRetry has an off-by-one error that causes it to skip the first timeout value and crash with IndexError on the last retry attempt.",
      "package": "aiohttp-retry",
      "file_name": "bug_report_aiohttp_retry_ListRetry_2025-08-18_22-42_l0hx.md",
      "file_path": "opus-4.1/aiohttp-retry/bug_reports/bug_report_aiohttp_retry_ListRetry_2025-08-18_22-42_l0hx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "argcomplete.completers.FilesCompleter Crashes with Bytes Input",
      "target": "argcomplete.completers.FilesCompleter",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "FilesCompleter.__init__ crashes with TypeError when passed bytes input, despite explicitly checking for and attempting to handle bytes in the code.",
      "package": "argcomplete",
      "file_name": "bug_report_argcomplete_completers_2025-08-18_21-19_jeos.md",
      "file_path": "opus-4.1/argcomplete/bug_reports/bug_report_argcomplete_completers_2025-08-18_21-19_jeos.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "argcomplete.finders IndexError in quote_completions",
      "target": "argcomplete.finders.CompletionFinder.quote_completions",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `quote_completions` method crashes with `IndexError: string index out of range` when the wordbreak position causes a completion to be trimmed to an empty string.",
      "package": "argcomplete",
      "file_name": "bug_report_argcomplete_finders_2025-08-18_21-22_49om.md",
      "file_path": "opus-4.1/argcomplete/bug_reports/bug_report_argcomplete_finders_2025-08-18_21-22_49om.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "argcomplete.io File Descriptor Leak in mute_stdout()",
      "target": "argcomplete.io.mute_stdout",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `mute_stdout()` context manager in argcomplete.io fails to close the file descriptor it opens for `/dev/null`, causing a resource leak.",
      "package": "argcomplete",
      "file_name": "bug_report_argcomplete_io_2025-08-18_21-21_a66n.md",
      "file_path": "opus-4.1/argcomplete/bug_reports/bug_report_argcomplete_io_2025-08-18_21-21_a66n.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "argcomplete.lexers Form Feed and Vertical Tab Not Treated as Whitespace",
      "target": "argcomplete.lexers.split_line",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `split_line` function incorrectly treats form feed (\\x0c) and vertical tab (\\x0b) characters as non-whitespace, returning them as words or prefix content instead of treating them as separators.",
      "package": "argcomplete",
      "file_name": "bug_report_argcomplete_lexers_2025-08-18_21-22_s0e1.md",
      "file_path": "opus-4.1/argcomplete/bug_reports/bug_report_argcomplete_lexers_2025-08-18_21-22_s0e1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "argcomplete.packages._shlex Comment Handling Inconsistency",
      "target": "argcomplete.packages._shlex.shlex",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The argcomplete shlex implementation incorrectly treats '#' as a comment character even when `whitespace_split=True`, causing it to behave differently than stdlib's `shlex.split()` which disables comment processing by default.",
      "package": "argcomplete",
      "file_name": "bug_report_argcomplete_shlex_2025-08-18_21-28_dl67.md",
      "file_path": "opus-4.1/argcomplete/bug_reports/bug_report_argcomplete_shlex_2025-08-18_21-28_dl67.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "argcomplete.scripts.activate_global_python_argcomplete Idempotence Violation with Carriage Returns",
      "target": "argcomplete.scripts.activate_global_python_argcomplete.append_to_config_file",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `append_to_config_file` function violates its idempotence property when the shellcode contains carriage return characters (`\\r`), causing duplicate appends on repeated calls.",
      "package": "argcomplete",
      "file_name": "bug_report_argcomplete_scripts_activate_global_python_argcomplete_2025-08-18_21-22_1cvh.md",
      "file_path": "opus-4.1/argcomplete/bug_reports/bug_report_argcomplete_scripts_activate_global_python_argcomplete_2025-08-18_21-22_1cvh.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "argcomplete.split_line Crashes with Unclosed Quote and Point Beyond String Length",
      "target": "argcomplete.split_line",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `split_line` function crashes with an ArgcompleteException when given an unclosed quote character and a point parameter that exceeds the string length.",
      "package": "argcomplete",
      "file_name": "bug_report_argcomplete_split_line_2025-08-18_22-53_pdif.md",
      "file_path": "opus-4.1/argcomplete/bug_reports/bug_report_argcomplete_split_line_2025-08-18_22-53_pdif.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "awkward.ArrayBuilder Integer Overflow on Large Python Integers",
      "target": "awkward.builder.ArrayBuilder",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "ArrayBuilder.integer() method crashes with TypeError when given Python integers that exceed the range of signed 64-bit integers (values >= 2^63 or <= -2^63 - 1).",
      "package": "awkward",
      "file_name": "bug_report_awkward_builder_2025-08-18_21-18_0hmu.md",
      "file_path": "opus-4.1/awkward/bug_reports/bug_report_awkward_builder_2025-08-18_21-18_0hmu.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "awkward._connect.cling Generator Equality/Hash Contract Violation",
      "target": "awkward._connect.cling",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "All generator classes in awkward._connect.cling violate the hash/equality contract by not considering the `flatlist_as_rvec` parameter in their `__eq__` and `__hash__` methods, causing generators with different behavior to be considered equal.",
      "package": "awkward",
      "file_name": "bug_report_cling_generator_equality_2025-08-18_21-27_nymd.md",
      "file_path": "opus-4.1/awkward/bug_reports/bug_report_cling_generator_equality_2025-08-18_21-27_nymd.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "awkward._connect.cling RecordArrayGenerator Fields Type Inconsistency",
      "target": "awkward._connect.cling.RecordArrayGenerator",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "RecordArrayGenerator.__init__ converts list fields to tuple, causing type inconsistency between the original RecordForm and the generated RecordArrayGenerator.",
      "package": "awkward",
      "file_name": "bug_report_cling_RecordArrayGenerator_2025-08-18_21-27_bfr9.md",
      "file_path": "opus-4.1/awkward/bug_reports/bug_report_cling_RecordArrayGenerator_2025-08-18_21-27_bfr9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "awkward._connect.jax.trees.split_buffers ValueError on Keys Without Dashes",
      "target": "awkward._connect.jax.trees.split_buffers",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `split_buffers` function crashes with a ValueError when processing buffer dictionaries containing keys without dashes, violating the expectation that it should handle any valid dictionary keys.",
      "package": "awkward",
      "file_name": "bug_report_awkward_jax_2025-08-18_15-30_x7k9.md",
      "file_path": "opus-4.1/awkward/bug_reports/bug_report_awkward_jax_2025-08-18_15-30_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "awkward.behaviors.mixins KeyError for Dynamic Classes",
      "target": "awkward.behaviors.mixins.mixin_class",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `mixin_class` decorator crashes with KeyError when applied to classes with a `__module__` attribute that doesn't exist in `sys.modules`, which can occur with dynamically generated classes.",
      "package": "awkward",
      "file_name": "bug_report_awkward_behaviors_mixins_2025-08-18_21-14_d4a7.md",
      "file_path": "opus-4.1/awkward/bug_reports/bug_report_awkward_behaviors_mixins_2025-08-18_21-14_d4a7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "awkward.forth Parser Incorrectly Handles Numeric-Prefixed Words",
      "target": "awkward.forth.ForthMachine64",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The Forth parser incorrectly tokenizes words that begin with numeric characters, treating them as literal numbers and ignoring the non-numeric suffix, rather than recognizing them as complete word tokens or raising an error.",
      "package": "awkward",
      "file_name": "bug_report_awkward_forth_2025-08-18_21-16_7d5x.md",
      "file_path": "opus-4.1/awkward/bug_reports/bug_report_awkward_forth_2025-08-18_21-16_7d5x.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "awkward.mask Fails on Empty Arrays from Python Lists",
      "target": "awkward.mask",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `ak.mask` function raises a ValueError when both the array and mask are empty arrays created from Python lists, even though this is a logically valid operation.",
      "package": "awkward",
      "file_name": "bug_report_awkward_mask_2025-08-18_08-48_k3n2.md",
      "file_path": "opus-4.1/awkward/bug_reports/bug_report_awkward_mask_2025-08-18_08-48_k3n2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "awkward.prettyprint Formatter Ignores Precision for Python Floats",
      "target": "awkward.prettyprint.Formatter",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `Formatter` class in `awkward.prettyprint` ignores the `precision` parameter when formatting Python's built-in `float` type, while correctly applying it to NumPy float types.",
      "package": "awkward",
      "file_name": "bug_report_awkward_prettyprint_2025-08-18_08-22_k3m9.md",
      "file_path": "opus-4.1/awkward/bug_reports/bug_report_awkward_prettyprint_2025-08-18_08-22_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "awkward.record.Record to_packed() changes 'at' position",
      "target": "awkward.record.Record.to_packed()",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `to_packed()` method of `awkward.record.Record` unexpectedly changes the record's `at` position from its original value to 0 when the underlying array has more than one element.",
      "package": "awkward",
      "file_name": "bug_report_awkward_record_2025-08-18_21-31_j6zp.md",
      "file_path": "opus-4.1/awkward/bug_reports/bug_report_awkward_record_2025-08-18_21-31_j6zp.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "awkward.typetracer TypeTracerArray.forget_length() Changes Scalar Dimensionality",
      "target": "awkward.typetracer.TypeTracerArray.forget_length()",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-01-19",
      "summary": "The `forget_length()` method incorrectly converts scalar (0-dimensional) TypeTracerArrays into 1-dimensional arrays with unknown length, changing the array's dimensionality when it should preserve it.",
      "package": "awkward",
      "file_name": "bug_report_awkward_typetracer_2025-01-19_00-00_k3j9.md",
      "file_path": "opus-4.1/awkward/bug_reports/bug_report_awkward_typetracer_2025-01-19_00-00_k3j9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tokenizers.trainers BpeTrainer and WordPieceTrainer initial_alphabet Order Not Preserved",
      "target": "tokenizers.trainers.BpeTrainer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "BpeTrainer and WordPieceTrainer do not preserve the order of characters in the `initial_alphabet` parameter, violating expected behavior and potentially affecting tokenization consistency.",
      "package": "awkward",
      "file_name": "bug_report_tokenizers_trainers_initial_alphabet_2025-08-18_10-30_ab3f.md",
      "file_path": "opus-4.1/awkward/bug_reports/bug_report_tokenizers_trainers_initial_alphabet_2025-08-18_10-30_ab3f.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "BedrockResponse.is_json() Always Returns True",
      "target": "aws_lambda_powertools.event_handler.api_gateway.BedrockResponse.is_json",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `BedrockResponse.is_json()` method always returns `True` regardless of the actual content type, incorrectly reporting non-JSON content as JSON.",
      "package": "aws-lambda-powertools",
      "file_name": "bug_report_bedrock_response_2025-08-18_23-34_k8jx.md",
      "file_path": "opus-4.1/aws-lambda-powertools/bug_reports/bug_report_bedrock_response_2025-08-18_23-34_k8jx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "DynamoDB Deserializer Crashes on Numbers Over 38 Digits",
      "target": "aws_lambda_powertools.shared.dynamodb_deserializer.TypeDeserializer._deserialize_n",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The DynamoDB deserializer raises a `decimal.Inexact` exception when attempting to deserialize numbers with more than 38 significant digits, despite having code that attempts to handle this case.",
      "package": "aws-lambda-powertools",
      "file_name": "bug_report_dynamodb_deserializer_2025-08-18_00-00_x9k2.md",
      "file_path": "opus-4.1/aws-lambda-powertools/bug_reports/bug_report_dynamodb_deserializer_2025-08-18_00-00_x9k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "LRUDict.get() Fails to Update Access Order for Falsy Values",
      "target": "aws_lambda_powertools.shared.cache_dict.LRUDict.get",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `LRUDict.get()` method fails to update the access order for falsy values (0, False, None, \"\", [], {}), breaking the LRU (Least Recently Used) eviction semantics.",
      "package": "aws-lambda-powertools",
      "file_name": "bug_report_lrudict_get_2025-08-18_00-00_d8w1.md",
      "file_path": "opus-4.1/aws-lambda-powertools/bug_reports/bug_report_lrudict_get_2025-08-18_00-00_d8w1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aws_lambda_powertools.event_handler Route Compilation Fails with Regex Special Characters",
      "target": "aws_lambda_powertools.event_handler.api_gateway.ApiGatewayResolver._compile_regex",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_compile_regex` method fails to escape regex special characters in static route segments, causing routes containing characters like `?`, `$`, `()`, `[]` to fail pattern matching even against identical paths.",
      "package": "aws-lambda-powertools",
      "file_name": "bug_report_aws_lambda_powertools_event_handler_2025-08-18_23-34_bknr.md",
      "file_path": "opus-4.1/aws-lambda-powertools/bug_reports/bug_report_aws_lambda_powertools_event_handler_2025-08-18_23-34_bknr.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aws_lambda_powertools.logging Invalid Sampling Rate Validation",
      "target": "aws_lambda_powertools.logging.Logger",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Logger accepts invalid sampling rates like 'Infinity', 'NaN', and negative infinity that violate the documented 0.0-1.0 range constraint.",
      "package": "aws-lambda-powertools",
      "file_name": "bug_report_aws_lambda_powertools_logging_2025-08-18_23-32_k9f2.md",
      "file_path": "opus-4.1/aws-lambda-powertools/bug_reports/bug_report_aws_lambda_powertools_logging_2025-08-18_23-32_k9f2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aws_lambda_powertools.middleware_factory ModuleNotFoundError with trace_execution",
      "target": "aws_lambda_powertools.middleware_factory.lambda_handler_decorator",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `lambda_handler_decorator` crashes with `ModuleNotFoundError` when `trace_execution=True` is set and the optional `aws_xray_sdk` dependency is not installed.",
      "package": "aws-lambda-powertools",
      "file_name": "bug_report_aws_lambda_powertools_middleware_factory_2025-08-18_00-00_ab3f.md",
      "file_path": "opus-4.1/aws-lambda-powertools/bug_reports/bug_report_aws_lambda_powertools_middleware_factory_2025-08-18_00-00_ab3f.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aws_lambda_powertools.package_logger Invalid Debug Values Crash",
      "target": "aws_lambda_powertools.package_logger.set_package_logger_handler",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `set_package_logger_handler` function crashes with ValueError when POWERTOOLS_DEBUG environment variable contains invalid boolean values instead of treating them as False.",
      "package": "aws-lambda-powertools",
      "file_name": "bug_report_aws_lambda_powertools_package_logger_2025-08-18_23-33_ikry.md",
      "file_path": "opus-4.1/aws-lambda-powertools/bug_reports/bug_report_aws_lambda_powertools_package_logger_2025-08-18_23-33_ikry.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aws_lambda_powertools.package_logger Lack of Idempotence",
      "target": "aws_lambda_powertools.package_logger.set_package_logger_handler",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `set_package_logger_handler` function is not idempotent - multiple calls accumulate NullHandlers instead of maintaining a single handler configuration.",
      "package": "aws-lambda-powertools",
      "file_name": "bug_report_aws_lambda_powertools_package_logger_2025-08-18_23-33_cbq9.md",
      "file_path": "opus-4.1/aws-lambda-powertools/bug_reports/bug_report_aws_lambda_powertools_package_logger_2025-08-18_23-33_cbq9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aws_lambda_powertools.shared.functions.slice_dictionary Returns Duplicate Chunks",
      "target": "aws_lambda_powertools.shared.functions.slice_dictionary",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `slice_dictionary` function incorrectly returns the same chunk multiple times instead of properly slicing the dictionary into different parts, causing data loss and duplication.",
      "package": "aws-lambda-powertools",
      "file_name": "bug_report_aws_lambda_powertools_shared_functions_slice_dictionary_2025-08-18_21-36_x7n9.md",
      "file_path": "opus-4.1/aws-lambda-powertools/bug_reports/bug_report_aws_lambda_powertools_shared_functions_slice_dictionary_2025-08-18_21-36_x7n9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "aws_lambda_powertools.utilities.jmespath_utils ParseError Not Wrapped",
      "target": "aws_lambda_powertools.utilities.jmespath_utils.query",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `query` function fails to wrap `jmespath.exceptions.ParseError` as `InvalidEnvelopeExpressionError`, violating its documented exception contract.",
      "package": "aws-lambda-powertools",
      "file_name": "bug_report_aws_lambda_powertools_jmespath_2025-08-18_04-34_h3k9.md",
      "file_path": "opus-4.1/aws-lambda-powertools/bug_reports/bug_report_aws_lambda_powertools_jmespath_2025-08-18_04-34_h3k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "slice_dictionary Incorrectly Yields Duplicate Chunks",
      "target": "aws_lambda_powertools.shared.functions.slice_dictionary",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `slice_dictionary` function incorrectly yields duplicate chunks containing the same keys when slicing a dictionary, instead of properly dividing the dictionary into non-overlapping chunks.",
      "package": "aws-lambda-powertools",
      "file_name": "bug_report_slice_dictionary_2025-08-18_23-20_k8f3.md",
      "file_path": "opus-4.1/aws-lambda-powertools/bug_reports/bug_report_slice_dictionary_2025-08-18_23-20_k8f3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "slice_dictionary Loses Keys During Chunking",
      "target": "aws_lambda_powertools.shared.functions.slice_dictionary",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `slice_dictionary` function loses dictionary keys when creating chunks, returning duplicate chunks with incorrect keys instead of properly slicing the dictionary.",
      "package": "aws-lambda-powertools",
      "file_name": "bug_report_slice_dictionary_2025-08-18_00-00_m3p7.md",
      "file_path": "opus-4.1/aws-lambda-powertools/bug_reports/bug_report_slice_dictionary_2025-08-18_00-00_m3p7.md",
      "score": null,
      "bug_status": {
        "status": "valid",
        "url": "https://github.com/aws-powertools/powertools-lambda-python/pull/7246"
      }
    },
    {
      "title": "CaseInsensitiveDict Fails with Unicode Characters Having Complex Case Mappings",
      "target": "azure.core.utils.CaseInsensitiveDict",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "CaseInsensitiveDict fails to provide case-insensitive access for Unicode characters with complex case mappings, such as '\u00b5' (micro sign) and '\u00df' (German sharp s).",
      "package": "azure-mgmt-appconfiguration",
      "file_name": "bug_report_azure_core_caseinsensitivedict_2025-08-18_20-58_ernf.md",
      "file_path": "opus-4.1/azure-mgmt-appconfiguration/bug_reports/bug_report_azure_core_caseinsensitivedict_2025-08-18_20-58_ernf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "azure-mgmt-appconfiguration Readonly Fields Can Be Modified After Creation",
      "target": "azure.mgmt.appconfiguration.models",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Fields marked as readonly in model validation dictionaries can be modified after object creation, violating the expected immutability contract for readonly fields.",
      "package": "azure-mgmt-appconfiguration",
      "file_name": "bug_report_azure_mgmt_appconfiguration_2025-08-18_21-00_k9x2.md",
      "file_path": "opus-4.1/azure-mgmt-appconfiguration/bug_reports/bug_report_azure_mgmt_appconfiguration_2025-08-18_21-00_k9x2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "azure.core.utils.parse_connection_string Strips Leading Whitespace from Keys",
      "target": "azure.core.utils.parse_connection_string",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `parse_connection_string` function incorrectly strips leading whitespace from keys even when `case_sensitive_keys=True`, violating the expectation that keys should be preserved exactly.",
      "package": "azure-mgmt-appconfiguration",
      "file_name": "bug_report_azure_core_parse_connection_string_2025-08-18_20-58_qd5w.md",
      "file_path": "opus-4.1/azure-mgmt-appconfiguration/bug_reports/bug_report_azure_core_parse_connection_string_2025-08-18_20-58_qd5w.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "azure.profiles ProfileDefinition Allows External Mutation of Internal State",
      "target": "azure.profiles.ProfileDefinition",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "ProfileDefinition class in azure.profiles fails to protect its internal dictionary from external modification, allowing runtime mutation of supposedly immutable profile configurations including pre-defined KnownProfiles.",
      "package": "azure-mgmt-appconfiguration",
      "file_name": "bug_report_azure_profiles_2025-08-18_20-58_2xo8.md",
      "file_path": "opus-4.1/azure-mgmt-appconfiguration/bug_reports/bug_report_azure_profiles_2025-08-18_20-58_2xo8.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "base64.b64encode Altchars Collision with Base64 Alphabet",
      "target": "base64.b64encode",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `base64.b64encode` and `base64.b64decode` functions fail to properly handle alternative characters (`altchars`) when those characters collide with the standard base64 alphabet, causing incorrect decoding and data corruption.",
      "package": "base64",
      "file_name": "bug_report_base64_b64encode_altchars_2025-08-18_04-53_1edw.md",
      "file_path": "opus-4.1/base64/bug_reports/bug_report_base64_b64encode_altchars_2025-08-18_04-53_1edw.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "base64.b85encode Padding Round-Trip Failure",
      "target": "base64.b85encode",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `base64.b85encode` function with `pad=True` breaks the round-trip property, as `b85decode` cannot recover the original data length and returns padded data instead.",
      "package": "base64",
      "file_name": "bug_report_base64_b85encode_padding_2025-08-18_04-54_46yx.md",
      "file_path": "opus-4.1/base64/bug_reports/bug_report_base64_b85encode_padding_2025-08-18_04-54_46yx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "base64io.Base64IO write() returns incorrect byte count",
      "target": "base64io.Base64IO.write()",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `write()` method violates the standard IO contract by returning the number of base64-encoded bytes written to the underlying stream instead of the number of user bytes written.",
      "package": "base64io",
      "file_name": "bug_report_base64io_2025-08-18_04-59_k3m9.md",
      "file_path": "opus-4.1/base64io/bug_reports/bug_report_base64io_2025-08-18_04-59_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "BeautifulSoup CSS Selector Crashes on Malformed Tag Names",
      "target": "bs4.BeautifulSoup.select",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "BeautifulSoup's CSS selector method crashes when selecting tags with special characters in their names, while find_all() handles these same tags correctly.",
      "package": "beautifulsoup4",
      "file_name": "bug_report_bs4_css_selector_2025-08-18_19-05_fpbk.md",
      "file_path": "opus-4.1/beautifulsoup4/bug_reports/bug_report_bs4_css_selector_2025-08-18_19-05_fpbk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "TreeBuilderRegistry.lookup() Returns Wrong Builder When Feature Not Found",
      "target": "bs4.builder.TreeBuilderRegistry.lookup()",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "`TreeBuilderRegistry.lookup()` incorrectly returns builders that don't have all requested features when some features are not present in any registered builder.",
      "package": "beautifulsoup4",
      "file_name": "bug_report_bs4_builder_TreeBuilderRegistry_2025-08-18_04-35_k3x9.md",
      "file_path": "opus-4.1/beautifulsoup4/bug_reports/bug_report_bs4_builder_TreeBuilderRegistry_2025-08-18_04-35_k3x9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "bs4.css Namespace Handling with Precompiled Selectors",
      "target": "bs4.css.CSS",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The CSS class in BeautifulSoup4 raises a ValueError when using precompiled selectors with the namespaces parameter, affecting all selector methods (select, select_one, iselect, closest, match, filter).",
      "package": "beautifulsoup4",
      "file_name": "bug_report_bs4_css_2025-08-18_04-42_k3n9.md",
      "file_path": "opus-4.1/beautifulsoup4/bug_reports/bug_report_bs4_css_2025-08-18_04-42_k3n9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "bs4.dammit Encoding Misdetection for Short Byte Sequences",
      "target": "bs4.dammit.UnicodeDammit",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "UnicodeDammit incorrectly detects the encoding of short byte sequences like `b'^'` as cp037 (EBCDIC) instead of ASCII/UTF-8, causing the character '^' to be decoded as ';'.",
      "package": "beautifulsoup4",
      "file_name": "bug_report_bs4_dammit_2025-08-18_19-21_bbhu.md",
      "file_path": "opus-4.1/beautifulsoup4/bug_reports/bug_report_bs4_dammit_2025-08-18_19-21_bbhu.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "bs4.diagnose.rdoc() Generates Fewer Elements Than Requested",
      "target": "bs4.diagnose.rdoc",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `rdoc(num_elements)` function in bs4.diagnose can generate fewer elements than the `num_elements` parameter specifies, including generating zero elements when num_elements > 0.",
      "package": "beautifulsoup4",
      "file_name": "bug_report_bs4_diagnose_rdoc_2025-08-18_19-06_cdgg.md",
      "file_path": "opus-4.1/beautifulsoup4/bug_reports/bug_report_bs4_diagnose_rdoc_2025-08-18_19-06_cdgg.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "bs4.element Tag.__contains__ Uses Value Equality Instead of Identity",
      "target": "bs4.element.Tag.__contains__",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Tag.__contains__ uses value equality (==) instead of identity (is) when checking if an element is in a tag's contents, causing false positives for elements with the same value but different identities.",
      "package": "beautifulsoup4",
      "file_name": "bug_report_bs4_element_2025-08-18_19-18_p0pq.md",
      "file_path": "opus-4.1/beautifulsoup4/bug_reports/bug_report_bs4_element_2025-08-18_19-18_p0pq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "bs4.filter.SoupStrainer Case-Sensitive Attribute Matching",
      "target": "bs4.filter.SoupStrainer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "SoupStrainer performs case-sensitive attribute name matching while HTML parsers convert all attribute names to lowercase, causing strainers with uppercase attribute names to never match parsed HTML tags.",
      "package": "beautifulsoup4",
      "file_name": "bug_report_bs4_filter_2025-08-18_20-24_zfui.md",
      "file_path": "opus-4.1/beautifulsoup4/bug_reports/bug_report_bs4_filter_2025-08-18_20-24_zfui.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "bs4.formatter Float Indent Parameter Handling",
      "target": "bs4.formatter.Formatter",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The Formatter class incorrectly handles float values for the indent parameter, always converting them to a single space instead of treating them like their integer equivalents.",
      "package": "beautifulsoup4",
      "file_name": "bug_report_bs4_formatter_2025-08-18_22-53_yzbl.md",
      "file_path": "opus-4.1/beautifulsoup4/bug_reports/bug_report_bs4_formatter_2025-08-18_22-53_yzbl.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "click.core.batch Loses Elements When Batch Size Exceeds Input Length",
      "target": "click.core.batch",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `batch` function in click.core silently loses elements when the input has fewer elements than the batch size or when there are leftover elements that don't form a complete batch.",
      "package": "click",
      "file_name": "bug_report_click_core_batch_2025-08-18_05-53_hdtf.md",
      "file_path": "opus-4.1/click/bug_reports/bug_report_click_core_batch_2025-08-18_05-53_hdtf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "click.decorators Empty Command Name Collision",
      "target": "click.decorators.command",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Function names that end with `_cmd`, `_command`, `_grp`, or `_group` produce commands with empty names, causing silent overwrites when multiple such commands are added to the same group.",
      "package": "click",
      "file_name": "bug_report_click_decorators_2025-08-18_05-55_ix7g.md",
      "file_path": "opus-4.1/click/bug_reports/bug_report_click_decorators_2025-08-18_05-55_ix7g.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "click.formatting.HelpFormatter.write_usage Loses Program Name",
      "target": "click.formatting.HelpFormatter.write_usage",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `write_usage` method fails to include the program name in its output when the `args` parameter is an empty string, resulting in malformed usage text.",
      "package": "click",
      "file_name": "bug_report_click_formatting_write_usage_2025-08-18_05-54_otmj.md",
      "file_path": "opus-4.1/click/bug_reports/bug_report_click_formatting_write_usage_2025-08-18_05-54_otmj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "click.formatting.iter_rows Fails to Truncate Rows",
      "target": "click.formatting.iter_rows",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `iter_rows` function fails to truncate rows when `col_count` is less than the actual number of columns in a row, violating the expected contract that all returned rows should have exactly `col_count` columns.",
      "package": "click",
      "file_name": "bug_report_click_formatting_iter_rows_2025-08-18_05-54_kxq2.md",
      "file_path": "opus-4.1/click/bug_reports/bug_report_click_formatting_iter_rows_2025-08-18_05-54_kxq2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "click.globals Type Confusion Vulnerability",
      "target": "click.globals.get_current_context",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "`get_current_context()` returns incorrect values instead of raising `RuntimeError` when the internal `_local.stack` is corrupted to a string type, violating the function's contract.",
      "package": "click",
      "file_name": "bug_report_click_globals_2025-08-18_05-53_qim1.md",
      "file_path": "opus-4.1/click/bug_reports/bug_report_click_globals_2025-08-18_05-53_qim1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "click.parser._unpack_args Incorrect Handling of nargs=0",
      "target": "click.parser._unpack_args",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_unpack_args` function in click.parser incorrectly handles `nargs=0`, returning an empty tuple `()` instead of properly handling it as an empty position that should be skipped entirely in argument unpacking.",
      "package": "click",
      "file_name": "bug_report_click_parser_unpack_args_2025-08-18_05-53_omv7.md",
      "file_path": "opus-4.1/click/bug_reports/bug_report_click_parser_unpack_args_2025-08-18_05-53_omv7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "click.shell_completion Bash Version Comparison Uses String Instead of Numeric Comparison",
      "target": "click.shell_completion.BashComplete._check_version",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The Bash version check in `BashComplete._check_version()` uses string comparison instead of numeric comparison, causing it to incorrectly warn about versions like 4.10, 10.0, etc., being \"older than 4.4\".",
      "package": "click",
      "file_name": "bug_report_click_shell_completion_2025-08-18_05-57_06i3.md",
      "file_path": "opus-4.1/click/bug_reports/bug_report_click_shell_completion_2025-08-18_05-57_06i3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "click.style Adds ANSI Codes to Empty Strings",
      "target": "click.style",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `click.style()` function incorrectly adds ANSI escape codes when styling an empty string, producing non-empty output for empty input.",
      "package": "click",
      "file_name": "bug_report_click_style_empty_2025-08-18_05-53_hx0k.md",
      "file_path": "opus-4.1/click/bug_reports/bug_report_click_style_empty_2025-08-18_05-53_hx0k.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "click.termui Incomplete ANSI Escape Removal in unstyle()",
      "target": "click.termui.unstyle",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `unstyle()` function fails to remove bare escape characters (`\\x1b`) and incomplete ANSI sequences, violating the expected behavior that it \"removes ANSI styling information from a string.\"",
      "package": "click",
      "file_name": "bug_report_click_termui_unstyle_2025-08-18_05-55_f6hb.md",
      "file_path": "opus-4.1/click/bug_reports/bug_report_click_termui_unstyle_2025-08-18_05-55_f6hb.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "click.types.BoolParamType AttributeError on Integer Input",
      "target": "click.types.BoolParamType",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "BoolParamType.convert() crashes with AttributeError when given integer values other than 0, 1, True, or False, attempting to call .strip() on non-string input.",
      "package": "click",
      "file_name": "bug_report_click_types_bool_integer_2025-08-18_05-56_u1iq.md",
      "file_path": "opus-4.1/click/bug_reports/bug_report_click_types_bool_integer_2025-08-18_05-56_u1iq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "click.utils.make_default_short_help Violates max_length Constraint",
      "target": "click.utils.make_default_short_help",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `make_default_short_help` function violates its `max_length` parameter constraint when max_length is 1 or 2, returning \"...\" (3 characters) instead of respecting the limit.",
      "package": "click",
      "file_name": "bug_report_click_utils_make_default_short_help_2025-08-18_05-54_n34i.md",
      "file_path": "opus-4.1/click/bug_reports/bug_report_click_utils_make_default_short_help_2025-08-18_05-54_n34i.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "rpdk.core.jsonutils.utils.item_hash All Lists Hash to Same Value",
      "target": "rpdk.core.jsonutils.utils.item_hash",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `item_hash` function in `rpdk.core.jsonutils.utils` contains a critical bug that causes all list inputs to hash to the same value (the MD5 hash of \"null\"), completely breaking the hash function's purpose for list-type data.",
      "package": "cloudformation-cli-java-plugin",
      "file_name": "bug_report_rpdk_core_jsonutils_utils_item_hash_2025-08-18_23-14_3m44.md",
      "file_path": "opus-4.1/cloudformation-cli-java-plugin/bug_reports/bug_report_rpdk_core_jsonutils_utils_item_hash_2025-08-18_23-14_3m44.md",
      "score": null,
      "bug_status": {
        "status": "valid",
        "url": "https://github.com/aws-cloudformation/cloudformation-cli/pull/1106"
      }
    },
    {
      "title": "rpdk.core.jsonutils.utils.item_hash Returns Incorrect Hash for All Lists",
      "target": "rpdk.core.jsonutils.utils.item_hash",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `item_hash` function in rpdk.core always returns the same hash value for any list input due to incorrect use of the `.sort()` method, which returns `None` instead of the sorted list.",
      "package": "cloudformation-cli-java-plugin",
      "file_name": "bug_report_rpdk_core_jsonutils_utils_2025-08-18_23-13_3lt6.md",
      "file_path": "opus-4.1/cloudformation-cli-java-plugin/bug_reports/bug_report_rpdk_core_jsonutils_utils_2025-08-18_23-13_3lt6.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "rpdk.java.resolver.translate_type AttributeError with None Inner Type",
      "target": "rpdk.java.resolver.translate_type",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `translate_type` function crashes with an AttributeError when processing a container type with None as the inner type, failing to handle this edge case gracefully.",
      "package": "cloudformation-cli-java-plugin",
      "file_name": "bug_report_rpdk_java_translate_type_2025-08-18_23-15_l438.md",
      "file_path": "opus-4.1/cloudformation-cli-java-plugin/bug_reports/bug_report_rpdk_java_translate_type_2025-08-18_23-15_l438.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "rpdk.java.utils.validate_codegen_model Accepts Input with Trailing Newline",
      "target": "rpdk.java.utils.validate_codegen_model",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `validate_codegen_model` function incorrectly accepts input values with trailing newlines (e.g., \"1\\n\"), violating the stated regex pattern `^[1-2]$` which should only match exactly \"1\" or \"2\".",
      "package": "cloudformation-cli-java-plugin",
      "file_name": "bug_report_rpdk_java_validate_codegen_2025-08-18_23-15_wm38.md",
      "file_path": "opus-4.1/cloudformation-cli-java-plugin/bug_reports/bug_report_rpdk_java_validate_codegen_2025-08-18_23-15_wm38.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "rpdk.java.utils.validate_namespace Accepts Invalid Underscore-Only Segments",
      "target": "rpdk.java.utils.validate_namespace",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `validate_namespace` function incorrectly accepts package names consisting only of underscores (e.g., \"__\"), which violates the stated regex pattern `[_a-z][_a-z0-9]+` that requires at least one letter.",
      "package": "cloudformation-cli-java-plugin",
      "file_name": "bug_report_rpdk_java_validate_namespace_2025-08-18_23-15_okre.md",
      "file_path": "opus-4.1/cloudformation-cli-java-plugin/bug_reports/bug_report_rpdk_java_validate_namespace_2025-08-18_23-15_okre.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "cloudscraper.cloudflare Challenge Detection Methods Return None Instead of False",
      "target": "cloudscraper.cloudflare",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The challenge detection methods `is_IUAM_Challenge()`, `is_Captcha_Challenge()`, and `is_Firewall_Blocked()` in cloudscraper.cloudflare return `None` instead of `False` when the Cloudflare server header and status code match but required text patterns are absent.",
      "package": "cloudscraper",
      "file_name": "bug_report_cloudscraper_cloudflare_2025-08-19_03-08_i4ju.md",
      "file_path": "opus-4.1/cloudscraper/bug_reports/bug_report_cloudscraper_cloudflare_2025-08-19_03-08_i4ju.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "cloudscraper.help Multiple Exception Handling Issues",
      "target": "cloudscraper.help",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `cloudscraper.help` module has multiple exception handling issues in `getPossibleCiphers()` and `_pythonVersion()` functions that cause unhandled exceptions with certain edge case inputs.",
      "package": "cloudscraper",
      "file_name": "bug_report_cloudscraper_help_2025-08-19_03-05_z7ln.md",
      "file_path": "opus-4.1/cloudscraper/bug_reports/bug_report_cloudscraper_help_2025-08-19_03-05_z7ln.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "cloudscraper.interpreters.encapsulated AttributeError with Empty k Value",
      "target": "cloudscraper.interpreters.encapsulated.template",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `template` function in `cloudscraper.interpreters.encapsulated` crashes with an AttributeError when the JavaScript variable `k` is assigned an empty string or whitespace-only string, instead of raising the expected ValueError.",
      "package": "cloudscraper",
      "file_name": "bug_report_cloudscraper_interpreters_encapsulated_2025-08-19_03-11_gnsy.md",
      "file_path": "opus-4.1/cloudscraper/bug_reports/bug_report_cloudscraper_interpreters_encapsulated_2025-08-19_03-11_gnsy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "cloudscraper.user_agent Empty String Validation Bypass",
      "target": "cloudscraper.user_agent.User_Agent",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Empty strings bypass browser and platform name validation in User_Agent class, allowing invalid empty values to be silently accepted instead of raising RuntimeError as documented.",
      "package": "cloudscraper",
      "file_name": "bug_report_cloudscraper_user_agent_2025-08-19_03-05_mmen.md",
      "file_path": "opus-4.1/cloudscraper/bug_reports/bug_report_cloudscraper_user_agent_2025-08-19_03-05_mmen.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "collections.Counter Addition Breaks Associativity",
      "target": "collections.Counter",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The addition operator (+) for collections.Counter violates the mathematical property of associativity when negative counts are involved, causing (a + b) + c to produce different results than a + (b + c).",
      "package": "collections",
      "file_name": "bug_report_collections_Counter_2025-08-18_04-49_9203.md",
      "file_path": "opus-4.1/collections/bug_reports/bug_report_collections_Counter_2025-08-18_04-49_9203.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.app Missing Header Validation",
      "target": "flask.app.Flask.make_response",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Flask's `make_response()` method fails to validate HTTP header values for newline characters before passing them to Werkzeug, causing late error detection and poor error messages.",
      "package": "collections",
      "file_name": "bug_report_flask_app_2025-08-18_14-30_x7k2.md",
      "file_path": "opus-4.1/collections/bug_reports/bug_report_flask_app_2025-08-18_14-30_x7k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.blueprints Empty URL Rule Without Prefix",
      "target": "flask.blueprints.BlueprintSetupState.add_url_rule",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "BlueprintSetupState.add_url_rule fails to handle empty string rules when url_prefix is None, causing a ValueError when the empty rule is passed to the application's add_url_rule method.",
      "package": "collections",
      "file_name": "bug_report_flask_blueprints_2025-08-18_00-00_a7f2.md",
      "file_path": "opus-4.1/collections/bug_reports/bug_report_flask_blueprints_2025-08-18_00-00_a7f2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "copier._cli data_file_switch crashes on empty YAML files",
      "target": "copier._cli._Subcommand.data_file_switch",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `data_file_switch` method crashes with AttributeError when processing empty YAML files because `yaml.safe_load` returns None for empty files.",
      "package": "copier",
      "file_name": "bug_report_copier__cli_data_file_2025-08-19_02-54_7kx5.md",
      "file_path": "opus-4.1/copier/bug_reports/bug_report_copier__cli_data_file_2025-08-19_02-54_7kx5.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "copier._cli data_switch crashes on arguments without equals sign",
      "target": "copier._cli._Subcommand.data_switch",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `data_switch` method crashes with ValueError when given command-line arguments that don't contain an equals sign, instead of providing a helpful error message.",
      "package": "copier",
      "file_name": "bug_report_copier__cli_data_switch_2025-08-19_02-54_zak2.md",
      "file_path": "opus-4.1/copier/bug_reports/bug_report_copier__cli_data_switch_2025-08-19_02-54_zak2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "copier._jinja_ext Template Re-rendering Raises Incorrect MultipleYieldTagsError",
      "target": "copier._jinja_ext.YieldExtension",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "Templates with a single `{% yield %}` tag incorrectly raise `MultipleYieldTagsError` when rendered more than once with the same template instance.",
      "package": "copier",
      "file_name": "bug_report_copier__jinja_ext_2025-08-19_16-45_x7k2.md",
      "file_path": "opus-4.1/copier/bug_reports/bug_report_copier__jinja_ext_2025-08-19_16-45_x7k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "copier._subproject AttributeError on Non-Dict YAML",
      "target": "copier._subproject.Subproject.last_answers",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `Subproject.last_answers` property crashes with an AttributeError when the answers file contains non-dictionary YAML content (e.g., scalars, lists).",
      "package": "copier",
      "file_name": "bug_report_copier__subproject_2025-08-19_03-01_zr1s.md",
      "file_path": "opus-4.1/copier/bug_reports/bug_report_copier__subproject_2025-08-19_03-01_zr1s.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "copier._template.Template Type Contract Violation in subdirectory Property",
      "target": "copier._template.Template.subdirectory",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `Template.subdirectory` property violates its type annotation by returning `None` instead of a string when the YAML configuration contains an empty or null value for `_subdirectory`.",
      "package": "copier",
      "file_name": "bug_report_copier__template_2025-08-19_02-57_kz0m.md",
      "file_path": "opus-4.1/copier/bug_reports/bug_report_copier__template_2025-08-19_02-57_kz0m.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "copier._tools.escape_git_path Not Idempotent",
      "target": "copier._tools.escape_git_path",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `escape_git_path` function is not idempotent - applying it twice to the same input produces different results than applying it once, which violates the expected property for an escaping function.",
      "package": "copier",
      "file_name": "bug_report_copier_tools_escape_git_path_2025-08-19_16-26_m2x7.md",
      "file_path": "opus-4.1/copier/bug_reports/bug_report_copier_tools_escape_git_path_2025-08-19_16-26_m2x7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "copier._tools.normalize_git_path Crashes on Certain Inputs",
      "target": "copier._tools.normalize_git_path",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `normalize_git_path` function crashes with UnicodeDecodeError when given certain valid string inputs, including strings with non-UTF8 bytes or trailing backslashes.",
      "package": "copier",
      "file_name": "bug_report_copier_tools_normalize_git_path_2025-08-19_16-25_k3j9.md",
      "file_path": "opus-4.1/copier/bug_reports/bug_report_copier_tools_normalize_git_path_2025-08-19_16-25_k3j9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "copier._tools.normalize_git_path UnicodeDecodeError on Latin-1 Characters",
      "target": "copier._tools.normalize_git_path",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `normalize_git_path` function crashes with a `UnicodeDecodeError` when processing strings containing bytes in the range 0x80-0xFF, which are valid Latin-1 characters but invalid UTF-8 sequences.",
      "package": "copier",
      "file_name": "bug_report_copier_normalize_git_path_2025-08-19_02-55_sxwq.md",
      "file_path": "opus-4.1/copier/bug_reports/bug_report_copier_normalize_git_path_2025-08-19_02-55_sxwq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "copier._tools.normalize_git_path UnicodeDecodeError on Non-UTF-8 Input",
      "target": "copier._tools.normalize_git_path",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `normalize_git_path` function crashes with a `UnicodeDecodeError` when processing paths containing certain non-UTF-8 byte sequences, even though the function is designed to handle special Git path encodings.",
      "package": "copier",
      "file_name": "bug_report_copier__tools_2025-08-19_02-55_9z5u.md",
      "file_path": "opus-4.1/copier/bug_reports/bug_report_copier__tools_2025-08-19_02-55_9z5u.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "copier._types.LazyDict KeyError on Deletion",
      "target": "copier._types.LazyDict",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "LazyDict raises KeyError when deleting a key that hasn't been computed yet, violating standard dictionary deletion behavior.",
      "package": "copier",
      "file_name": "bug_report_copier__types_2025-08-19_02-56_7mzp.md",
      "file_path": "opus-4.1/copier/bug_reports/bug_report_copier__types_2025-08-19_02-56_7mzp.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "copier._vcs Functions Crash on Null Characters",
      "target": "copier._vcs",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "Multiple functions in copier._vcs crash with ValueError when given strings containing null characters ('\\x00'), instead of gracefully handling invalid input.",
      "package": "copier",
      "file_name": "bug_report_copier_vcs_2025-08-19_14-30_x7k2.md",
      "file_path": "opus-4.1/copier/bug_reports/bug_report_copier_vcs_2025-08-19_14-30_x7k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "copier.settings Prefix Trust Matching Failure",
      "target": "copier.settings.Settings.is_trusted",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `is_trusted` method fails to correctly match repositories against trusted prefixes when the trust pattern ends with \"/\", causing repositories that should be trusted to be incorrectly rejected.",
      "package": "copier",
      "file_name": "bug_report_copier_settings_2025-08-19_02-56_vzq8.md",
      "file_path": "opus-4.1/copier/bug_reports/bug_report_copier_settings_2025-08-19_02-56_vzq8.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "coremltools.converters EnumeratedShapes IndexError with Different Length Shapes",
      "target": "coremltools.converters.mil.input_types.EnumeratedShapes",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "EnumeratedShapes crashes with IndexError when provided shapes of different lengths, preventing common ML use cases like supporting both 1D and 2D inputs.",
      "package": "coremltools",
      "file_name": "bug_report_coremltools_converters_EnumeratedShapes_2025-08-18_02-16_k3f9.md",
      "file_path": "opus-4.1/coremltools/bug_reports/bug_report_coremltools_converters_EnumeratedShapes_2025-08-18_02-16_k3f9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "coremltools.models.datatypes.Array Accepts Invalid Non-Positive Dimensions",
      "target": "coremltools.models.datatypes.Array",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `Array` class in coremltools incorrectly accepts zero and negative dimensions, resulting in arrays with nonsensical properties like negative `num_elements`.",
      "package": "coremltools",
      "file_name": "bug_report_coremltools_models_datatypes_2025-08-18_13-45_a3f7.md",
      "file_path": "opus-4.1/coremltools/bug_reports/bug_report_coremltools_models_datatypes_2025-08-18_13-45_a3f7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "coremltools.models.utils.rename_feature Fails to Rename Neural Network Layer Outputs",
      "target": "coremltools.models.utils.rename_feature",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `rename_feature` function fails to rename neural network layer outputs when `rename_inputs=False` and `rename_outputs=True` due to incorrect indentation in the implementation.",
      "package": "coremltools",
      "file_name": "bug_report_coremltools_models_utils_rename_feature_2025-08-18_22-28_b06j.md",
      "file_path": "opus-4.1/coremltools/bug_reports/bug_report_coremltools_models_utils_rename_feature_2025-08-18_22-28_b06j.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "coremltools.optimize._utils Invalid Quantization Range",
      "target": "coremltools.optimize._utils.get_quant_range",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `get_quant_range` function returns an invalid range [0, 0] for 1-bit quantization with LINEAR_SYMMETRIC mode, which would cause division by zero in quantization operations.",
      "package": "coremltools",
      "file_name": "bug_report_coremltools_optimize__utils_2025-08-18_22-22_7x2k.md",
      "file_path": "opus-4.1/coremltools/bug_reports/bug_report_coremltools_optimize__utils_2025-08-18_22-22_7x2k.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "cryptography.fernet Raises Wrong Exception for Non-ASCII Tokens",
      "target": "cryptography.fernet.Fernet",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Fernet's token decryption methods raise `ValueError` instead of `InvalidToken` when given non-ASCII string tokens, violating the documented API contract that all invalid tokens should raise `InvalidToken`.",
      "package": "cryptography",
      "file_name": "bug_report_cryptography_fernet_2025-08-18_05-27_v6rw.md",
      "file_path": "opus-4.1/cryptography/bug_reports/bug_report_cryptography_fernet_2025-08-18_05-27_v6rw.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "cryptography.fernet ValueError on Non-ASCII Token Strings",
      "target": "cryptography.fernet",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Fernet methods that accept tokens raise `ValueError` instead of `InvalidToken` when given string tokens containing non-ASCII characters, violating the API contract.",
      "package": "cryptography",
      "file_name": "bug_report_cryptography_fernet_2025-08-18_05-25_dn9j.md",
      "file_path": "opus-4.1/cryptography/bug_reports/bug_report_cryptography_fernet_2025-08-18_05-25_dn9j.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "cryptography.hazmat.primitives.keywrap Empty Key Wrap Round-Trip Failure",
      "target": "cryptography.hazmat.primitives.keywrap.aes_key_wrap_with_padding",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `aes_key_wrap_with_padding` function produces invalid output when wrapping an empty key, which cannot be unwrapped by `aes_key_unwrap_with_padding`.",
      "package": "cryptography",
      "file_name": "bug_report_cryptography_hazmat_primitives_keywrap_2025-08-18_05-27_y16a.md",
      "file_path": "opus-4.1/cryptography/bug_reports/bug_report_cryptography_hazmat_primitives_keywrap_2025-08-18_05-27_y16a.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "cryptography.hazmat.primitives.keywrap Invalid Exception Type on Malformed Input",
      "target": "cryptography.hazmat.primitives.keywrap.aes_key_unwrap_with_padding",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `aes_key_unwrap_with_padding` function raises `ValueError` instead of `InvalidUnwrap` when given wrapped keys that are not multiples of 8 bytes.",
      "package": "cryptography",
      "file_name": "bug_report_cryptography_hazmat_primitives_keywrap_2025-08-18_05-28_vfre.md",
      "file_path": "opus-4.1/cryptography/bug_reports/bug_report_cryptography_hazmat_primitives_keywrap_2025-08-18_05-28_vfre.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "cryptography.utils.cached_property Incorrect Cache Attribute Naming",
      "target": "cryptography.utils.cached_property",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `cached_property` decorator creates cache attributes with unpredictable names containing the function object's memory address, making it impossible to programmatically access or clear the cache.",
      "package": "cryptography",
      "file_name": "bug_report_cryptography_utils_cached_property_2025-08-18_05-26_fssu.md",
      "file_path": "opus-4.1/cryptography/bug_reports/bug_report_cryptography_utils_cached_property_2025-08-18_05-26_fssu.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Cython.Build.Cache.file_hash Caching Ignores File Modifications",
      "target": "Cython.Build.Cache.file_hash",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `file_hash` function in Cython.Build.Cache incorrectly caches hash values based solely on filename, returning stale hashes when file contents change.",
      "package": "cython",
      "file_name": "bug_report_Cython_Build_Cache_file_hash_2025-08-18_20-05_8oy6.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_Cython_Build_Cache_file_hash_2025-08-18_20-05_8oy6.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Cython.CodeWriter binop_node Accepts None Operands Causing Compiler Crash",
      "target": "Cython.CodeWriter.binop_node",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `binop_node` function in Cython.CodeWriter accepts None as operands without validation, creating malformed AST nodes that cause a CompilerCrash when CodeWriter attempts to serialize them.",
      "package": "cython",
      "file_name": "bug_report_cython_codewriter_2025-08-18_20-30_elef.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_cython_codewriter_2025-08-18_20-30_elef.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Cython.Compiler.StringEncoding Infinite Loop in split_string_literal",
      "target": "Cython.Compiler.StringEncoding.split_string_literal",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `split_string_literal` function enters an infinite loop when called with a limit parameter less than or equal to 0, causing the program to hang indefinitely.",
      "package": "cython",
      "file_name": "bug_report_cython_compiler_stringencoding_2025-08-18_20-37_xay7.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_cython_compiler_stringencoding_2025-08-18_20-37_xay7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Cython.Plex chars_to_ranges Incorrectly Handles Duplicate Characters",
      "target": "Cython.Plex.Regexps.chars_to_ranges",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `chars_to_ranges` function incorrectly expands character ranges when given duplicate characters, causing `Any()` regex patterns to incorrectly match newline characters.",
      "package": "cython",
      "file_name": "bug_report_cython_plex_2025-08-18_20-32_cnnb.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_cython_plex_2025-08-18_20-32_cnnb.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Cython.Runtime.refnanny.Context Integer Overflow in Second Parameter",
      "target": "Cython.Runtime.refnanny.Context",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The Context class in Cython.Runtime.refnanny has inconsistent integer overflow handling - the second parameter fails with OverflowError for values outside the ssize_t range, while the first and third parameters handle arbitrarily large integers correctly.",
      "package": "cython",
      "file_name": "bug_report_cython_runtime_refnanny_2025-08-18_20-32_8kpj.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_cython_runtime_refnanny_2025-08-18_20-32_8kpj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Cython.Shadow cpow Function Incorrect Implementation",
      "target": "Cython.Shadow.cpow",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `cpow` function in Cython.Shadow is incorrectly implemented as a lambda that takes only one argument and returns an `_EmptyDecoratorAndManager` object, instead of computing the power of two numbers.",
      "package": "cython",
      "file_name": "bug_report_cython_shadow_2025-08-18_20-34_nuyv.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_cython_shadow_2025-08-18_20-34_nuyv.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Cython.Shadow.typeof Returns Strings Instead of Type Objects",
      "target": "Cython.Shadow.typeof",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-01-18",
      "summary": "The `typeof()` function in Cython.Shadow returns string representations of types (e.g., `'int'`, `'float'`) instead of actual Python type objects, contradicting expected behavior and containing commented-out correct implementation.",
      "package": "cython",
      "file_name": "bug_report_cython_shadow_typeof_2025-01-18_07-25_k3n9.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_cython_shadow_typeof_2025-01-18_07-25_k3n9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Cython.StringIOTree Segmentation Fault on Self-Insertion",
      "target": "Cython.StringIOTree.StringIOTree",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "StringIOTree causes a segmentation fault when attempting to insert a non-empty tree into itself using the `insert()` method.",
      "package": "cython",
      "file_name": "bug_report_Cython_StringIOTree_2025-08-18_22-54_rw68.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_Cython_StringIOTree_2025-08-18_22-54_rw68.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Cython.Tempita Multiple Template Processing Issues",
      "target": "Cython.Tempita",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Found three distinct bugs in Cython.Tempita template processing: (1) None/True/False don't raise NameError when undefined, (2) empty expressions cause unhelpful SyntaxError, and (3) certain Unicode identifiers are incorrectly parsed.",
      "package": "cython",
      "file_name": "bug_report_Cython_Tempita_2025-08-18_20-37_b9fi.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_Cython_Tempita_2025-08-18_20-37_b9fi.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Cython.TestUtils strip_common_indent Fails to Handle Tab Indentation",
      "target": "Cython.TestUtils.strip_common_indent",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `strip_common_indent` function claims to strip \"common indentation\" but only handles spaces, completely ignoring tab characters, which are a valid and common form of indentation.",
      "package": "cython",
      "file_name": "bug_report_cython_testutils_2025-08-18_20-35_8oas.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_cython_testutils_2025-08-18_20-35_8oas.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Cython.Utility.pylong_join Generates Invalid C Code with Empty Parameters",
      "target": "Cython.Utility.pylong_join",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `pylong_join` function generates syntactically invalid C code when provided with empty strings for `digits_ptr` or `join_type` parameters, potentially causing compilation errors in generated Cython code.",
      "package": "cython",
      "file_name": "bug_report_cython_utility_pylong_join_2025-08-18_20-35_nwt1.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_cython_utility_pylong_join_2025-08-18_20-35_nwt1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Cython.Utils normalise_float_repr Produces Malformed Float Strings",
      "target": "Cython.Utils.normalise_float_repr",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The function `normalise_float_repr` produces malformed string representations for negative numbers in scientific notation, creating strings that cannot be parsed back as valid floats.",
      "package": "cython",
      "file_name": "bug_report_cython_utils_normalise_float_2025-08-18_20-34_u46w.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_cython_utils_normalise_float_2025-08-18_20-34_u46w.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Cython.Utils strip_py2_long_suffix Crashes on Empty String",
      "target": "Cython.Utils.strip_py2_long_suffix",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The function `strip_py2_long_suffix` raises an IndexError when passed an empty string, violating the expectation that string manipulation functions should handle edge cases gracefully.",
      "package": "cython",
      "file_name": "bug_report_cython_utils_strip_suffix_2025-08-18_20-33_mrup.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_cython_utils_strip_suffix_2025-08-18_20-33_mrup.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Cython.Utils.build_hex_version Returns String Instead of Integer",
      "target": "Cython.Utils.build_hex_version",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "build_hex_version returns a string representation of hex values instead of an integer, contradicting its documentation which compares it to PY_VERSION_HEX (an integer).",
      "package": "cython",
      "file_name": "bug_report_cython_utils_build_hex_version_2025-08-18_20-02_dnfk.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_cython_utils_build_hex_version_2025-08-18_20-02_dnfk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Cython.Utils.normalise_float_repr Malformed Output for Small Negative Scientific Notation",
      "target": "Cython.Utils.normalise_float_repr",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "normalise_float_repr produces malformed output for very small negative numbers in scientific notation, placing the minus sign incorrectly in the middle of the decimal representation.",
      "package": "cython",
      "file_name": "bug_report_cython_utils_normalise_float_repr_2025-08-18_20-02_trtg.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_cython_utils_normalise_float_repr_2025-08-18_20-02_trtg.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "CythonDebugWriter Invalid XML Names Crash",
      "target": "Cython.Debugger.DebugWriter.CythonDebugWriter",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "CythonDebugWriter crashes when attempting to create XML elements or attributes with invalid names (e.g., names starting with digits or containing control characters), instead of validating or sanitizing them.",
      "package": "cython",
      "file_name": "bug_report_Cython_Debugger_DebugWriter_2025-08-18_20-30_xr20.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_Cython_Debugger_DebugWriter_2025-08-18_20-30_xr20.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyximport _have_importers() Logic Error Allows Duplicate Importers",
      "target": "pyximport._have_importers()",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_have_importers()` function in pyximport has incorrect logic that fails to detect when a PyImportMetaFinder is already installed, allowing duplicate importers to be added to sys.meta_path.",
      "package": "cython",
      "file_name": "bug_report_pyximport_2025-08-18_20-37_j0m2.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_pyximport_2025-08-18_20-37_j0m2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyximport.pyximport Duplicate PyImportMetaFinder on Multiple install() Calls",
      "target": "pyximport.pyximport.install",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `install()` function incorrectly adds duplicate `PyImportMetaFinder` instances to `sys.meta_path` when called multiple times with `pyimport=True`, due to a logic error in the `_have_importers()` function.",
      "package": "cython",
      "file_name": "bug_report_pyximport_pyximport_2025-08-18_20-39_ucpm.md",
      "file_path": "opus-4.1/cython/bug_reports/bug_report_pyximport_pyximport_2025-08-18_20-39_ucpm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "StrictColumnsConstraint Fails to Detect Missing Columns",
      "target": "dagster_pandas.constraints.StrictColumnsConstraint",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "StrictColumnsConstraint with `enforce_ordering=False` fails to detect when required columns are missing from a DataFrame, only checking that present columns are in the allowed list.",
      "package": "dagster-pandas",
      "file_name": "bug_report_dagster_pandas_constraints_2025-08-18_23-03_49em.md",
      "file_path": "opus-4.1/dagster-pandas/bug_reports/bug_report_dagster_pandas_constraints_2025-08-18_23-03_49em.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dagster_pandas Range Validation Off-by-One Error with System Minimum",
      "target": "dagster_pandas.constraints.column_range_validation_factory",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `column_range_validation_factory` function incorrectly rejects `-sys.maxsize` when no minimum value is specified, due to an off-by-one error in the default minimum calculation.",
      "package": "dagster-pandas",
      "file_name": "bug_report_dagster_pandas_2025-08-18_17-17_k3j9.md",
      "file_path": "opus-4.1/dagster-pandas/bug_reports/bug_report_dagster_pandas_2025-08-18_17-17_k3j9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dagster_pandas.constraints Type Checking Failure with Unbounded Ranges",
      "target": "dagster_pandas.constraints.column_range_validation_factory",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `column_range_validation_factory` function incorrectly rejects non-integer values (floats, datetimes) when both min and max bounds are None, due to a type checking bug that defaults to integer type validation.",
      "package": "dagster-pandas",
      "file_name": "bug_report_dagster_pandas_constraints_2025-08-18_22-45_c0kf.md",
      "file_path": "opus-4.1/dagster-pandas/bug_reports/bug_report_dagster_pandas_constraints_2025-08-18_22-45_c0kf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dagster_pandas.validation.PandasColumn.categorical_column Type Mismatch",
      "target": "dagster_pandas.validation.PandasColumn.categorical_column",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `PandasColumn.categorical_column()` method documentation specifies it accepts a list for the `categories` parameter, but the implementation fails when a list is provided, requiring a set instead.",
      "package": "dagster-pandas",
      "file_name": "bug_report_dagster_pandas_categorical_column_2025-08-18_00-00_x7k9.md",
      "file_path": "opus-4.1/dagster-pandas/bug_reports/bug_report_dagster_pandas_categorical_column_2025-08-18_00-00_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dagster_postgres.utils Improper URL Encoding in get_conn_string",
      "target": "dagster_postgres.utils.get_conn_string",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `get_conn_string` function fails to properly encode special characters in usernames and passwords, causing malformed PostgreSQL connection URLs that break URL parsing and prevent database connections.",
      "package": "dagster-postgres",
      "file_name": "bug_report_dagster_postgres_utils_2025-08-19_02-48_9hat.md",
      "file_path": "opus-4.1/dagster-postgres/bug_reports/bug_report_dagster_postgres_utils_2025-08-19_02-48_9hat.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dagster_postgres.utils Improper URL Encoding of Passwords",
      "target": "dagster_postgres.utils.get_conn_string",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `get_conn_string` function improperly encodes passwords containing forward slashes (`/`), resulting in malformed PostgreSQL connection strings that cannot be correctly parsed.",
      "package": "dagster-postgres",
      "file_name": "bug_report_dagster_postgres_utils_2025-08-19_02-47_71i0.md",
      "file_path": "opus-4.1/dagster-postgres/bug_reports/bug_report_dagster_postgres_utils_2025-08-19_02-47_71i0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dagster_postgres.utils URL Generation Breaks with Special Characters in Passwords",
      "target": "dagster_postgres.utils.get_conn_string",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `get_conn_string` function incorrectly encodes passwords containing URL delimiter characters (`:`, `/`, `@`), resulting in malformed connection strings that cannot be parsed correctly.",
      "package": "dagster-postgres",
      "file_name": "bug_report_dagster_postgres_utils_2025-08-19_02-41_k3x9.md",
      "file_path": "opus-4.1/dagster-postgres/bug_reports/bug_report_dagster_postgres_utils_2025-08-19_02-41_k3x9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dagster_postgres.utils get_conn_string Special Character Handling",
      "target": "dagster_postgres.utils.get_conn_string",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-01-19",
      "summary": "The `get_conn_string` function incorrectly handles special characters in passwords, hostnames, and database names, producing malformed URLs that cannot be parsed or that lose data.",
      "package": "dagster-postgres",
      "file_name": "bug_report_dagster_postgres_utils_2025-01-19_03-45_x8k2.md",
      "file_path": "opus-4.1/dagster-postgres/bug_reports/bug_report_dagster_postgres_utils_2025-01-19_03-45_x8k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dagster_postgres.utils.get_conn_string URL Encoding Bug",
      "target": "dagster_postgres.utils.get_conn_string",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `get_conn_string` function fails to properly encode forward slashes in usernames and passwords, creating malformed PostgreSQL connection URLs that cannot be parsed correctly.",
      "package": "dagster-postgres",
      "file_name": "bug_report_dagster_postgres_utils_2025-08-19_00-00_x7f2.md",
      "file_path": "opus-4.1/dagster-postgres/bug_reports/bug_report_dagster_postgres_utils_2025-08-19_00-00_x7f2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dataclasses.asdict() Does Not Convert Sets/Frozensets to JSON-Serializable Types",
      "target": "dataclasses.asdict",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `asdict()` function preserves `set` and `frozenset` types instead of converting them to lists, making the resulting dictionary non-JSON-serializable, which breaks the common use case of serializing dataclass instances to JSON.",
      "package": "dataclasses",
      "file_name": "bug_report_dataclasses_asdict_2025-08-18_04-54_497z.md",
      "file_path": "opus-4.1/dataclasses/bug_reports/bug_report_dataclasses_asdict_2025-08-18_04-54_497z.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pattern_filter Incorrect Handling of Empty Lists",
      "target": "pattern_filter",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `pattern_filter` function incorrectly treats empty whitelist/blacklist arrays the same as `None`, violating expected filter semantics where an empty whitelist should reject all items.",
      "package": "datadog-checks-base",
      "file_name": "bug_report_pattern_filter_empty_list_2025-08-18_23-03_sase.md",
      "file_path": "opus-4.1/datadog-checks-base/bug_reports/bug_report_pattern_filter_empty_list_2025-08-18_23-03_sase.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "round_value Incorrect Handling of Negative Precision",
      "target": "round_value",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `round_value` function fails to correctly round numbers when given negative precision values. It should round to multiples of 10^(-precision) but instead returns the original value unchanged.",
      "package": "datadog-checks-base",
      "file_name": "bug_report_round_value_negative_precision_2025-08-18_23-03_htwx.md",
      "file_path": "opus-4.1/datadog-checks-base/bug_reports/bug_report_round_value_negative_precision_2025-08-18_23-03_htwx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "datetime.date Silently Discards Time Components from Timedelta",
      "target": "datetime.date.__add__",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "When adding a timedelta with time components (hours, minutes, seconds) to a date object, the time components are silently discarded, violating associativity and the principle of least surprise.",
      "package": "datetime",
      "file_name": "bug_report_datetime_date_timedelta_2025-08-18_04-50_9tns.md",
      "file_path": "opus-4.1/datetime/bug_reports/bug_report_datetime_date_timedelta_2025-08-18_04-50_9tns.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "decimal Modulo Operator Inconsistent with Python Integer Modulo",
      "target": "decimal.Decimal.__mod__",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The modulo operator (%) for `decimal.Decimal` uses truncated division semantics, while Python's built-in integer modulo uses Euclidean division semantics, leading to different results for negative operands.",
      "package": "decimal",
      "file_name": "bug_report_decimal_2025-08-18_04-56_3fqv.md",
      "file_path": "opus-4.1/decimal/bug_reports/bug_report_decimal_2025-08-18_04-56_3fqv.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.utils.super_len Inconsistent String Length Calculation",
      "target": "requests.utils.super_len",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `super_len()` function returns byte length instead of character length for strings when using urllib3 2.x+, making it inconsistent with Python's built-in `len()` function and its own behavior for other types.",
      "package": "decimal",
      "file_name": "bug_report_requests_utils_super_len_2025-08-18_04-51_8w79.md",
      "file_path": "opus-4.1/decimal/bug_reports/bug_report_requests_utils_super_len_2025-08-18_04-51_8w79.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "diskcache Cache.incr() and Cache.decr() fail with large integers",
      "target": "diskcache.Cache.incr()",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `Cache.incr()` and `Cache.decr()` methods fail when attempting to increment or decrement integer values that exceed SQLite's 64-bit signed integer range, resulting in either a TypeError or OverflowError.",
      "package": "diskcache",
      "file_name": "bug_report_diskcache_incr_2025-08-19_14-30_k3x9.md",
      "file_path": "opus-4.1/diskcache/bug_reports/bug_report_diskcache_incr_2025-08-19_14-30_k3x9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "diskcache Deque doesn't support slicing operations",
      "target": "diskcache.Deque.__getitem__",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `Deque` class inherits from `Sequence` but doesn't support slicing operations, resulting in a TypeError when attempting to slice a deque.",
      "package": "diskcache",
      "file_name": "bug_report_diskcache_deque_slicing_2025-08-19_14-45_m7n2.md",
      "file_path": "opus-4.1/diskcache/bug_reports/bug_report_diskcache_deque_slicing_2025-08-19_14-45_m7n2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "diskcache.core Text Storage Line Ending Corruption",
      "target": "diskcache.core.Disk",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The Disk class in diskcache.core corrupts text strings containing carriage return characters (`\\r`) when storing them to files, converting them to newline characters (`\\n`).",
      "package": "diskcache",
      "file_name": "bug_report_diskcache_core_2025-08-19_02-52_1bi4.md",
      "file_path": "opus-4.1/diskcache/bug_reports/bug_report_diskcache_core_2025-08-19_02-52_1bi4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "diskcache.fanout IndexError in Timeout Exception Handling",
      "target": "diskcache.fanout.FanoutCache._remove",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "FanoutCache._remove method assumes all Timeout exceptions contain a count in args[0], but some Timeout exceptions are raised without arguments, causing an IndexError.",
      "package": "diskcache",
      "file_name": "bug_report_diskcache_fanout_2025-08-19_02-44_a7b3.md",
      "file_path": "opus-4.1/diskcache/bug_reports/bug_report_diskcache_fanout_2025-08-19_02-44_a7b3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "diskcache.persistent.Index Equality Comparison Crashes with Non-Mapping Types",
      "target": "diskcache.persistent.Index",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "Index.__eq__ and Index.__ne__ methods raise TypeError when comparing with non-mapping types like integers, None, or floats, instead of returning False/True respectively.",
      "package": "diskcache",
      "file_name": "bug_report_diskcache_persistent_2025-08-19_02-48_gto0.md",
      "file_path": "opus-4.1/diskcache/bug_reports/bug_report_diskcache_persistent_2025-08-19_02-48_gto0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "diskcache.recipes.throttle Allows Extra Call Within Rate Limit Period",
      "target": "diskcache.recipes.throttle",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `throttle` decorator allows one extra function call within the rate limit period, violating its documented rate limiting contract. When configured for N calls per second, it actually allows N+1 calls in the first second.",
      "package": "diskcache",
      "file_name": "bug_report_diskcache_recipes_throttle_2025-08-19_02-50_w7vs.md",
      "file_path": "opus-4.1/diskcache/bug_reports/bug_report_diskcache_recipes_throttle_2025-08-19_02-50_w7vs.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "CaseInsensitiveMapping Fails with Unicode Case-Folding Edge Cases",
      "target": "django.utils.datastructures.CaseInsensitiveMapping",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "CaseInsensitiveMapping fails to handle Unicode characters with complex case mappings, such as German '\u00df' (which uppercases to 'SS') and Turkish '\u0131' (which uppercases to 'I'), breaking the promised case-insensitive lookups.",
      "package": "django",
      "file_name": "bug_report_django_utils_datastructures_CaseInsensitiveMapping_2025-08-18_18-59_ijtp.md",
      "file_path": "opus-4.1/django/bug_reports/bug_report_django_utils_datastructures_CaseInsensitiveMapping_2025-08-18_18-59_ijtp.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "django.apps.AppConfig.create IndexError with Trailing Dot",
      "target": "django.apps.AppConfig.create",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "`AppConfig.create()` crashes with `IndexError: string index out of range` when given a module path ending with a dot (e.g., `'django.contrib.auth.'`).",
      "package": "django",
      "file_name": "bug_report_django_apps_appconfig_create_2025-08-18_19-00_gpuf.md",
      "file_path": "opus-4.1/django/bug_reports/bug_report_django_apps_appconfig_create_2025-08-18_19-00_gpuf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "django.db.models.query_utils.subclasses TypeError with object class",
      "target": "django.db.models.query_utils.subclasses",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `subclasses` function raises a TypeError when called with the `object` class, failing to handle this special case of Python's type hierarchy.",
      "package": "django",
      "file_name": "bug_report_django_db_models_query_utils_subclasses_2025-08-18_18-57_nstw.md",
      "file_path": "opus-4.1/django/bug_reports/bug_report_django_db_models_query_utils_subclasses_2025-08-18_18-57_nstw.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "django.dispatch.Signal TypeError with Caching and Non-Weakrefable Senders",
      "target": "django.dispatch.Signal",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "Signal with `use_caching=True` crashes with TypeError when sending signals with non-weakrefable senders like plain `object()` instances, integers, strings, lists, or dictionaries.",
      "package": "django",
      "file_name": "bug_report_django_dispatch_2025-08-18_19-00_4apr.md",
      "file_path": "opus-4.1/django/bug_reports/bug_report_django_dispatch_2025-08-18_19-00_4apr.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "django.dispatch.Signal dispatch_uid Requires Matching Sender",
      "target": "django.dispatch.Signal.disconnect",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `dispatch_uid` parameter doesn't work as documented - it requires the sender to match even when a unique dispatch_uid is provided, defeating the purpose of dispatch_uid as a unique identifier.",
      "package": "django",
      "file_name": "bug_report_django_dispatch_2025-08-18_19-00_pnzn.md",
      "file_path": "opus-4.1/django/bug_reports/bug_report_django_dispatch_2025-08-18_19-00_pnzn.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "django.forms.BooleanField Counterintuitive String Interpretation  ",
      "target": "django.forms.BooleanField",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "BooleanField.clean() interprets the strings 'no' and 'off' as True, which is counterintuitive and inconsistent with user expectations for these common negative terms.",
      "package": "django",
      "file_name": "bug_report_django_forms_booleanfield_2025-08-18_18-58_k3x9.md",
      "file_path": "opus-4.1/django/bug_reports/bug_report_django_forms_booleanfield_2025-08-18_18-58_k3x9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "django.forms.JSONField Empty Collection Becomes None",
      "target": "django.forms.JSONField",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "JSONField.clean() incorrectly converts empty Python collections ([] and {}) to None when they are passed directly as Python objects, breaking round-trip properties.",
      "package": "django",
      "file_name": "bug_report_django_forms_jsonfield_2025-08-18_18-58_rr74.md",
      "file_path": "opus-4.1/django/bug_reports/bug_report_django_forms_jsonfield_2025-08-18_18-58_rr74.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "django.http.parse_cookie Data Loss with Whitespace Values",
      "target": "django.http.parse_cookie",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `parse_cookie` function incorrectly strips all whitespace-only values to empty strings, causing data loss for cookies containing only whitespace characters including non-breaking spaces.",
      "package": "django",
      "file_name": "bug_report_django_http_parse_cookie_2025-08-18_18-57_nofw.md",
      "file_path": "opus-4.1/django/bug_reports/bug_report_django_http_parse_cookie_2025-08-18_18-57_nofw.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "django.middleware.csrf _unmask_cipher_token Contract Violation",
      "target": "django.middleware.csrf._unmask_cipher_token",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The internal function `_unmask_cipher_token` returns wrong-length results for invalid inputs instead of validating input and raising an exception, violating defensive programming principles and its implicit contract.",
      "package": "django",
      "file_name": "bug_report_django_middleware_csrf_2025-08-18_18-58_2zgm.md",
      "file_path": "opus-4.1/django/bug_reports/bug_report_django_middleware_csrf_2025-08-18_18-58_2zgm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "django.shortcuts resolve_url Returns None When get_absolute_url Returns None",
      "target": "django.shortcuts.resolve_url",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "When an object's `get_absolute_url()` method returns `None`, `resolve_url()` passes it through unchanged, causing `redirect()` to create a Location header with the literal string \"None\".",
      "package": "django",
      "file_name": "bug_report_django_shortcuts_2025-08-18_10-45_x3f9.md",
      "file_path": "opus-4.1/django/bug_reports/bug_report_django_shortcuts_2025-08-18_10-45_x3f9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "django.templatetags.cache Cache Key Collision",
      "target": "django.templatetags.cache.make_template_fragment_key",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `make_template_fragment_key` function generates identical cache keys for different `vary_on` inputs when one input contains the separator character (colon) used internally by the function.",
      "package": "django",
      "file_name": "bug_report_django_templatetags_cache_2025-08-18_18-58_hvch.md",
      "file_path": "opus-4.1/django/bug_reports/bug_report_django_templatetags_cache_2025-08-18_18-58_hvch.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "django.urls.converters Inconsistent to_url() Return Types",
      "target": "django.urls.converters",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "StringConverter, SlugConverter, and PathConverter's `to_url()` methods do not convert non-string inputs to strings, returning them unchanged, while IntConverter and UUIDConverter correctly convert to strings.",
      "package": "django",
      "file_name": "bug_report_django_urls_converters_2025-08-18_18-57_b8mz.md",
      "file_path": "opus-4.1/django/bug_reports/bug_report_django_urls_converters_2025-08-18_18-57_b8mz.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "django.utils.encoding IRI/URI Round-Trip Failure",
      "target": "django.utils.encoding.iri_to_uri",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The IRI to URI conversion functions do not properly round-trip for many ASCII characters. Characters like quotes, spaces, and brackets get percent-encoded by `iri_to_uri` but are not decoded back by `uri_to_iri`.",
      "package": "django",
      "file_name": "bug_report_django_utils_encoding_2025-08-18_18-59_16tj.md",
      "file_path": "opus-4.1/django/bug_reports/bug_report_django_utils_encoding_2025-08-18_18-59_16tj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "django.utils.encoding.escape_uri_path Non-Idempotent Escaping",
      "target": "django.utils.encoding.escape_uri_path",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `escape_uri_path` function incorrectly re-escapes already-escaped URI paths, causing exponential growth of escape sequences when called multiple times.",
      "package": "django",
      "file_name": "bug_report_django_utils_encoding_escape_uri_path_2025-08-18_18-56_nvec.md",
      "file_path": "opus-4.1/django/bug_reports/bug_report_django_utils_encoding_escape_uri_path_2025-08-18_18-56_nvec.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "log_request_id Thread-Local Pollution",
      "target": "log_request_id.middleware.RequestIDMiddleware",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-01-18",
      "summary": "The RequestIDMiddleware fails to clean up `local.request_id` when `LOG_REQUESTS=False`, causing request IDs to leak into subsequent logging outside of request contexts.",
      "package": "django-log-request-id",
      "file_name": "bug_report_log_request_id_2025-01-18_12-30_k3n9.md",
      "file_path": "opus-4.1/django-log-request-id/bug_reports/bug_report_log_request_id_2025-01-18_12-30_k3n9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "log_request_id.filters Unhandled Exceptions in RequestIDFilter",
      "target": "log_request_id.filters.RequestIDFilter",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "RequestIDFilter.filter() crashes with unhandled exceptions when the local object's request_id attribute raises an exception during access, causing logging to fail entirely.",
      "package": "django-log-request-id",
      "file_name": "bug_report_log_request_id_filters_2025-08-18_23-02_c940.md",
      "file_path": "opus-4.1/django-log-request-id/bug_reports/bug_report_log_request_id_filters_2025-08-18_23-02_c940.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "log_request_id.middleware Non-ASCII Header Name Crash",
      "target": "log_request_id.middleware.RequestIDMiddleware",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The RequestIDMiddleware crashes with UnicodeEncodeError when REQUEST_ID_RESPONSE_HEADER setting contains non-ASCII characters.",
      "package": "django-log-request-id",
      "file_name": "bug_report_log_request_id_middleware_2025-08-18_21-52_b7x3.md",
      "file_path": "opus-4.1/django-log-request-id/bug_reports/bug_report_log_request_id_middleware_2025-08-18_21-52_b7x3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "log_request_id.middleware Non-ASCII Request ID Mangling",
      "target": "log_request_id.middleware.RequestIDMiddleware",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The RequestIDMiddleware mangles non-ASCII request IDs when setting them as response headers, breaking request tracing across services that use non-ASCII identifiers.",
      "package": "django-log-request-id",
      "file_name": "bug_report_log_request_id_middleware_2025-08-18_21-52_qkiq.md",
      "file_path": "opus-4.1/django-log-request-id/bug_reports/bug_report_log_request_id_middleware_2025-08-18_21-52_qkiq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "simple_history.management.commands.clean_duplicate_history Missing Attribute Initialization",
      "target": "simple_history.management.commands.clean_duplicate_history.Command",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `Command` class in `clean_duplicate_history.py` has methods that assume certain instance attributes exist (`excluded_fields` and `base_manager`), but these attributes are only initialized in the `handle()` method, causing AttributeError when methods are called directly.",
      "package": "django-simple-history",
      "file_name": "bug_report_simple_history_management_commands_clean_duplicate_history_2025-08-18_23-35_lxw7.md",
      "file_path": "opus-4.1/django-simple-history/bug_reports/bug_report_simple_history_management_commands_clean_duplicate_history_2025-08-18_23-35_lxw7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "simple_history.middleware Nested Context Manager Bug",
      "target": "simple_history.middleware._context_manager",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_context_manager` function in django-simple-history doesn't properly handle nested contexts, causing outer context to be lost when inner context exits.",
      "package": "django-simple-history",
      "file_name": "bug_report_simple_history_middleware_2025-08-18_23-35_3x0g.md",
      "file_path": "opus-4.1/django-simple-history/bug_reports/bug_report_simple_history_middleware_2025-08-18_23-35_3x0g.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "simple_history.models transform_field AttributeError",
      "target": "simple_history.models.transform_field",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `transform_field` function crashes with AttributeError when called on Django field objects that are not attached to a model, as these fields lack the `attname` attribute.",
      "package": "django-simple-history",
      "file_name": "bug_report_simple_history_models_2025-08-18_23-37_z841.md",
      "file_path": "opus-4.1/django-simple-history/bug_reports/bug_report_simple_history_models_2025-08-18_23-37_z841.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "simple_history.template_utils ObjDiffDisplay Assertion Error with Small max_length Values",
      "target": "simple_history.template_utils.ObjDiffDisplay",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "ObjDiffDisplay.__init__ raises AssertionError when max_length < 39 with default parameters, preventing users from setting small display limits for historical change diffs.",
      "package": "django-simple-history",
      "file_name": "bug_report_simple_history_template_utils_2025-08-18_14-30_xk9f.md",
      "file_path": "opus-4.1/django-simple-history/bug_reports/bug_report_simple_history_template_utils_2025-08-18_14-30_xk9f.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "simple_history.template_utils ObjDiffDisplay AssertionError with Small max_length",
      "target": "simple_history.template_utils.ObjDiffDisplay",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "ObjDiffDisplay raises an AssertionError when initialized with max_length < 39 using default parameters, instead of handling small values gracefully or providing a descriptive error.",
      "package": "django-simple-history",
      "file_name": "bug_report_simple_history_template_utils_2025-08-18_23-35_v74j.md",
      "file_path": "opus-4.1/django-simple-history/bug_reports/bug_report_simple_history_template_utils_2025-08-18_23-35_v74j.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "simple_history.utils TypeError with None Primary Key Name",
      "target": "simple_history.utils.get_app_model_primary_key_name",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `get_app_model_primary_key_name` function crashes with a TypeError when a model has a ForeignKey primary key with `None` as its name, attempting to concatenate `None + \"_id\"`.",
      "package": "django-simple-history",
      "file_name": "bug_report_simple_history_utils_2025-08-18_23-39_6yhr.md",
      "file_path": "opus-4.1/django-simple-history/bug_reports/bug_report_simple_history_utils_2025-08-18_23-39_6yhr.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "rest_framework_api_key.crypto Round-Trip Failure with Dots",
      "target": "rest_framework_api_key.crypto.concatenate",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `concatenate` and `split` functions in `rest_framework_api_key.crypto` fail to round-trip correctly when the left part contains a dot character, violating the invariant that `split(concatenate(left, right))` should equal `(left, right)`.",
      "package": "djangorestframework-api-key",
      "file_name": "bug_report_rest_framework_api_key_crypto_2025-08-19_03-01_ih1u.md",
      "file_path": "opus-4.1/djangorestframework-api-key/bug_reports/bug_report_rest_framework_api_key_crypto_2025-08-19_03-01_ih1u.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "rest_framework_api_key.crypto Round-Trip Property Violation",
      "target": "rest_framework_api_key.crypto.concatenate",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `split` function fails to correctly inverse the `concatenate` function when the left part contains dots, violating the fundamental round-trip property that `split(concatenate(left, right))` should equal `(left, right)`.",
      "package": "djangorestframework-api-key",
      "file_name": "bug_report_rest_framework_api_key_crypto_2025-08-19_03-02_03u0.md",
      "file_path": "opus-4.1/djangorestframework-api-key/bug_reports/bug_report_rest_framework_api_key_crypto_2025-08-19_03-02_03u0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "DependencyFile Serialization Round-Trip Failure",
      "target": "dparse.dependencies.DependencyFile",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `DependencyFile.deserialize()` method fails with a TypeError when attempting to deserialize data that was created by `DependencyFile.serialize()`, breaking the expected round-trip functionality.",
      "package": "dparse",
      "file_name": "bug_report_dparse_dependencies_2025-08-18_14-30_a7f2.md",
      "file_path": "opus-4.1/dparse/bug_reports/bug_report_dparse_dependencies_2025-08-18_14-30_a7f2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dparse Hash Regex Cannot Parse Base64 Hashes",
      "target": "dparse.regex.HASH_REGEX",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-01-18",
      "summary": "The hash regex pattern in dparse fails to match valid pip hash values that use base64 encoding, which commonly contain characters like `+`, `/`, and `=` that are not matched by the `\\w+` pattern.",
      "package": "dparse",
      "file_name": "bug_report_dparse_hash_regex_2025-01-18_07-33_x9k2.md",
      "file_path": "opus-4.1/dparse/bug_reports/bug_report_dparse_hash_regex_2025-01-18_07-33_x9k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dparse.dependencies Incorrect full_name Formatting When extras Is String",
      "target": "dparse.dependencies.Dependency",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `Dependency.full_name` property incorrectly formats package names when `extras` is passed as a string instead of a list, treating the string as an iterable of characters and joining them with commas.",
      "package": "dparse",
      "file_name": "bug_report_dparse_dependencies_2025-08-18_23-02_8m0d.md",
      "file_path": "opus-4.1/dparse/bug_reports/bug_report_dparse_dependencies_2025-08-18_23-02_8m0d.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dparse.parser.SetupCfgParser AttributeError on String Section",
      "target": "dparse.parser.SetupCfgParser",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "SetupCfgParser crashes with AttributeError when parsing any setup.cfg file due to incorrectly treating a string variable as an object with attributes.",
      "package": "dparse",
      "file_name": "bug_report_dparse_parser_2025-08-18_12-00_x7k3.md",
      "file_path": "opus-4.1/dparse/bug_reports/bug_report_dparse_parser_2025-08-18_12-00_x7k3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dparse.parser.SetupCfgParser Typo in Option Name",
      "target": "dparse.parser.SetupCfgParser",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "SetupCfgParser looks for 'test_require' instead of the correct 'tests_require' option, causing it to miss test dependencies in setup.cfg files.",
      "package": "dparse",
      "file_name": "bug_report_dparse_parser_2025-08-18_12-05_m9p2.md",
      "file_path": "opus-4.1/dparse/bug_reports/bug_report_dparse_parser_2025-08-18_12-05_m9p2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dparse.regex Incorrectly Matches Pipe Separator in Hash Specifications",
      "target": "dparse.regex.HASH_REGEX",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The regex pattern `HASH_REGEX = r\"--hash[=| ]\\w+:\\w+\"` incorrectly matches pipe `|` as a separator between `--hash` and the algorithm name, which is not a valid format according to pip's specification.",
      "package": "dparse",
      "file_name": "bug_report_dparse_regex_2025-08-18_22-20_tjj4.md",
      "file_path": "opus-4.1/dparse/bug_reports/bug_report_dparse_regex_2025-08-18_22-20_tjj4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dparse.updater Whitespace Preservation Issues",
      "target": "dparse.updater.RequirementsTXTUpdater",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "RequirementsTXTUpdater has two whitespace preservation bugs: (1) it reverses the order of mixed whitespace characters before comments, and (2) it strips trailing spaces from environment markers.",
      "package": "dparse",
      "file_name": "bug_report_dparse_updater_2025-08-18_14-30_a7f2.md",
      "file_path": "opus-4.1/dparse/bug_reports/bug_report_dparse_updater_2025-08-18_14-30_a7f2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "esp_idf_monitor LineMatcher fails to match tags with leading/trailing spaces",
      "target": "esp_idf_monitor.base.line_matcher.LineMatcher",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "LineMatcher incorrectly handles filter tags containing leading or trailing spaces. The filter parsing strips whitespace from tags during initialization, but the regex preserves spaces when extracting tags from log lines, causing legitimate matches to fail.",
      "package": "esp-idf-monitor",
      "file_name": "bug_report_esp_idf_monitor_line_matcher_2025-08-19_02-59_iab3.md",
      "file_path": "opus-4.1/esp-idf-monitor/bug_reports/bug_report_esp_idf_monitor_line_matcher_2025-08-19_02-59_iab3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "esp_idf_monitor.base.binlog Incorrect Octal Formatting for Zero",
      "target": "esp_idf_monitor.base.binlog.ArgFormatter",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The ArgFormatter incorrectly formats zero with the alternate octal form (`%#o`), producing \"00\" instead of the expected \"0\".",
      "package": "esp-idf-monitor",
      "file_name": "bug_report_esp_idf_monitor_base_binlog_2025-08-19_02-54_jmjv.md",
      "file_path": "opus-4.1/esp-idf-monitor/bug_reports/bug_report_esp_idf_monitor_base_binlog_2025-08-19_02-54_jmjv.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Fire Parser Fails to Parse YAML-like Dicts with Python Keywords",
      "target": "fire.parser.DefaultParseValue",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Fire's YAML-like dict parsing fails when keys are Python keywords (e.g., 'as', 'if', 'for'), returning the input as a string instead of parsing it as a dictionary.",
      "package": "fire",
      "file_name": "bug_report_fire_parser_2025-08-18_22-19_31tb.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_parser_2025-08-18_22-19_31tb.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.completion Dictionary Key Transformation",
      "target": "fire.completion.Completions",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `Completions` function incorrectly transforms dictionary keys containing underscores to use hyphens, preventing proper tab completion for dictionary access.",
      "package": "fire",
      "file_name": "bug_report_fire_completion_2025-08-18_22-28_wy3z.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_completion_2025-08-18_22-28_wy3z.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.console.files Cross-Platform Path Separator Handling",
      "target": "fire.console.files.FindExecutableOnPath",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "`FindExecutableOnPath` fails to reject executables containing backslash path separators on Unix systems, violating its documented contract that executables \"must not have a path.\"",
      "package": "fire",
      "file_name": "bug_report_fire_console_files_2025-08-18_22-18_u9xm.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_console_files_2025-08-18_22-18_u9xm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.core Flag Detection Functions Return None Instead of Boolean",
      "target": "fire.core._IsFlag",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The flag detection functions in fire.core return None instead of False for many inputs, violating the expected boolean return type indicated by their docstrings and names.",
      "package": "fire",
      "file_name": "bug_report_fire_core_2025-08-18_22-31_z2rz.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_core_2025-08-18_22-31_z2rz.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.core _IsFlag Functions Return Inconsistent Types",
      "target": "fire.core._IsFlag",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `_IsFlag`, `_IsSingleCharFlag`, and `_IsMultiCharFlag` functions in fire.core return inconsistent types (None, Match objects, or bool) instead of consistently returning boolean values as their names and docstrings suggest.",
      "package": "fire",
      "file_name": "bug_report_fire_core_2025-08-18_22-22_5b5x.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_core_2025-08-18_22-22_5b5x.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.custom_descriptions Content Loss in String Truncation",
      "target": "fire.custom_descriptions",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `EllipsisTruncate` function loses all string content when `available_space=3`, returning just \"...\" instead of preserving at least some characters from the original string.",
      "package": "fire",
      "file_name": "bug_report_fire_custom_descriptions_2025-08-18_22-33_j6zk.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_custom_descriptions_2025-08-18_22-33_j6zk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.decorators SetParseFns Type Inconsistency",
      "target": "fire.decorators.SetParseFns",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "SetParseFns converts list inputs to tuples, breaking the round-trip property where retrieved values should match the input type.",
      "package": "fire",
      "file_name": "bug_report_fire_decorators_2025-08-18_22-22_bn86.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_decorators_2025-08-18_22-22_bn86.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.decorators Type Inconsistency in SetParseFns",
      "target": "fire.decorators.SetParseFns",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `SetParseFns` decorator creates a tuple for positional arguments while `GetParseFns` default returns a list, causing type inconsistency in the API.",
      "package": "fire",
      "file_name": "bug_report_fire_decorators_2025-08-18_12-00_x7k9.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_decorators_2025-08-18_12-00_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.docstrings API Inconsistency in Empty Sections",
      "target": "fire.docstrings._join_lines",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `_join_lines` function returns an empty string `''` for lists containing only blank lines, but returns `None` for empty lists, causing API inconsistency where empty docstring sections return `''` instead of `None`.",
      "package": "fire",
      "file_name": "bug_report_fire_docstrings_2025-08-18_22-25_theo.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_docstrings_2025-08-18_22-25_theo.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.docstrings Type Inconsistency in _line_is_hyphens",
      "target": "fire.docstrings._line_is_hyphens",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `_line_is_hyphens` function returns an empty string `''` instead of `False` when given an empty string input, violating its contract to return a boolean.",
      "package": "fire",
      "file_name": "bug_report_fire_docstrings_2025-08-18_15-45_j8k2.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_docstrings_2025-08-18_15-45_j8k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.formatting Ellipsis Functions Incorrectly Handle Small available_space",
      "target": "fire.formatting.EllipsisTruncate",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "EllipsisTruncate and EllipsisMiddleTruncate incorrectly truncate text when available_space is less than the ellipsis length, even after resetting available_space to line_length.",
      "package": "fire",
      "file_name": "bug_report_fire_formatting_ellipsistruncate_2025-08-18_22-30_zbls.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_formatting_ellipsistruncate_2025-08-18_22-30_zbls.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.formatting.EllipsisMiddleTruncate Length Violation",
      "target": "fire.formatting.EllipsisMiddleTruncate",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-01-18",
      "summary": "The `EllipsisMiddleTruncate` function violates its length contract when `available_space < 3`, returning text longer than the requested space instead of properly truncating it.",
      "package": "fire",
      "file_name": "bug_report_fire_EllipsisMiddleTruncate_2025-01-18_21-55_x7k2.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_EllipsisMiddleTruncate_2025-01-18_21-55_x7k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.formatting.EllipsisTruncate Line Length Violation",
      "target": "fire.formatting.EllipsisTruncate",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `EllipsisTruncate` function violates its contract by returning text longer than the `line_length` parameter when `line_length` is smaller than the ellipsis string (\"...\").",
      "package": "fire",
      "file_name": "bug_report_fire_formatting_EllipsisTruncate_2025-08-18_22-33_66ge.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_formatting_EllipsisTruncate_2025-08-18_22-33_66ge.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.formatting.WrappedJoin Exceeds Width Limit",
      "target": "fire.formatting.WrappedJoin",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "WrappedJoin produces lines that exceed the specified width limit when an individual item is longer than the width.",
      "package": "fire",
      "file_name": "bug_report_fire_formatting_wrappedjoin_2025-08-18_22-30_2erl.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_formatting_wrappedjoin_2025-08-18_22-30_2erl.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.formatting.WrappedJoin Strips Trailing Whitespace from Separator",
      "target": "fire.formatting.WrappedJoin",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `WrappedJoin` function incorrectly strips trailing whitespace from separators when wrapping text across multiple lines, changing separators like `' | '` to `' |'`.",
      "package": "fire",
      "file_name": "bug_report_fire_formatting_wrappedJoin_2025-08-18_22-31_nncq.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_formatting_wrappedJoin_2025-08-18_22-31_nncq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.formatting.WrappedJoin Width Constraint Violation",
      "target": "fire.formatting.WrappedJoin",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `WrappedJoin` function fails to respect the width constraint when individual items are longer than the specified width, violating its documented purpose of wrapping lines at the given width.",
      "package": "fire",
      "file_name": "bug_report_fire_formatting_WrappedJoin_2025-08-18_22-33_gwyt.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_formatting_WrappedJoin_2025-08-18_22-33_gwyt.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.formatting.WrappedJoin produces empty first line when items exceed width",
      "target": "fire.formatting.WrappedJoin",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "WrappedJoin produces an empty first line when the first item exceeds the specified width, causing incorrect formatting in help text output.",
      "package": "fire",
      "file_name": "bug_report_fire_formatting_2025-08-18_10-30_x7k9.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_formatting_2025-08-18_10-30_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.helptext._GetShortFlags IndexError on Empty Strings",
      "target": "fire.helptext._GetShortFlags",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `_GetShortFlags` function crashes with an IndexError when the input list contains empty strings.",
      "package": "fire",
      "file_name": "bug_report_fire_helptext__GetShortFlags_2025-08-18_22-33_u4sz.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_helptext__GetShortFlags_2025-08-18_22-33_u4sz.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.inspectutils Duplicate code in Py3GetFullArgSpec",
      "target": "fire.inspectutils.Py3GetFullArgSpec",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `Py3GetFullArgSpec()` function contains a duplicate line of code that assigns `defaults = ()` twice, which is redundant and potentially confusing.",
      "package": "fire",
      "file_name": "bug_report_fire_inspectutils_2025-08-18_22-32_dup1.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_inspectutils_2025-08-18_22-32_dup1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.inspectutils GetFullArgSpec Fails with Metaclass __call__",
      "target": "fire.inspectutils.GetFullArgSpec",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "GetFullArgSpec fails to extract __init__ parameters from classes that have a metaclass overriding __call__, returning generic *args/**kwargs instead.",
      "package": "fire",
      "file_name": "bug_report_fire_inspectutils_2025-08-18_22-45_cipj.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_inspectutils_2025-08-18_22-45_cipj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.inspectutils Info() crashes on objects with failing __str__ methods",
      "target": "fire.inspectutils.Info",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `Info()` function crashes when called on objects whose `__str__()` method raises an exception, causing an unhandled exception instead of gracefully handling the error.",
      "package": "fire",
      "file_name": "bug_report_fire_inspectutils_2025-08-18_22-32_9yq6.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_inspectutils_2025-08-18_22-32_9yq6.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.interact Comma in Variable Names Breaks Output Parsing",
      "target": "fire.interact._AvailableString",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_AvailableString` function in `fire.interact` uses commas as separators in its output without escaping or filtering variable names containing commas, creating ambiguous output that cannot be reliably parsed.",
      "package": "fire",
      "file_name": "bug_report_fire_interact_2025-08-18_22-32_0agf.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_interact_2025-08-18_22-32_0agf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.interact Empty String Key Causes Malformed Output",
      "target": "fire.interact._AvailableString",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_AvailableString` function in fire.interact incorrectly handles empty string keys in the variables dictionary, causing malformed output with extra commas.",
      "package": "fire",
      "file_name": "bug_report_fire_interact_2025-08-18_22-34_qoyj.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_interact_2025-08-18_22-34_qoyj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.parser Leading Whitespace Parsing Failure",
      "target": "fire.parser.DefaultParseValue",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `DefaultParseValue` function in fire.parser fails to parse values with leading whitespace, incorrectly returning them as strings instead of parsing them to their appropriate Python types.",
      "package": "fire",
      "file_name": "bug_report_fire_parser_2025-08-18_22-38_azm6.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_parser_2025-08-18_22-38_azm6.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.parser Unicode Character Corruption",
      "target": "fire.parser.DefaultParseValue",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "DefaultParseValue silently corrupts the micro sign (\u00b5 U+00B5) by converting it to Greek mu (\u03bc U+03BC), violating the documented behavior that simple strings pass through unchanged.",
      "package": "fire",
      "file_name": "bug_report_fire_parser_2025-08-18_22-37_hkdj.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_parser_2025-08-18_22-37_hkdj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.parser.DefaultParseValue Unicode Surrogate Pair Handling",
      "target": "fire.parser.DefaultParseValue",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "DefaultParseValue incorrectly handles Unicode characters outside the Basic Multilingual Plane (BMP) when parsing JSON strings, keeping surrogate pairs as literal strings instead of decoding them to the original characters.",
      "package": "fire",
      "file_name": "bug_report_fire_parser_DefaultParseValue_2025-08-18_22-33_ax62.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_parser_DefaultParseValue_2025-08-18_22-33_ax62.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.test_components.BinaryCanvas Accepts Invalid Sizes",
      "target": "fire.test_components.BinaryCanvas",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "BinaryCanvas constructor accepts negative and zero size values without validation, creating an invalid canvas state that causes crashes when using canvas methods.",
      "package": "fire",
      "file_name": "bug_report_fire_test_components_BinaryCanvas_2025-08-18_22-39_aqv4.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_test_components_BinaryCanvas_2025-08-18_22-39_aqv4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.test_components.BinaryCanvas Invalid Size Handling",
      "target": "fire.test_components.BinaryCanvas",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "BinaryCanvas constructor accepts invalid sizes (0 and negative values) but methods crash when called on these instances, causing ZeroDivisionError and IndexError exceptions.",
      "package": "fire",
      "file_name": "bug_report_fire_test_components_BinaryCanvas_2025-08-18_22-39_ewyh.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_test_components_BinaryCanvas_2025-08-18_22-39_ewyh.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.test_components.VarArgs.cumsums Mutable Reference Bug",
      "target": "fire.test_components.VarArgs.cumsums",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `cumsums` method incorrectly shares the same mutable object across all cumulative results when processing mutable types like lists, causing all elements in the result to be identical references to the final accumulated value.",
      "package": "fire",
      "file_name": "bug_report_fire_test_components_varargs_cumsums_2025-08-18_22-39_wb1r.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_test_components_varargs_cumsums_2025-08-18_22-39_wb1r.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.test_components_py3 LRU Cache Functions Crash on Unhashable Inputs",
      "target": "fire.test_components_py3.lru_cache_decorated",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "LRU cache decorated functions crash with TypeError when called with unhashable arguments like lists or dictionaries, instead of gracefully handling or documenting this limitation.",
      "package": "fire",
      "file_name": "bug_report_fire_test_components_py3_2025-08-18_22-34_dsla.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_test_components_py3_2025-08-18_22-34_dsla.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.trace IndexError in GetLastHealthyElement with Empty Trace",
      "target": "fire.trace.FireTrace.GetLastHealthyElement",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `GetLastHealthyElement` method in `fire.trace.FireTrace` raises an `IndexError` when called on an empty trace (no elements), violating its documented assumption that \"the initial element is always healthy.\"",
      "package": "fire",
      "file_name": "bug_report_fire_trace_2025-08-18_22-41_xzyb.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_trace_2025-08-18_22-41_xzyb.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.trace.FireTrace HasError() Returns False After Adding Element Following Error",
      "target": "fire.trace.FireTrace.HasError",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `HasError()` method incorrectly returns `False` after adding a new element to the trace following an error, violating the expected invariant that once an error is added to a trace, `HasError()` should always return `True`.",
      "package": "fire",
      "file_name": "bug_report_fire_trace_HasError_2025-08-18_22-39_w958.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_trace_HasError_2025-08-18_22-39_w958.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fire.value_types Documentation Contract Violation in HasCustomStr",
      "target": "fire.value_types.HasCustomStr",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `HasCustomStr` function's docstring claims that primitives like ints and floats have custom `__str__` methods, but the implementation returns `False` for these types.",
      "package": "fire",
      "file_name": "bug_report_fire_value_types_2025-08-18_22-38_lbds.md",
      "file_path": "opus-4.1/fire/bug_reports/bug_report_fire_value_types_2025-08-18_22-38_lbds.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "FixitRemoveRuleSuffix Creates Invalid Python with Reserved Keywords",
      "target": "fixit.upgrade.remove_rule_suffix.FixitRemoveRuleSuffix",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The FixitRemoveRuleSuffix lint rule removes \"Rule\" suffix from class names without checking if the resulting name is a Python reserved keyword, producing syntactically invalid code.",
      "package": "fixit",
      "file_name": "bug_report_fixit_upgrade_remove_rule_suffix_2025-08-18_23-12_j3xr.md",
      "file_path": "opus-4.1/fixit/bug_reports/bug_report_fixit_upgrade_remove_rule_suffix_2025-08-18_23-12_j3xr.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fixit QualifiedRuleRegex Accepts Invalid Python Module Names",
      "target": "fixit.ftypes.QualifiedRuleRegex",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The QualifiedRuleRegex pattern incorrectly accepts module names that start with digits (e.g., \"123module\", \"999rules\"), which are invalid Python identifiers and cannot be imported.",
      "package": "fixit",
      "file_name": "bug_report_fixit_qualifiedruleregex_2025-08-18_23-10_k3j7.md",
      "file_path": "opus-4.1/fixit/bug_reports/bug_report_fixit_qualifiedruleregex_2025-08-18_23-10_k3j7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fixit.api Type Annotation Mismatch in print_result",
      "target": "fixit.api.print_result",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `print_result` function has a type annotation that claims to return `int`, but the docstring and implementation clearly return boolean values (`True`/`False`).",
      "package": "fixit",
      "file_name": "bug_report_fixit_api_2025-08-18_23-00_x7k2.md",
      "file_path": "opus-4.1/fixit/bug_reports/bug_report_fixit_api_2025-08-18_23-00_x7k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fixit.engine Carriage Return Handling",
      "target": "fixit.engine.LintRunner",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "LintRunner fails to preserve carriage return (`\\r`) characters when they appear standalone or as trailing whitespace, violating the idempotence property of apply_replacements.",
      "package": "fixit",
      "file_name": "bug_report_fixit_engine_2025-08-18_23-12_qoqr.md",
      "file_path": "opus-4.1/fixit/bug_reports/bug_report_fixit_engine_2025-08-18_23-12_qoqr.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fixit.ftypes LintIgnoreRegex Silently Ignores All Rules on Malformed Input",
      "target": "fixit.ftypes.LintIgnoreRegex",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The LintIgnoreRegex fails to properly handle rule names that start with non-word characters, causing malformed lint directives to silently ignore ALL rules instead of none.",
      "package": "fixit",
      "file_name": "bug_report_fixit_ftypes_2025-08-18_23-10_tenm.md",
      "file_path": "opus-4.1/fixit/bug_reports/bug_report_fixit_ftypes_2025-08-18_23-10_tenm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fixit.ftypes Tags.parse() crashes on whitespace-only input",
      "target": "fixit.ftypes.Tags.parse",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `Tags.parse()` method raises an `IndexError` when given a string containing only whitespace or comma-separated whitespace, failing to handle edge cases that produce empty tokens after splitting and stripping.",
      "package": "fixit",
      "file_name": "bug_report_fixit_ftypes_2025-08-18_23-11_wt9n.md",
      "file_path": "opus-4.1/fixit/bug_reports/bug_report_fixit_ftypes_2025-08-18_23-11_wt9n.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fixit.ftypes.Tags.parse IndexError on Empty Tokens",
      "target": "fixit.ftypes.Tags.parse",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `Tags.parse()` method crashes with an IndexError when processing strings that contain empty tokens after splitting by comma, such as a single comma \",\", multiple commas \",,\", or whitespace-only strings.",
      "package": "fixit",
      "file_name": "bug_report_fixit_Tags_parse_2025-08-18_23-09_vr9p.md",
      "file_path": "opus-4.1/fixit/bug_reports/bug_report_fixit_Tags_parse_2025-08-18_23-09_vr9p.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fixit.ftypes.Tags.parse IndexError on Whitespace Input",
      "target": "fixit.ftypes.Tags.parse",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `Tags.parse()` static method crashes with an IndexError when given input strings that contain only whitespace or result in empty tokens after splitting and stripping.",
      "package": "fixit",
      "file_name": "bug_report_fixit_ftypes_Tags_parse_2025-08-18_23-09_bnor.md",
      "file_path": "opus-4.1/fixit/bug_reports/bug_report_fixit_ftypes_Tags_parse_2025-08-18_23-09_bnor.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "fixit.rules.compare_singleton_primitives_by_is Crashes on Code Without Spaces",
      "target": "fixit.rules.compare_singleton_primitives_by_is.CompareSingletonPrimitivesByIs",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The CompareSingletonPrimitivesByIs rule crashes with a CSTValidationError when processing comparisons that don't have spaces around the operator (e.g., `x==None`).",
      "package": "fixit",
      "file_name": "bug_report_fixit_rules_compare_singleton_primitives_by_is_2025-08-18_00-00_x7b2.md",
      "file_path": "opus-4.1/fixit/bug_reports/bug_report_fixit_rules_compare_singleton_primitives_by_is_2025-08-18_00-00_x7b2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Flask/Werkzeug Request Silently Strips Whitespace from URL Paths",
      "target": "flask.Request",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "Flask/Werkzeug's Request object silently strips tab (\\t), newline (\\n), and carriage return (\\r) characters from URL paths while preserving spaces and other special characters, creating inconsistent behavior.",
      "package": "flask",
      "file_name": "bug_report_flask_request_path_2025-08-19_00-11_03gy.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_request_path_2025-08-19_00-11_03gy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.abort() Raises LookupError for Non-Error HTTP Status Codes",
      "target": "flask.abort",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "flask.abort() raises LookupError for valid HTTP status codes outside the 4xx and 5xx ranges, despite documentation suggesting it should work for any status code.",
      "package": "flask",
      "file_name": "bug_report_flask_abort_2025-08-19_00-06_9cvv.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_abort_2025-08-19_00-06_9cvv.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.app URL Rule Parameter Names Cannot Be Python Constants",
      "target": "flask.app.Flask.add_url_rule",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Flask/Werkzeug fails with an unclear error when trying to use Python constants (`False`, `True`, `None`) as parameter names in URL rules, while other Python keywords work fine.",
      "package": "flask",
      "file_name": "bug_report_flask_app_2025-08-19_00-05_viy0.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_app_2025-08-19_00-05_viy0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.blueprints Path Handling Inconsistency",
      "target": "flask.blueprints.Blueprint",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Flask Blueprint inconsistently handles relative paths for `static_folder` and `template_folder` parameters - `static_folder` is converted to an absolute path while `template_folder` remains relative.",
      "package": "flask",
      "file_name": "bug_report_flask_blueprints_2025-08-19_00-04_v2yk.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_blueprints_2025-08-19_00-04_v2yk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.cli.prepare_import Returns Invalid Module Name for Slash-Ending Paths",
      "target": "flask.cli.prepare_import",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `prepare_import` function incorrectly returns `.py` as the module name when given paths that end with a slash, violating its contract to return valid Python module names.",
      "package": "flask",
      "file_name": "bug_report_flask_cli_prepare_import_2025-08-19_00-03_04kb.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_cli_prepare_import_2025-08-19_00-03_04kb.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.ctx Context Stack Corruption After Wrong Pop Order",
      "target": "flask.ctx.AppContext.pop",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "Flask's context management system becomes corrupted when attempting to pop contexts out of order, preventing proper cleanup of remaining contexts on the stack.",
      "package": "flask",
      "file_name": "bug_report_flask_ctx_2025-08-19_00-09_zimp.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_ctx_2025-08-19_00-09_zimp.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.globals Context Push/Pop State Sharing",
      "target": "flask.globals",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "Multiple pushes of the same Flask AppContext share the same `g` object instead of creating isolated namespaces, causing unexpected state leakage between what should be isolated context levels.",
      "package": "flask",
      "file_name": "bug_report_flask_globals_2025-08-19_00-10_efa2.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_globals_2025-08-19_00-10_efa2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.helpers.get_root_path Raises RuntimeError Instead of Returning CWD",
      "target": "flask.helpers.get_root_path",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `get_root_path` function raises a RuntimeError for built-in modules like 'sys' and 'builtins' instead of returning the current working directory as documented.",
      "package": "flask",
      "file_name": "bug_report_flask_helpers_get_root_path_2025-08-19_00-06_ls1z.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_helpers_get_root_path_2025-08-19_00-06_ls1z.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.logging.has_level_handler Incorrectly Handles NOTSET Handlers",
      "target": "flask.logging.has_level_handler",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `has_level_handler` function incorrectly returns True when encountering handlers with level 0 (NOTSET) in the logger hierarchy, even when those handlers don't actually handle messages at the logger's effective level.",
      "package": "flask",
      "file_name": "bug_report_flask_logging_2025-08-19_00-07_2xyx.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_logging_2025-08-19_00-07_2xyx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.sansio.scaffold.get_root_path Contract Violation",
      "target": "flask.sansio.scaffold.get_root_path",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `get_root_path` function raises a RuntimeError for built-in modules instead of returning the current working directory as documented.",
      "package": "flask",
      "file_name": "bug_report_flask_sansio_scaffold_get_root_path_2025-08-19_00-08_k011.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_sansio_scaffold_get_root_path_2025-08-19_00-08_k011.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.sessions Setting permanent Flag Incorrectly Modifies Session",
      "target": "flask.sessions.SecureCookieSession",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "Setting the `permanent` attribute on a `SecureCookieSession` incorrectly marks the session as modified and stores `_permanent` as a dictionary key, causing unnecessary Set-Cookie headers to be sent.",
      "package": "flask",
      "file_name": "bug_report_flask_sessions_2025-08-19_00-11_xj44.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_sessions_2025-08-19_00-11_xj44.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.signals Integer 0 Cannot Be Used as Signal Sender",
      "target": "flask.signals",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The blinker Signal class crashes with AssertionError when attempting to connect a receiver to a sender with integer value 0, due to collision with the internal ANY_ID constant.",
      "package": "flask",
      "file_name": "bug_report_flask_signals_2025-08-19_00-08_44q1.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_signals_2025-08-19_00-08_44q1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.templating Reserved Word Variable Shadowing",
      "target": "flask.templating.render_template_string",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "Context variables with names matching Jinja2 reserved words (true, false, none, True, False, None) are inaccessible in templates, as the reserved word literals take precedence over the context variables.",
      "package": "flask",
      "file_name": "bug_report_flask_templating_2025-08-19_00-08_jicu.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_templating_2025-08-19_00-08_jicu.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.views.MethodView Dynamic Method Detection Failure",
      "target": "flask.views.MethodView",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "MethodView fails to detect HTTP methods that are added dynamically after class definition, causing the `methods` attribute to remain None instead of being populated with the available HTTP methods.",
      "package": "flask",
      "file_name": "bug_report_flask_views_methodview_2025-08-19_00-09_qifv.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_views_methodview_2025-08-19_00-09_qifv.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.views.View Decorator Application Order Reversal",
      "target": "flask.views.View.as_view",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "View.as_view applies decorators from the `decorators` class attribute in reverse order, causing unexpected behavior when decorator order matters for correctness.",
      "package": "flask",
      "file_name": "bug_report_flask_views_decorator_order_2025-08-19_00-11_x5go.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_views_decorator_order_2025-08-19_00-11_x5go.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.wrappers CORS Header Properties Incorrectly Parse String Inputs",
      "target": "flask.wrappers.Response",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "Multiple CORS-related header properties in `flask.Response` incorrectly treat string inputs as character iterables instead of single values or comma-separated lists, causing each character to be treated as a separate item.",
      "package": "flask",
      "file_name": "bug_report_flask_wrappers_2025-08-19_00-10_pwjv.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_flask_wrappers_2025-08-19_00-10_pwjv.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators integer_range Error Message Format Bug",
      "target": "troposphere.validators.integer_range",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-01-18",
      "summary": "The `integer_range` validator accepts float parameters for minimum and maximum bounds but incorrectly formats them as integers in error messages, causing misleading error reporting.",
      "package": "flask",
      "file_name": "bug_report_troposphere_validators_2025-01-18_12-00_ir2b.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_troposphere_validators_2025-01-18_12-00_ir2b.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators positive_integer Accepts Zero",
      "target": "troposphere.validators.positive_integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-01-18",
      "summary": "The `positive_integer` validator incorrectly accepts 0 as a valid positive integer, violating the mathematical definition where positive integers are > 0.",
      "package": "flask",
      "file_name": "bug_report_troposphere_validators_2025-01-18_12-00_ps1a.md",
      "file_path": "opus-4.1/flask/bug_reports/bug_report_troposphere_validators_2025-01-18_12-00_ps1a.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.ctx AppContext Context Variable Corruption on Wrong Pop Order",
      "target": "flask.ctx.AppContext.pop",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "When AppContext.pop() is called on the wrong context (not the most recently pushed), Flask correctly raises an AssertionError but incorrectly clears the context variable, leaving the application in a corrupted state.",
      "package": "functools",
      "file_name": "bug_report_flask_ctx_2025-08-18_04-49_ob76.md",
      "file_path": "opus-4.1/functools/bug_reports/bug_report_flask_ctx_2025-08-18_04-49_ob76.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.ctx Context Variable Corruption on Wrong Pop Order",
      "target": "flask.ctx.AppContext.pop",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Both AppContext and RequestContext in Flask have a critical bug where calling pop() on the wrong context (not the most recently pushed) correctly raises an AssertionError but incorrectly clears the context variable, leaving the application in a corrupted state where subsequent operations fail.",
      "package": "functools",
      "file_name": "bug_report_flask_ctx_2025-08-18_04-50_cq7q.md",
      "file_path": "opus-4.1/functools/bug_reports/bug_report_flask_ctx_2025-08-18_04-50_cq7q.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "functools.wraps Fails When Decorating Classes",
      "target": "functools.wraps",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "`functools.wraps` and `functools.update_wrapper` fail with an AttributeError when used to wrap classes, because class `__dict__` attributes are `mappingproxy` objects that lack the `update()` method.",
      "package": "functools",
      "file_name": "bug_report_functools_wraps_2025-08-18_04-53_kn9l.md",
      "file_path": "opus-4.1/functools/bug_reports/bug_report_functools_wraps_2025-08-18_04-53_kn9l.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "google.api_core.path_template Regex Metacharacter Escaping Issue",
      "target": "google.api_core.path_template",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `path_template.validate()` function fails to properly escape regex metacharacters in path templates, causing it to incorrectly reject valid expanded paths that contain characters like `?`, `+`, `$`, and `^`.",
      "package": "google-cloud-recaptcha-enterprise",
      "file_name": "bug_report_google_api_core_path_template_2025-08-18_08-55_x7k9.md",
      "file_path": "opus-4.1/google-cloud-recaptcha-enterprise/bug_reports/bug_report_google_api_core_path_template_2025-08-18_08-55_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "google.api_core.path_template.validate Regex Escaping Issue",
      "target": "google.api_core.path_template.validate",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `validate` function fails to properly escape regex special characters in path templates, causing it to either return incorrect results or crash with regex errors when templates contain characters like backslashes, brackets, or parentheses.",
      "package": "google-cloud-recaptcha-enterprise",
      "file_name": "bug_report_google_api_core_path_template_validate_2025-08-18_21-53_d3c7.md",
      "file_path": "opus-4.1/google-cloud-recaptcha-enterprise/bug_reports/bug_report_google_api_core_path_template_validate_2025-08-18_21-53_d3c7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "google.api_core.protobuf_helpers.check_oneof Error Message Formatting Issue",
      "target": "google.api_core.protobuf_helpers.check_oneof",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `check_oneof` function produces malformed error messages when dictionary keys contain special characters like newlines, resulting in confusing error messages that break across multiple lines.",
      "package": "google-cloud-recaptcha-enterprise",
      "file_name": "bug_report_google_api_core_protobuf_helpers_check_oneof_2025-08-18_21-52_p29x.md",
      "file_path": "opus-4.1/google-cloud-recaptcha-enterprise/bug_reports/bug_report_google_api_core_protobuf_helpers_check_oneof_2025-08-18_21-52_p29x.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "google.auth._helpers.update_query Non-Idempotent Behavior",
      "target": "google.auth._helpers.update_query",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `update_query` function is not idempotent when updating URLs with certain query parameters, particularly those with empty values. Applying the same update twice can produce different URLs due to parameter reordering.",
      "package": "google-cloud-recaptcha-enterprise",
      "file_name": "bug_report_google_auth__helpers_update_query_2025-08-18_23-01_qvfa.md",
      "file_path": "opus-4.1/google-cloud-recaptcha-enterprise/bug_reports/bug_report_google_auth__helpers_update_query_2025-08-18_23-01_qvfa.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "google.oauth2._client Overly Broad Retry Matching",
      "target": "google.oauth2._client._can_retry",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-01-15",
      "summary": "The `_can_retry` function in google.oauth2._client uses substring matching (`in` operator) to determine if an error should be retried, which can cause false positive matches and unnecessary retries for non-retryable errors.",
      "package": "google-cloud-recaptcha-enterprise",
      "file_name": "bug_report_google_oauth2__client_2025-01-15_09-15_x7k9.md",
      "file_path": "opus-4.1/google-cloud-recaptcha-enterprise/bug_reports/bug_report_google_oauth2__client_2025-01-15_09-15_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "google.protobuf.wrappers_pb2.FloatValue JSON Round-trip Failure at Float32 Maximum",
      "target": "google.protobuf.json_format",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "FloatValue messages containing the maximum float32 value fail to round-trip through JSON serialization, violating the expected property that `Parse(MessageToJson(msg))` should reconstruct the original message.",
      "package": "google-cloud-recaptcha-enterprise",
      "file_name": "bug_report_google_protobuf_floatvalue_2025-08-18_23-02_7tnn.md",
      "file_path": "opus-4.1/google-cloud-recaptcha-enterprise/bug_reports/bug_report_google_protobuf_floatvalue_2025-08-18_23-02_7tnn.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests_oauthlib.oauth2_auth Special Attribute Injection",
      "target": "requests_oauthlib.oauth2_auth.OAuth2",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The OAuth2 class crashes when a token dictionary contains special Python attribute names like `__class__`, causing a TypeError during initialization.",
      "package": "google-cloud-recaptcha-enterprise",
      "file_name": "bug_report_requests_oauthlib_oauth2_auth_2025-08-18_10-45_x3m9.md",
      "file_path": "opus-4.1/google-cloud-recaptcha-enterprise/bug_reports/bug_report_requests_oauthlib_oauth2_auth_2025-08-18_10-45_x3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "grpc._simple_stubs ChannelCache Fails to Reuse Channels",
      "target": "grpc._simple_stubs.ChannelCache",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The ChannelCache in grpc._simple_stubs fails to reuse channels when given identical parameters, creating duplicate channels instead. This defeats the purpose of the cache and causes resource waste.",
      "package": "grpc-stubs",
      "file_name": "bug_report_grpc__simple_stubs_2025-08-19_15-30_x7k9.md",
      "file_path": "opus-4.1/grpc-stubs/bug_reports/bug_report_grpc__simple_stubs_2025-08-19_15-30_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "grpc._simple_stubs Invalid Eviction Period Handling",
      "target": "grpc._simple_stubs",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `grpc._simple_stubs` module incorrectly handles invalid values for the `GRPC_PYTHON_MANAGED_CHANNEL_EVICTION_SECONDS` environment variable, causing crashes with NaN values and incorrect behavior with negative values.",
      "package": "grpc-stubs",
      "file_name": "bug_report_grpc_simple_stubs_2025-08-19_03-21_x7k9.md",
      "file_path": "opus-4.1/grpc-stubs/bug_reports/bug_report_grpc_simple_stubs_2025-08-19_03-21_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "grpc_reflection.v1alpha ExtensionRequest Integer Overflow",
      "target": "grpc_reflection.v1alpha.reflection_pb2.ExtensionRequest",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "ExtensionRequest raises ValueError for extension_number values outside int32 range instead of handling them gracefully, causing crashes when processing valid protobuf data from other systems.",
      "package": "grpc-stubs",
      "file_name": "bug_report_grpc_reflection_v1alpha_2025-08-19_03-17_0yb9.md",
      "file_path": "opus-4.1/grpc-stubs/bug_reports/bug_report_grpc_reflection_v1alpha_2025-08-19_03-17_0yb9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "grpc_status Error Message Formatting with Special Characters",
      "target": "grpc_status.rpc_status.from_call",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `from_call` function in grpc_status produces poorly formatted error messages when status messages contain special characters like newlines, tabs, or carriage returns.",
      "package": "grpc-stubs",
      "file_name": "bug_report_grpc_status_2025-08-19_00-00_j4k2.md",
      "file_path": "opus-4.1/grpc-stubs/bug_reports/bug_report_grpc_status_2025-08-19_00-00_j4k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "grpc_status._async Error Message Formatting with Special Characters",
      "target": "grpc_status._async.from_call",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The async `from_call` function in grpc_status._async produces poorly formatted error messages when status messages contain special characters, identical to the bug in the synchronous version.",
      "package": "grpc-stubs",
      "file_name": "bug_report_grpc_status_async_2025-08-19_00-00_m8n3.md",
      "file_path": "opus-4.1/grpc-stubs/bug_reports/bug_report_grpc_status_async_2025-08-19_00-00_m8n3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "grpc_status.rpc_status.to_status Undocumented ValueError Exception",
      "target": "grpc_status.rpc_status.to_status",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `to_status()` function raises an undocumented `ValueError` when given a Status message with an invalid gRPC status code (outside range 0-16), violating its API contract.",
      "package": "grpc-stubs",
      "file_name": "bug_report_grpc_status_to_status_2025-08-19_12-00_x3j9.md",
      "file_path": "opus-4.1/grpc-stubs/bug_reports/bug_report_grpc_status_to_status_2025-08-19_12-00_x3j9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "html.unescape Incorrectly Handles Control Characters",
      "target": "html.unescape",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `html.unescape()` function incorrectly returns empty strings for certain control character references (codepoints 1-8, 11, 14-31) instead of converting them to the corresponding Unicode characters as specified by the HTML5 standard.",
      "package": "html",
      "file_name": "bug_report_html_unescape_2025-08-18_04-55_axxv.md",
      "file_path": "opus-4.1/html/bug_reports/bug_report_html_unescape_2025-08-18_04-55_axxv.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.utils.is_ipv4_address Crashes on Null Character",
      "target": "requests.utils.is_ipv4_address",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `is_ipv4_address` function crashes with a ValueError when given a string containing null bytes (\\x00), which can occur when parsing malformed URLs.",
      "package": "html",
      "file_name": "bug_report_requests_utils_null_char_2025-08-18_04-50_l6tw.md",
      "file_path": "opus-4.1/html/bug_reports/bug_report_requests_utils_null_char_2025-08-18_04-50_l6tw.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.utils.is_valid_cidr Incorrectly Rejects /0 CIDR Notation",
      "target": "requests.utils.is_valid_cidr",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `is_valid_cidr` function incorrectly rejects CIDR notation with /0 mask, which is valid and represents all IPv4 addresses (0.0.0.0/0).",
      "package": "html",
      "file_name": "bug_report_requests_utils_cidr_zero_2025-08-18_04-50_3hi5.md",
      "file_path": "opus-4.1/html/bug_reports/bug_report_requests_utils_cidr_zero_2025-08-18_04-50_3hi5.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "htmldate.cli parse_args Ignores Parameter",
      "target": "htmldate.cli.parse_args",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `parse_args` function ignores its `args` parameter and always parses `sys.argv` instead, causing unexpected behavior when called programmatically.",
      "package": "htmldate",
      "file_name": "bug_report_htmldate_cli_2025-08-18_23-24_2x5w.md",
      "file_path": "opus-4.1/htmldate/bug_reports/bug_report_htmldate_cli_2025-08-18_23-24_2x5w.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "htmldate.core IndexError in select_candidate Function",
      "target": "htmldate.core.select_candidate",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `select_candidate` function in htmldate.core raises an IndexError when processing date pattern candidates that contain fewer than 2 patterns with valid 4-digit years, causing the date extraction to fail unexpectedly.",
      "package": "htmldate",
      "file_name": "bug_report_htmldate_core_2025-08-18_06-48_k3n2.md",
      "file_path": "opus-4.1/htmldate/bug_reports/bug_report_htmldate_core_2025-08-18_06-48_k3n2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "htmldate.extractors Invalid Date Handling",
      "target": "htmldate.extractors.custom_parse",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `custom_parse` function in htmldate.extractors silently converts invalid dates to the first day of the month instead of rejecting them, potentially leading to incorrect date extraction from web content.",
      "package": "htmldate",
      "file_name": "bug_report_htmldate_extractors_2025-08-18_00-00_x7k9.md",
      "file_path": "opus-4.1/htmldate/bug_reports/bug_report_htmldate_extractors_2025-08-18_00-00_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "htmldate.extractors.correct_year Incorrectly Handles Negative Years",
      "target": "htmldate.extractors.correct_year",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `correct_year` function incorrectly converts negative year values to positive years in the 1900s or 2000s range, rather than leaving them unchanged or raising an error.",
      "package": "htmldate",
      "file_name": "bug_report_htmldate_extractors_correct_year_2025-08-18_23-23_wkh3.md",
      "file_path": "opus-4.1/htmldate/bug_reports/bug_report_htmldate_extractors_correct_year_2025-08-18_23-23_wkh3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "htmldate.meta Inconsistent Error Handling in reset_caches()",
      "target": "htmldate.meta.reset_caches",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `reset_caches()` function has inconsistent error handling between htmldate functions and charset_normalizer functions, causing it to crash when htmldate functions are mocked without `cache_clear` attribute.",
      "package": "htmldate",
      "file_name": "bug_report_htmldate_meta_2025-08-18_23-30_76pc.md",
      "file_path": "opus-4.1/htmldate/bug_reports/bug_report_htmldate_meta_2025-08-18_23-30_76pc.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "htmldate.validators AttributeError in validate_and_convert",
      "target": "htmldate.validators.validate_and_convert",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `validate_and_convert` function crashes with AttributeError when passed a valid date string, attempting to call `strftime()` on a string object instead of a datetime object.",
      "package": "htmldate",
      "file_name": "bug_report_htmldate_validators_2025-08-18_23-22_mm4c.md",
      "file_path": "opus-4.1/htmldate/bug_reports/bug_report_htmldate_validators_2025-08-18_23-22_mm4c.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "htmldate.validators get_min_date doesn't enforce MIN_DATE boundary",
      "target": "htmldate.validators.get_min_date",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `get_min_date` function fails to enforce the MIN_DATE boundary when given a datetime before MIN_DATE, returning the input date instead of MIN_DATE.",
      "package": "htmldate",
      "file_name": "bug_report_htmldate_validators_2025-08-18_23-25_pfse.md",
      "file_path": "opus-4.1/htmldate/bug_reports/bug_report_htmldate_validators_2025-08-18_23-25_pfse.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "htmldate.validators is_valid_format accepts invalid strftime codes",
      "target": "htmldate.validators.is_valid_format",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `is_valid_format` function incorrectly validates format strings containing invalid strftime codes, returning True when it should return False.",
      "package": "htmldate",
      "file_name": "bug_report_htmldate_validators_2025-08-18_23-25_220o.md",
      "file_path": "opus-4.1/htmldate/bug_reports/bug_report_htmldate_validators_2025-08-18_23-25_220o.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "htmldate.validators validate_and_convert AttributeError",
      "target": "htmldate.validators.validate_and_convert",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `validate_and_convert` function crashes with AttributeError when given valid date strings, attempting to call `strftime()` on string inputs instead of datetime objects.",
      "package": "htmldate",
      "file_name": "bug_report_htmldate_validators_2025-08-18_20-31_q7x3.md",
      "file_path": "opus-4.1/htmldate/bug_reports/bug_report_htmldate_validators_2025-08-18_20-31_q7x3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "ConfirmPrompt Crashes on Unicode Characters That Expand When Uppercased",
      "target": "InquirerPy.prompts.ConfirmPrompt",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "ConfirmPrompt crashes with ValueError when given certain Unicode characters as confirm_letter or reject_letter, specifically those that expand to multiple characters when uppercased (e.g., German eszett '\u00df' -> 'SS').",
      "package": "inquirerpy",
      "file_name": "bug_report_inquirerpy_confirmprompt_2025-08-18_22-02_yvrj.md",
      "file_path": "opus-4.1/inquirerpy/bug_reports/bug_report_inquirerpy_confirmprompt_2025-08-18_22-02_yvrj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "InquirerPy PasswordValidator length=0 Not Distinguished from length=None",
      "target": "InquirerPy.validator.PasswordValidator",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-01-18",
      "summary": "PasswordValidator treats `length=0` the same as `length=None` due to a falsy value check, preventing users from explicitly setting a minimum length of 0.",
      "package": "inquirerpy",
      "file_name": "bug_report_inquirerpy_passwordvalidator_2025-01-18_00-00_x7k9.md",
      "file_path": "opus-4.1/inquirerpy/bug_reports/bug_report_inquirerpy_passwordvalidator_2025-01-18_00-00_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "InquirerPy.NumberPrompt Float Min/Max Constraints Not Enforced",
      "target": "InquirerPy.prompts.number.NumberPrompt",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "NumberPrompt fails to enforce min_allowed and max_allowed constraints when float_allowed=True, resulting in values outside the specified bounds.",
      "package": "inquirerpy",
      "file_name": "bug_report_inquirerpy_number_float_constraints_2025-08-18_21-59_xvxm.md",
      "file_path": "opus-4.1/inquirerpy/bug_reports/bug_report_inquirerpy_number_float_constraints_2025-08-18_21-59_xvxm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "InquirerPy.NumberPrompt Negative Toggle Fails for Zero",
      "target": "InquirerPy.prompts.number.NumberPrompt",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "NumberPrompt's negative toggle functionality fails to negate the value \"0\", breaking the idempotence property where toggling negative twice should return to the original value.",
      "package": "inquirerpy",
      "file_name": "bug_report_inquirerpy_number_negative_toggle_2025-08-18_21-59_d1cl.md",
      "file_path": "opus-4.1/inquirerpy/bug_reports/bug_report_inquirerpy_number_negative_toggle_2025-08-18_21-59_d1cl.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "InquirerPy.base.control Separator Default Selection Bug",
      "target": "InquirerPy.base.control.InquirerPyUIListControl",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "When a Separator object is passed as the default value to InquirerPyUIListControl, the selected index is not properly adjusted to skip the separator, causing the wrong item to be selected.",
      "package": "inquirerpy",
      "file_name": "bug_report_inquirerpy_base_control_2025-08-18_21-57_x3k9.md",
      "file_path": "opus-4.1/inquirerpy/bug_reports/bug_report_inquirerpy_base_control_2025-08-18_21-57_x3k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "InquirerPy.containers.spinner Exception Handling Leaves Spinner in Inconsistent State",
      "target": "InquirerPy.containers.spinner.SpinnerWindow",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "SpinnerWindow's `_spinning` flag remains `True` when an exception occurs during the `start()` method, preventing the spinner from being restarted.",
      "package": "inquirerpy",
      "file_name": "bug_report_InquirerPy_containers_spinner_2025-08-18_22-02_aym4.md",
      "file_path": "opus-4.1/inquirerpy/bug_reports/bug_report_InquirerPy_containers_spinner_2025-08-18_22-02_aym4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "InquirerPy.resolver._get_questions Mutation Bug",
      "target": "InquirerPy.resolver._get_questions",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_get_questions` function returns the same list object when given a list input, allowing unintended mutations to the original questions list.",
      "package": "inquirerpy",
      "file_name": "bug_report_InquirerPy_resolver_2025-08-18_22-03_twt9.md",
      "file_path": "opus-4.1/inquirerpy/bug_reports/bug_report_InquirerPy_resolver_2025-08-18_22-03_twt9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "InquirerPy.separator `__str__` Contract Violation",
      "target": "InquirerPy.separator.Separator",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `Separator` class's `__str__` method violates Python's contract by returning non-string values when initialized with non-string arguments, causing TypeErrors.",
      "package": "inquirerpy",
      "file_name": "bug_report_InquirerPy_separator_2025-08-18_22-02_pdnq.md",
      "file_path": "opus-4.1/inquirerpy/bug_reports/bug_report_InquirerPy_separator_2025-08-18_22-02_pdnq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "InquirerPy.utils.calculate_height Zero Height Not Clamped to 1",
      "target": "InquirerPy.utils.calculate_height",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `calculate_height` function fails to clamp height to 1 when the calculated height is exactly 0, violating the documented behavior that heights should be at least 1.",
      "package": "inquirerpy",
      "file_name": "bug_report_InquirerPy_utils_2025-08-18_12-45_x3q7.md",
      "file_path": "opus-4.1/inquirerpy/bug_reports/bug_report_InquirerPy_utils_2025-08-18_12-45_x3q7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "InquirerPy.validator.PasswordValidator Negative Length Silently Rejects All Passwords",
      "target": "InquirerPy.validator.PasswordValidator",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "PasswordValidator silently accepts negative length values but creates a regex pattern that rejects all passwords, regardless of their actual length.",
      "package": "inquirerpy",
      "file_name": "bug_report_InquirerPy_validator_2025-08-18_22-01_v8g0.md",
      "file_path": "opus-4.1/inquirerpy/bug_reports/bug_report_InquirerPy_validator_2025-08-18_22-01_v8g0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "NumberPrompt Min/Max Bounds Not Enforced on Initialization",
      "target": "InquirerPy.prompts.NumberPrompt",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "NumberPrompt fails to enforce min_allowed and max_allowed bounds on the default value during initialization, causing the prompt to return 0.0 instead of the clamped value.",
      "package": "inquirerpy",
      "file_name": "bug_report_inquirerpy_numberprompt_2025-08-18_22-02_1mos.md",
      "file_path": "opus-4.1/inquirerpy/bug_reports/bug_report_inquirerpy_numberprompt_2025-08-18_22-02_1mos.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isal.igzip Missing Input Validation in compress() Function",
      "target": "isal.igzip.compress",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-01-18",
      "summary": "The `igzip.compress()` function lacks proper input validation for the `compresslevel` parameter, causing inconsistent error handling compared to `IGzipFile` and exposing underlying implementation errors instead of providing clear user feedback.",
      "package": "isal",
      "file_name": "bug_report_isal_igzip_2025-01-18_05-36_k3m9.md",
      "file_path": "opus-4.1/isal/bug_reports/bug_report_isal_igzip_2025-01-18_05-36_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isal.igzip_lib IgzipDecompressor Raises EOFError After EOF",
      "target": "isal.igzip_lib.IgzipDecompressor",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "IgzipDecompressor.decompress() incorrectly raises EOFError when called after EOF is reached, while the standard zlib behavior is to return empty bytes.",
      "package": "isal",
      "file_name": "bug_report_isal_igzip_lib_2025-08-18_22-43_dh6e.md",
      "file_path": "opus-4.1/isal/bug_reports/bug_report_isal_igzip_lib_2025-08-18_22-43_dh6e.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isal.igzip_threaded Flush Creates Invalid Gzip Stream",
      "target": "isal.igzip_threaded._ThreadedGzipWriter",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_ThreadedGzipWriter.flush()` method can produce invalid gzip streams when specific data patterns are written before the flush operation, resulting in corrupted files that cannot be decompressed.",
      "package": "isal",
      "file_name": "bug_report_isal_igzip_threaded_2025-08-18_05-54_x9k2.md",
      "file_path": "opus-4.1/isal/bug_reports/bug_report_isal_igzip_threaded_2025-08-18_05-54_x9k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isal.isal_zlib Incompatible Compression Level Handling",
      "target": "isal.isal_zlib.compress",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The isal_zlib module fails to accept compression level -1, which is the standard default compression level in zlib, breaking compatibility with code expecting zlib-compatible behavior.",
      "package": "isal",
      "file_name": "bug_report_isal_isal_zlib_2025-08-18_23-03_9c8a.md",
      "file_path": "opus-4.1/isal/bug_reports/bug_report_isal_isal_zlib_2025-08-18_23-03_9c8a.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort Check-Sort Inconsistency with Trailing Newlines",
      "target": "isort",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-01-18",
      "summary": "`isort.check_code()` returns `True` (indicating code is properly sorted) but `isort.code()` still modifies the code by adding a trailing newline, violating the expected contract between check and sort operations.",
      "package": "isort",
      "file_name": "bug_report_isort_2025-01-18_22-22_x8k3.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_2025-01-18_22-22_x8k3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.api Check-Sort Inconsistency with Trailing Newlines",
      "target": "isort.api.check_code_string",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `check_code_string` function returns True indicating code is properly sorted, but `sort_code_string` still modifies the code by adding a trailing newline, violating the expected contract between these functions.",
      "package": "isort",
      "file_name": "bug_report_isort_api_2025-08-18_21-41_c8q0.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_api_2025-08-18_21-41_c8q0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.api sort_code_string Returns Empty String with show_diff",
      "target": "isort.api.sort_code_string",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `sort_code_string` function returns an empty string when `show_diff` parameter is set to True or a TextIO object, instead of returning the sorted code.",
      "package": "isort",
      "file_name": "bug_report_isort_api_2025-08-18_21-41_02bn.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_api_2025-08-18_21-41_02bn.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.comments.parse Round-Trip Property Violation",
      "target": "isort.comments.parse",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `parse()` function in isort.comments does not preserve the exact spacing around the '#' character, violating the round-trip property when reconstructing the original line from parsed components.",
      "package": "isort",
      "file_name": "bug_report_isort_comments_2025-08-18_21-40_11up.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_comments_2025-08-18_21-40_11up.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.core._indented_config Fails to Modify Config When Indent is Empty",
      "target": "isort.core._indented_config",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_indented_config()` function returns the original unmodified config when given an empty string as indent, instead of returning a new config with `lines_after_imports=1` as intended.",
      "package": "isort",
      "file_name": "bug_report_isort_indented_config_2025-08-18_21-38_b46h.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_indented_config_2025-08-18_21-38_b46h.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.files.find Crashes on Float Input",
      "target": "isort.files.find",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `files.find()` function crashes with a TypeError when float values are present in the paths iterable, failing to handle non-string types gracefully.",
      "package": "isort",
      "file_name": "bug_report_isort_files_2025-08-18_21-51_40wq.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_files_2025-08-18_21-51_40wq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.files.find Crashes on None Input",
      "target": "isort.files.find",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `files.find()` function crashes with a TypeError when None is present in the paths iterable, instead of handling it gracefully.",
      "package": "isort",
      "file_name": "bug_report_isort_files_2025-08-18_21-45_e5oe.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_files_2025-08-18_21-45_e5oe.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.format Round-Trip Failure Changes Import Semantics",
      "target": "isort.format.format_natural",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Round-tripping an import statement through `format_simplified()` and `format_natural()` changes its semantic meaning. `import a.b` becomes `from a import b`, which are different import statements in Python.",
      "package": "isort",
      "file_name": "bug_report_isort_format_roundtrip_2025-08-18_21-38_syli.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_format_roundtrip_2025-08-18_21-38_syli.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.format Round-Trip Property Violation",
      "target": "isort.format.format_simplified",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The round-trip property between `format_simplified` and `format_natural` is violated for dotted import statements like `import A.A`.",
      "package": "isort",
      "file_name": "bug_report_isort_format_2025-08-18_21-37_fzfy.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_format_2025-08-18_21-37_fzfy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.format.format_natural Returns Invalid Import for Empty String",
      "target": "isort.format.format_natural",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `format_natural()` function returns `\"import \"` when given an empty string input, instead of returning an empty string.",
      "package": "isort",
      "file_name": "bug_report_isort_format_natural_2025-08-18_21-38_gymo.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_format_natural_2025-08-18_21-38_gymo.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.format.remove_whitespace Doesn't Remove Tabs",
      "target": "isort.format.remove_whitespace",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `remove_whitespace` function fails to remove tab characters despite its name suggesting it removes all whitespace.",
      "package": "isort",
      "file_name": "bug_report_isort_format_2025-08-18_21-37_ac5e.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_format_2025-08-18_21-37_ac5e.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.hooks.git_hook Crashes on Non-Existent File Paths",
      "target": "isort.hooks.git_hook",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `git_hook` function crashes with `InvalidSettingsPath` exception when git diff returns files in directories that don't exist on the filesystem.",
      "package": "isort",
      "file_name": "bug_report_isort_hooks_2025-08-18_21-41_zm5c.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_hooks_2025-08-18_21-41_zm5c.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.identify Skips Imports After Bare 'yield' Statement",
      "target": "isort.identify.imports()",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `imports()` function in isort.identify incorrectly skips import statements that appear after a bare `yield` keyword, causing isort to miss organizing those imports.",
      "package": "isort",
      "file_name": "bug_report_isort_identify_2025-08-18_21-43_0a43.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_identify_2025-08-18_21-43_0a43.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.io Null Character in Filename Crash",
      "target": "isort.io.File.from_contents",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `File.from_contents` method crashes with a `ValueError` when given a filename containing null characters, instead of handling the invalid input gracefully.",
      "package": "isort",
      "file_name": "bug_report_isort_io_2025-08-18_21-44_mh9o.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_io_2025-08-18_21-44_mh9o.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.io UTF-16 Encoding Detection Failure",
      "target": "isort.io.File.detect_encoding",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `File.detect_encoding` method fails to detect UTF-16 encoded files even when they have a valid encoding declaration, raising an `UnsupportedEncoding` exception instead.",
      "package": "isort",
      "file_name": "bug_report_isort_io_2025-08-18_21-43_w2dd.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_io_2025-08-18_21-43_w2dd.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.literal Dict Not Sorted by Values",
      "target": "isort.literal._dict",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The _dict function claims to sort dictionaries by values but actually preserves key order due to PrettyPrinter behavior.",
      "package": "isort",
      "file_name": "bug_report_isort_literal_2025-08-18_21-41_buob.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_literal_2025-08-18_21-41_buob.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.literal Empty Set Formatting Error",
      "target": "isort.literal.assignment",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Empty sets are incorrectly formatted as `{}` which Python interprets as an empty dict, not a set.",
      "package": "isort",
      "file_name": "bug_report_isort_literal_2025-08-18_21-41_bveh.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_literal_2025-08-18_21-41_bveh.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.main Accepts Invalid Negative and Zero line_length Values",
      "target": "isort.main.parse_args",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-01-18",
      "summary": "The `parse_args` function in isort.main accepts negative and zero values for `line_length` and `wrap_length` parameters, which are illogical for code formatting and can lead to unexpected behavior.",
      "package": "isort",
      "file_name": "bug_report_isort_main_2025-01-18_23-55_k7x9.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_main_2025-01-18_23-55_k7x9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.parse Strips Whitespace from Comments",
      "target": "isort.comments.parse",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `parse_comments` function incorrectly strips whitespace characters from comment content, causing information loss and preventing accurate round-trip parsing of import statements with comments.",
      "package": "isort",
      "file_name": "bug_report_isort_parse_2025-08-18_22-53_nxu9.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_parse_2025-08-18_22-53_nxu9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.place Dot Prefix Priority Violation",
      "target": "isort.place.module",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Modules starting with '.' are incorrectly matched against forced_separate patterns instead of being immediately classified as LOCALFOLDER imports.",
      "package": "isort",
      "file_name": "bug_report_isort_place_2025-08-18_21-45_ttrl.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_place_2025-08-18_21-45_ttrl.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.place Empty Module Name Handling",
      "target": "isort.place.module",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Empty module names incorrectly return 'FIRSTPARTY' instead of the configured default section.",
      "package": "isort",
      "file_name": "bug_report_isort_place_2025-08-18_21-45_r76i.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_place_2025-08-18_21-45_r76i.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.place None Config Handling",
      "target": "isort.place.module",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Passing None as the config parameter causes an AttributeError instead of using the DEFAULT_CONFIG as suggested by the function signature.",
      "package": "isort",
      "file_name": "bug_report_isort_place_2025-08-18_21-45_a2ib.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_place_2025-08-18_21-45_a2ib.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.sections Regex Metacharacter Handling",
      "target": "isort.settings.Config.known_patterns",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "Module names containing regex metacharacters cause regex compilation errors or incorrect section placement when configured in known_first_party, known_third_party, etc.",
      "package": "isort",
      "file_name": "bug_report_isort_sections_2025-08-18_21-38_k9m2.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_sections_2025-08-18_21-38_k9m2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.settings Error Message Formatting with Special Characters",
      "target": "isort.settings.Config",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The Config class in isort.settings produces malformed error messages when py_version contains special characters like newlines, tabs, or carriage returns, making error messages difficult to read.",
      "package": "isort",
      "file_name": "bug_report_isort_settings_2025-08-18_21-42_lmu5.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_settings_2025-08-18_21-42_lmu5.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.sorting Length Sort Lexicographic Comparison Bug",
      "target": "isort.sorting.module_key",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `module_key` and `section_key` functions incorrectly handle length-based sorting by prepending unpadded numeric lengths as strings, causing lexicographic instead of numeric comparison.",
      "package": "isort",
      "file_name": "bug_report_isort_sorting_2025-08-18_12-00_a3f7.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_sorting_2025-08-18_12-00_a3f7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.utils.Trie Overwrites Configs in Same Directory",
      "target": "isort.utils.Trie",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The Trie class in isort.utils incorrectly handles multiple configuration files in the same directory, keeping only the last inserted config and discarding previous ones.",
      "package": "isort",
      "file_name": "bug_report_isort_utils_2025-08-18_15-45_k3p9.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_utils_2025-08-18_15-45_k3p9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.wrap_modes Empty Import Handling Errors",
      "target": "isort.wrap_modes",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Multiple wrap mode formatters in isort incorrectly handle empty import lists, either returning malformed output with unbalanced parentheses or non-empty strings when they should return empty strings.",
      "package": "isort",
      "file_name": "bug_report_isort_wrap_modes_2025-08-18_22-58_j5cu.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_wrap_modes_2025-08-18_22-58_j5cu.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "isort.wrap_modes.from_string ValueError on Out-of-Range Integers",
      "target": "isort.wrap_modes.from_string",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `from_string` function in isort.wrap_modes raises a ValueError when given integer strings that are out of the valid WrapModes enum range (>=12), rather than gracefully handling invalid values.",
      "package": "isort",
      "file_name": "bug_report_isort_from_string_2025-08-18_22-58_ar57.md",
      "file_path": "opus-4.1/isort/bug_reports/bug_report_isort_from_string_2025-08-18_22-58_ar57.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "json.encoder Key Collision with Special Float Values",
      "target": "json.encoder.JSONEncoder",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "JSONEncoder causes silent data loss when dictionaries contain both special float keys (inf, -inf, nan) and their corresponding JSON string representations ('Infinity', '-Infinity', 'NaN') as keys.",
      "package": "json",
      "file_name": "bug_report_json_encoder_2025-08-18_04-48_agms.md",
      "file_path": "opus-4.1/json/bug_reports/bug_report_json_encoder_2025-08-18_04-48_agms.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "json.loads parse_float Parameter Not Called for Special Float Values",
      "target": "json.loads",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `parse_float` parameter of `json.loads` is not called for the special float values `Infinity`, `-Infinity`, and `NaN`, contrary to its documentation which states it \"will be called with the string of every JSON float to be decoded.\"",
      "package": "json",
      "file_name": "bug_report_json_parse_float_2025-08-18_04-50_hlih.md",
      "file_path": "opus-4.1/json/bug_reports/bug_report_json_parse_float_2025-08-18_04-50_hlih.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "json.tool JSON Lines File Handling Bug",
      "target": "json.tool",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `json.tool` module crashes with \"I/O operation on closed file\" when using `--json-lines` option with file input due to premature file closure before generator consumption.",
      "package": "json",
      "file_name": "bug_report_json_tool_2025-08-18_04-49_o9tb.md",
      "file_path": "opus-4.1/json/bug_reports/bug_report_json_tool_2025-08-18_04-49_o9tb.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.sessions ValueError on Invalid Port Numbers in Redirects",
      "target": "requests.sessions.SessionRedirectMixin.should_strip_auth",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `should_strip_auth` method crashes with `ValueError` when processing redirect URLs containing invalid port numbers (outside the 0-65535 range), which can occur when a server sends malformed Location headers.",
      "package": "json",
      "file_name": "bug_report_requests_sessions_2025-08-18_04-49_hmmq.md",
      "file_path": "opus-4.1/json/bug_reports/bug_report_requests_sessions_2025-08-18_04-49_hmmq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.status_codes LookupDict Attribute Access Inconsistency",
      "target": "requests.status_codes",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `LookupDict` class in `requests.structures` has inconsistent behavior between attribute access and dictionary-style access for inherited dict methods, violating the expected contract that `obj.attr` should equal `obj[\"attr\"]` for dict-like objects.",
      "package": "json",
      "file_name": "bug_report_requests_status_codes_2025-08-18_04-47_r3ah.md",
      "file_path": "opus-4.1/json/bug_reports/bug_report_requests_status_codes_2025-08-18_04-47_r3ah.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.structures.LookupDict Breaks Dict Contract",
      "target": "requests.structures.LookupDict",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "LookupDict's `__getitem__` and `get()` methods incorrectly use `self.__dict__` instead of the parent dict's storage, causing all dict-stored values to be inaccessible and always return None.",
      "package": "json",
      "file_name": "bug_report_requests_structures_LookupDict_2025-08-18_04-48_a74n.md",
      "file_path": "opus-4.1/json/bug_reports/bug_report_requests_structures_LookupDict_2025-08-18_04-48_a74n.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "jurigged.codetools Unicode Handling Bug in Info.get_segment",
      "target": "jurigged.codetools.Info.get_segment",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `Info.get_segment` method crashes with a UnicodeDecodeError when extracting segments from lines containing multi-byte UTF-8 characters at certain column positions.",
      "package": "jurigged",
      "file_name": "bug_report_jurigged_codetools_2025-08-19_00-00_a7b3.md",
      "file_path": "opus-4.1/jurigged/bug_reports/bug_report_jurigged_codetools_2025-08-19_00-00_a7b3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "jurigged.parse Missing Variable Reads in Augmented Assignments",
      "target": "jurigged.parse.variables",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `variables` function in `jurigged.parse` fails to track variable reads in augmented assignment operations (+=, -=, *=, etc.), only tracking them as assignments despite these operations inherently reading the variable first.",
      "package": "jurigged",
      "file_name": "bug_report_jurigged_parse_2025-08-19_02-51_icgn.md",
      "file_path": "opus-4.1/jurigged/bug_reports/bug_report_jurigged_parse_2025-08-19_02-51_icgn.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "jurigged.recode.virtual_file Mishandles Special Characters in Name",
      "target": "jurigged.recode.virtual_file",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `virtual_file` function doesn't properly escape angle brackets (`<`, `>`) and newlines in the name parameter, resulting in malformed virtual filenames that violate the expected `<name#number>` format.",
      "package": "jurigged",
      "file_name": "bug_report_jurigged_recode_2025-08-19_02-43_x7k9.md",
      "file_path": "opus-4.1/jurigged/bug_reports/bug_report_jurigged_recode_2025-08-19_02-43_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "jurigged.register Inconsistent Unicode Error Handling",
      "target": "jurigged.register.Registry.prepare()",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "Registry.prepare() crashes with UnicodeDecodeError when processing non-UTF8 encoded Python files, while Registry.auto_register() handles these files gracefully, creating an inconsistent API behavior.",
      "package": "jurigged",
      "file_name": "bug_report_jurigged_register_2025-08-19_02-53_icsw.md",
      "file_path": "opus-4.1/jurigged/bug_reports/bug_report_jurigged_register_2025-08-19_02-53_icsw.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "jurigged.rescript.redirector_code SyntaxError with Python Keywords",
      "target": "jurigged.rescript.redirector_code",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `redirector_code()` function crashes with a SyntaxError when passed Python keywords as the `name` parameter, attempting to create functions with invalid names.",
      "package": "jurigged",
      "file_name": "bug_report_jurigged_rescript_2025-08-19_02-50_6ar3.md",
      "file_path": "opus-4.1/jurigged/bug_reports/bug_report_jurigged_rescript_2025-08-19_02-50_6ar3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "jurigged.utils.shift_lineno Crashes on Boundary Values",
      "target": "jurigged.utils.shift_lineno",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `shift_lineno` function crashes with ValueError when shifting would result in negative line numbers and with OverflowError when the result exceeds integer limits.",
      "package": "jurigged",
      "file_name": "bug_report_jurigged_utils_shift_lineno_2025-08-19_02-54_qlip.md",
      "file_path": "opus-4.1/jurigged/bug_reports/bug_report_jurigged_utils_shift_lineno_2025-08-19_02-54_qlip.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "jurigged.utils.shift_lineno Invalid Line Number Handling",
      "target": "jurigged.utils.shift_lineno",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `shift_lineno` function in jurigged fails when shifting code object line numbers to non-positive values, either crashing with ValueError or silently allowing invalid line 0.",
      "package": "jurigged",
      "file_name": "bug_report_jurigged_utils_shift_lineno_2025-08-19_18-42_x7j2.md",
      "file_path": "opus-4.1/jurigged/bug_reports/bug_report_jurigged_utils_shift_lineno_2025-08-19_18-42_x7j2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "jurigged.utils.shift_lineno ValueError on Negative Line Numbers",
      "target": "jurigged.utils.shift_lineno",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `shift_lineno` function in jurigged.utils crashes with a ValueError when shifting code object line numbers would result in a negative or zero line number.",
      "package": "jurigged",
      "file_name": "bug_report_jurigged_utils_shift_lineno_2025-08-19_02-48_4uj9.md",
      "file_path": "opus-4.1/jurigged/bug_reports/bug_report_jurigged_utils_shift_lineno_2025-08-19_02-48_4uj9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "langchain_perplexity Message Role to Chunk Type Mapping Logic Error",
      "target": "langchain_perplexity.chat_models.ChatPerplexity._convert_delta_to_message_chunk",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_convert_delta_to_message_chunk` method incorrectly uses `or` operators instead of proper precedence logic when determining message chunk types, causing it to ignore the role parameter when certain default_class values are provided.",
      "package": "langchain-perplexity",
      "file_name": "bug_report_langchain_perplexity_2025-08-18_23-27_ewue.md",
      "file_path": "opus-4.1/langchain-perplexity/bug_reports/bug_report_langchain_perplexity_2025-08-18_23-27_ewue.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "langchain_perplexity.chat_models Logic Error in _convert_delta_to_message_chunk",
      "target": "langchain_perplexity.chat_models.ChatPerplexity._convert_delta_to_message_chunk",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Line 279 of chat_models.py contains a logic error in the conditional expression that causes incorrect branch execution when role is a falsy value (e.g., False, 0, []) and default_class is ChatMessageChunk.",
      "package": "langchain-perplexity",
      "file_name": "bug_report_langchain_perplexity_chat_models_2025-08-18_23-25_fpv0.md",
      "file_path": "opus-4.1/langchain-perplexity/bug_reports/bug_report_langchain_perplexity_chat_models_2025-08-18_23-25_fpv0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "RateLimitItem Equality-Hash Contract Violation",
      "target": "limits.limits.RateLimitItem",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "RateLimitItem's `__eq__` method ignores the namespace field, but `__hash__` includes it, violating Python's requirement that equal objects must have equal hashes.",
      "package": "limits",
      "file_name": "bug_report_limits_equality_2025-08-18_23-25_zzzu.md",
      "file_path": "opus-4.1/limits/bug_reports/bug_report_limits_equality_2025-08-18_23-25_zzzu.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "limits.limits safe_string crashes on non-UTF-8 bytes",
      "target": "limits.limits.safe_string",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `safe_string` function crashes with `UnicodeDecodeError` when given bytes that are not valid UTF-8, despite its docstring claiming to \"normalize a byte/str/int or float to a str\".",
      "package": "limits",
      "file_name": "bug_report_limits_safe_string_2025-08-18_10-30_x7k2.md",
      "file_path": "opus-4.1/limits/bug_reports/bug_report_limits_safe_string_2025-08-18_10-30_x7k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "limits.safe_string UnicodeDecodeError on Non-UTF8 Bytes",
      "target": "limits.limits.safe_string",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `safe_string()` function crashes with UnicodeDecodeError when given bytes that are not valid UTF-8, despite claiming to normalize bytes to strings.",
      "package": "limits",
      "file_name": "bug_report_limits_safe_string_2025-08-18_23-25_1mdu.md",
      "file_path": "opus-4.1/limits/bug_reports/bug_report_limits_safe_string_2025-08-18_23-25_1mdu.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "limits.typing Missing Export in __all__",
      "target": "limits.typing",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `AsyncCoRedisClient` type alias is defined as a public API in limits.typing but is missing from the `__all__` list, making it unavailable through star imports.",
      "package": "limits",
      "file_name": "bug_report_limits_typing_2025-08-18_14-30_k3m9.md",
      "file_path": "opus-4.1/limits/bug_reports/bug_report_limits_typing_2025-08-18_14-30_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "lml.plugin AttributeError with None in tags list",
      "target": "lml.plugin.PluginManager",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "PluginManager crashes with AttributeError when a plugin's tags list contains None, attempting to call .lower() on NoneType.",
      "package": "lml",
      "file_name": "bug_report_lml_plugin_2025-08-18_17-52_a3f9.md",
      "file_path": "opus-4.1/lml/bug_reports/bug_report_lml_plugin_2025-08-18_17-52_a3f9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "lml.plugin Unicode Case-Insensitive Lookup Failure",
      "target": "lml.plugin.PluginManager",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "PluginManager's case-insensitive tag lookup fails for Unicode characters with non-reversible case transformations, such as Turkish dotless i ('\u0131').",
      "package": "lml",
      "file_name": "bug_report_lml_plugin_2025-08-18_23-00_wjlf.md",
      "file_path": "opus-4.1/lml/bug_reports/bug_report_lml_plugin_2025-08-18_23-00_wjlf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "lml.utils.PythonObjectEncoder Incorrectly Handles Basic Types",
      "target": "lml.utils.PythonObjectEncoder.default",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "PythonObjectEncoder.default() method incorrectly delegates basic types to parent's default() which always raises TypeError, instead of properly handling them.",
      "package": "lml",
      "file_name": "bug_report_lml_utils_2025-08-18_22-12_1tv1.md",
      "file_path": "opus-4.1/lml/bug_reports/bug_report_lml_utils_2025-08-18_22-12_1tv1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "lml_loader Remove Duplicates Fails on Unhashable Types",
      "target": "lml_loader.DataLoader.remove_duplicates",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `remove_duplicates` method crashes with a TypeError when given a list containing unhashable items like lists or dictionaries, because it attempts to add them to a set.",
      "package": "lml",
      "file_name": "bug_report_lml_loader_remove_duplicates_2025-08-18_22-14_vwly.md",
      "file_path": "opus-4.1/lml/bug_reports/bug_report_lml_loader_remove_duplicates_2025-08-18_22-14_vwly.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "lml_loader Set Nested Value Crashes on Non-Dict Path",
      "target": "lml_loader.DataLoader.set_nested_value",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `set_nested_value` method crashes with a TypeError when attempting to set a nested value through a path that contains non-dict values, failing to handle the case where intermediate values are not dictionaries.",
      "package": "lml",
      "file_name": "bug_report_lml_loader_set_nested_2025-08-18_22-14_9eb2.md",
      "file_path": "opus-4.1/lml/bug_reports/bug_report_lml_loader_set_nested_2025-08-18_22-14_9eb2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "lml_loader Split/Join Round-Trip Failure",
      "target": "lml_loader.DataLoader.split_by_delimiter",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The split/join round-trip property fails for empty lists. When joining an empty list and then splitting the result, the output is `['']` instead of the original empty list `[]`.",
      "package": "lml",
      "file_name": "bug_report_lml_loader_split_join_2025-08-18_22-14_881k.md",
      "file_path": "opus-4.1/lml/bug_reports/bug_report_lml_loader_split_join_2025-08-18_22-14_881k.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "lxml.doctestcompare Whitespace Normalization Inconsistency",
      "target": "lxml.doctestcompare.LXMLOutputChecker.text_compare",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `text_compare` method incorrectly handles patterns containing certain whitespace characters (like `\\r`) when the wildcard `...` is used with `strip=True`, causing valid patterns to fail matching.",
      "package": "lxml",
      "file_name": "bug_report_lxml_doctestcompare_2025-08-18_05-33_5xgt.md",
      "file_path": "opus-4.1/lxml/bug_reports/bug_report_lxml_doctestcompare_2025-08-18_05-33_5xgt.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "lxml.etree Element.set() API Inconsistency with None Values",
      "target": "lxml.etree.Element.set()",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "`lxml.etree.Element.set()` raises TypeError when passed None as a value, while `xml.etree.ElementTree.Element.set()` removes the attribute, causing API incompatibility between the two implementations.",
      "package": "lxml",
      "file_name": "bug_report_lxml_etree_set_none_2025-08-18_05-33_ms7u.md",
      "file_path": "opus-4.1/lxml/bug_reports/bug_report_lxml_etree_set_none_2025-08-18_05-33_ms7u.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "lxml.html Inconsistent Control Character Handling in fragment_fromstring",
      "target": "lxml.html.fragment_fromstring",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `fragment_fromstring` function with `create_parent=True` inconsistently handles control characters - it silently converts NULL bytes (0x00) to U+FFFD but raises ValueError for other control characters (0x01-0x08, 0x0E-0x1B).",
      "package": "lxml",
      "file_name": "bug_report_lxml_html_2025-08-18_05-30_lwpi.md",
      "file_path": "opus-4.1/lxml/bug_reports/bug_report_lxml_html_2025-08-18_05-30_lwpi.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "lxml.html Malformed Comment Generation from Processing Instruction Syntax",
      "target": "lxml.html.fromstring",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The lxml HTML parser incorrectly converts incomplete processing instruction syntax (`<?`) into malformed HTML comments that include closing tags, breaking the HTML structure.",
      "package": "lxml",
      "file_name": "bug_report_lxml_html_2025-08-18_05-31_gx0l.md",
      "file_path": "opus-4.1/lxml/bug_reports/bug_report_lxml_html_2025-08-18_05-31_gx0l.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "lxml.pyclasslookup Custom Element __init__ Not Called",
      "target": "lxml.pyclasslookup.PythonElementClassLookup",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Custom `__init__` methods in ElementBase subclasses are not called when elements are created through PythonElementClassLookup, preventing proper initialization of custom element classes.",
      "package": "lxml",
      "file_name": "bug_report_lxml_pyclasslookup_2025-08-18_01-47_x9k2.md",
      "file_path": "opus-4.1/lxml/bug_reports/bug_report_lxml_pyclasslookup_2025-08-18_01-47_x9k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "lxml.sax Empty String Text Accumulation",
      "target": "lxml.sax.ElementTreeContentHandler.characters",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `ElementTreeContentHandler.characters()` method incorrectly converts `None` text to an empty string when an empty string is added, violating XML serialization conventions.",
      "package": "lxml",
      "file_name": "bug_report_lxml_sax_2025-08-18_05-33_s4t0.md",
      "file_path": "opus-4.1/lxml/bug_reports/bug_report_lxml_sax_2025-08-18_05-33_s4t0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "mdxpy DescFlag Enum Cannot Parse Underscore-Containing Members Without Underscores",
      "target": "mdxpy.mdx.DescFlag",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The DescFlag enum's `_missing_` method fails to parse enum member names that contain underscores when the input has underscores removed, even though it claims to handle case-insensitive and space-insensitive parsing.",
      "package": "mdxpy",
      "file_name": "bug_report_mdxpy_descflag_2025-08-18_22-52_gl8z.md",
      "file_path": "opus-4.1/mdxpy/bug_reports/bug_report_mdxpy_descflag_2025-08-18_22-52_gl8z.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "mdxpy DescFlag Enum Parsing Fails for Underscored Names Without Underscores",
      "target": "mdxpy.mdx.DescFlag._missing_",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The DescFlag enum's `_missing_` method fails to parse valid enum names when underscores are removed, even though it's designed to be flexible with case and spacing.",
      "package": "mdxpy",
      "file_name": "bug_report_mdxpy_descflag_2025-08-18_21-35_zshu.md",
      "file_path": "opus-4.1/mdxpy/bug_reports/bug_report_mdxpy_descflag_2025-08-18_21-35_zshu.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "mdxpy normalize() Function Not Idempotent",
      "target": "mdxpy.normalize",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `normalize()` function is not idempotent - applying it twice to strings containing ']' produces different results than applying it once, violating the expected property that f(f(x)) = f(x).",
      "package": "mdxpy",
      "file_name": "bug_report_mdxpy_normalize_2025-08-18_22-52_r0re.md",
      "file_path": "opus-4.1/mdxpy/bug_reports/bug_report_mdxpy_normalize_2025-08-18_22-52_r0re.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "mdxpy normalize() Violates Idempotence",
      "target": "mdxpy.normalize",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `normalize()` function is not idempotent - applying it twice produces different results than applying it once, specifically when the input contains ']' characters.",
      "package": "mdxpy",
      "file_name": "bug_report_mdxpy_normalize_2025-08-18_21-35_wmjg.md",
      "file_path": "opus-4.1/mdxpy/bug_reports/bug_report_mdxpy_normalize_2025-08-18_21-35_wmjg.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "multi_key_dict get_other_keys() Returns Self When Duplicate Keys Exist",
      "target": "multi_key_dict.get_other_keys()",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `get_other_keys()` method incorrectly includes the queried key in its result when the multi-key mapping contains duplicate keys, violating the method's documented contract of returning only \"other\" keys.",
      "package": "multi-key-dict",
      "file_name": "bug_report_multi_key_dict_2025-08-19_15-30_x7b9.md",
      "file_path": "opus-4.1/multi-key-dict/bug_reports/bug_report_multi_key_dict_2025-08-19_15-30_x7b9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "numpy.char Silent Truncation in Case Transformations",
      "target": "numpy.char.upper",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "NumPy char module functions silently truncate results when case transformations produce strings longer than the input array's dtype can hold, leading to data loss without warning.",
      "package": "numpy",
      "file_name": "bug_report_numpy_char_2025-08-18_04-57_l1vf.md",
      "file_path": "opus-4.1/numpy/bug_reports/bug_report_numpy_char_2025-08-18_04-57_l1vf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "numpy.ctypeslib F-Contiguous Arrays Incorrectly Rejected",
      "target": "numpy.ctypeslib.as_ctypes",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `as_ctypes` function incorrectly rejects F-contiguous (Fortran-order) arrays as \"strided arrays not supported\", even though F-contiguous arrays are valid contiguous arrays that should be supported.",
      "package": "numpy",
      "file_name": "bug_report_numpy_ctypeslib_2025-08-18_04-58_0qfo.md",
      "file_path": "opus-4.1/numpy/bug_reports/bug_report_numpy_ctypeslib_2025-08-18_04-58_0qfo.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "numpy.dtypes Integer Overflow Handling Inconsistency",
      "target": "numpy.dtypes",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "NumPy has inconsistent overflow handling for integer dtypes - direct array creation with out-of-bounds values raises OverflowError, while arithmetic operations and astype() silently wrap using modular arithmetic.",
      "package": "numpy",
      "file_name": "bug_report_numpy_dtypes_2025-08-18_05-02_wigy.md",
      "file_path": "opus-4.1/numpy/bug_reports/bug_report_numpy_dtypes_2025-08-18_05-02_wigy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "numpy.f2py.crackfortran.markoutercomma Crashes on Unbalanced Parentheses",
      "target": "numpy.f2py.crackfortran.markoutercomma",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `markoutercomma` function in numpy's f2py module crashes with an AssertionError when processing strings with unbalanced parentheses, causing f2py to fail when parsing malformed Fortran code.",
      "package": "numpy",
      "file_name": "bug_report_numpy_f2py_markoutercomma_2025-08-18_04-58_la7s.md",
      "file_path": "opus-4.1/numpy/bug_reports/bug_report_numpy_f2py_markoutercomma_2025-08-18_04-58_la7s.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "numpy.fft.irfftn Fails on Single-Element Arrays",
      "target": "numpy.fft.irfftn",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The inverse real FFT functions (`irfftn`, `irfft`, `irfft2`) crash with a ValueError when attempting to invert the FFT of single-element real arrays, violating the round-trip property that `irfftn(rfftn(x)) \u2248 x`.",
      "package": "numpy",
      "file_name": "bug_report_numpy_fft_irfftn_2025-08-18_04-59_50mb.md",
      "file_path": "opus-4.1/numpy/bug_reports/bug_report_numpy_fft_irfftn_2025-08-18_04-59_50mb.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "numpy.lib.Arrayterator Integer Indexing Dimension Preservation",
      "target": "numpy.lib.Arrayterator",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Arrayterator violates NumPy's fundamental indexing contract: integer indexing does not reduce dimensionality as expected, instead preserving dimensions with size 1.",
      "package": "numpy",
      "file_name": "bug_report_numpy_lib_arrayterator_2025-08-18_05-00_0jug.md",
      "file_path": "opus-4.1/numpy/bug_reports/bug_report_numpy_lib_arrayterator_2025-08-18_05-00_0jug.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "numpy.linalg.eig Incorrect Eigenvectors for Matrices with Tiny Values",
      "target": "numpy.linalg.eig",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "`numpy.linalg.eig` produces incorrect eigenvectors when the input matrix contains very small but non-zero values (approximately between 1e-300 and 1e-20), causing the eigenvalue equation A @ v = \u03bb * v to not be satisfied even for non-defective eigenvalues.",
      "package": "numpy",
      "file_name": "bug_report_numpy_linalg_eig_2025-08-18_05-07_2za5.md",
      "file_path": "opus-4.1/numpy/bug_reports/bug_report_numpy_linalg_eig_2025-08-18_05-07_2za5.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "numpy.ma.compress Incorrectly Handles Masked Conditions",
      "target": "numpy.ma.compress",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `ma.compress` function incorrectly includes masked elements in its output when the condition array is a masked array with masked values. These masked condition values should be treated as False and excluded from the result.",
      "package": "numpy",
      "file_name": "bug_report_numpy_ma_compress_2025-08-18_05-06_2r3o.md",
      "file_path": "opus-4.1/numpy/bug_reports/bug_report_numpy_ma_compress_2025-08-18_05-06_2r3o.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "numpy.matrixlib Matrix String Parser Accepts Non-Numeric Literals",
      "target": "numpy.matrixlib.matrix",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `numpy.matrix` string parser incorrectly accepts Python literals like `None`, creating object-dtype matrices that cannot be used in mathematical operations, violating the expectation that matrices contain numeric data.",
      "package": "numpy",
      "file_name": "bug_report_numpy_matrixlib_2025-08-18_05-04_oq91.md",
      "file_path": "opus-4.1/numpy/bug_reports/bug_report_numpy_matrixlib_2025-08-18_05-04_oq91.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "numpy.polynomial.polynomial.polydiv Produces Infinity When Dividing Polynomial by Itself",
      "target": "numpy.polynomial.polynomial.polydiv",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "`polydiv` incorrectly produces `-inf` in the remainder when dividing a polynomial with very small coefficients by itself, instead of returning the expected quotient of [1] and remainder of [0].",
      "package": "numpy",
      "file_name": "bug_report_numpy_polynomial_polydiv_2025-08-18_04-59_xsjk.md",
      "file_path": "opus-4.1/numpy/bug_reports/bug_report_numpy_polynomial_polydiv_2025-08-18_04-59_xsjk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "numpy.polynomial.polynomial.polymul Violates Associativity with Shape Inconsistency",
      "target": "numpy.polynomial.polynomial.polymul",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "`polymul` produces inconsistent output shapes when multiplying polynomials with very small coefficients, causing associativity to fail with a shape mismatch error.",
      "package": "numpy",
      "file_name": "bug_report_numpy_polynomial_polymul_2025-08-18_05-00_a7f9.md",
      "file_path": "opus-4.1/numpy/bug_reports/bug_report_numpy_polynomial_polymul_2025-08-18_05-00_a7f9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "numpy.random.wald Produces Negative Values",
      "target": "numpy.random.wald",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `numpy.random.wald` function produces negative values when called with large mean parameters (>= 1e8), violating the mathematical definition of the Wald (inverse Gaussian) distribution which only produces positive values.",
      "package": "numpy",
      "file_name": "bug_report_numpy_random_wald_2025-08-18_05-02_fm33.md",
      "file_path": "opus-4.1/numpy/bug_reports/bug_report_numpy_random_wald_2025-08-18_05-02_fm33.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "numpy.rec.format_parser Whitespace Field Name Stripping",
      "target": "numpy.rec.format_parser",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `format_parser` class strips whitespace from field names, causing different whitespace-only names to become duplicates and making fields inaccessible by their original names.",
      "package": "numpy",
      "file_name": "bug_report_numpy_rec_format_parser_2025-08-18_05-01_jhwz.md",
      "file_path": "opus-4.1/numpy/bug_reports/bug_report_numpy_rec_format_parser_2025-08-18_05-01_jhwz.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "numpy.strings.str_len Incorrect Length for Strings with Leading Null Characters",
      "target": "numpy.strings.str_len",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `numpy.strings.str_len` function returns incorrect lengths for strings containing leading null characters (`\\x00`), treating them as empty strings instead of counting the null character.",
      "package": "numpy",
      "file_name": "bug_report_numpy_strings_str_len_2025-08-18_05-05_r6x2.md",
      "file_path": "opus-4.1/numpy/bug_reports/bug_report_numpy_strings_str_len_2025-08-18_05-05_r6x2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "numpy.typing Attribute Error Message Format Inconsistency",
      "target": "numpy.typing.__getattr__",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `__getattr__` method in `numpy.typing` uses `repr()` on attribute names in error messages, causing inconsistent formatting compared to standard Python AttributeError messages, especially for special characters.",
      "package": "numpy",
      "file_name": "bug_report_numpy_typing_2025-08-18_05-01_rgc1.md",
      "file_path": "opus-4.1/numpy/bug_reports/bug_report_numpy_typing_2025-08-18_05-01_rgc1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "optax.assignment.hungarian_algorithm Documentation Example Mismatch",
      "target": "optax.assignment.hungarian_algorithm",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The documentation example in `hungarian_algorithm` shows incorrect expected output for the row and column indices, though the total cost is correct.",
      "package": "optax",
      "file_name": "bug_report_optax_assignment_hungarian_algorithm_2025-08-18_23-19_xj5f.md",
      "file_path": "opus-4.1/optax/bug_reports/bug_report_optax_assignment_hungarian_algorithm_2025-08-18_23-19_xj5f.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "optax.contrib.normalize() Produces NaN with Zero Gradients",
      "target": "optax.contrib.normalize()",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `normalize()` function in optax.contrib produces NaN values when applied to zero gradients, causing undefined behavior in gradient descent optimization.",
      "package": "optax",
      "file_name": "bug_report_optax_contrib_normalize_2025-08-18_00-00_a3f2.md",
      "file_path": "opus-4.1/optax/bug_reports/bug_report_optax_contrib_normalize_2025-08-18_00-00_a3f2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "optax.exponential_decay Upper Bound Violation with Growth Rate",
      "target": "optax.exponential_decay",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "`exponential_decay` with `decay_rate > 1` (growth mode) violates its documented upper bound constraint due to floating-point precision issues in the clipping logic.",
      "package": "optax",
      "file_name": "bug_report_optax_schedules_exponential_decay_2025-08-18_13-43_p9q8.md",
      "file_path": "opus-4.1/optax/bug_reports/bug_report_optax_schedules_exponential_decay_2025-08-18_13-43_p9q8.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "optax.linear_onecycle_schedule Division by Zero with Small Steps",
      "target": "optax.linear_onecycle_schedule",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "`linear_onecycle_schedule` returns NaN for all step counts when `transition_steps=1` due to division by zero in the underlying `piecewise_interpolate_schedule` function.",
      "package": "optax",
      "file_name": "bug_report_optax_schedules_linear_onecycle_2025-08-18_13-43_x7n2.md",
      "file_path": "opus-4.1/optax/bug_reports/bug_report_optax_schedules_linear_onecycle_2025-08-18_13-43_x7n2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "optax.monte_carlo.moving_avg_baseline Division by Zero",
      "target": "optax.monte_carlo.moving_avg_baseline",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `moving_avg_baseline` function in optax.monte_carlo causes division by zero when `decay=1.0` and `zero_debias=True`, resulting in inf/nan values.",
      "package": "optax",
      "file_name": "bug_report_optax_monte_carlo_moving_avg_baseline_2025-08-18_02-35_d3f7.md",
      "file_path": "opus-4.1/optax/bug_reports/bug_report_optax_monte_carlo_moving_avg_baseline_2025-08-18_02-35_d3f7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "optax.perturbations dtype Parameter Not Respected",
      "target": "optax.perturbations.Normal.sample",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `sample()` methods of Normal and Gumbel distributions accept a `dtype` parameter but do not respect it when JAX's x64 mode is disabled (the default), returning float32 arrays even when float64 is explicitly requested.",
      "package": "optax",
      "file_name": "bug_report_optax_perturbations_2025-08-18_11-30_k3m9.md",
      "file_path": "opus-4.1/optax/bug_reports/bug_report_optax_perturbations_2025-08-18_11-30_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "optax.projections.projection_l1_ball Violates Constraint and Idempotence",
      "target": "optax.projections.projection_l1_ball",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The L1 ball projection function violates its mathematical constraint by producing outputs with L1 norm exceeding the specified scale, and fails to be idempotent (projecting twice gives different results than projecting once).",
      "package": "optax",
      "file_name": "bug_report_optax_projections_l1_ball_2025-08-18_23-17_mi82.md",
      "file_path": "opus-4.1/optax/bug_reports/bug_report_optax_projections_l1_ball_2025-08-18_23-17_mi82.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "optax.projections.projection_simplex Violates Idempotence",
      "target": "optax.projections.projection_simplex",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The simplex projection function violates the mathematical property of idempotence - projecting a point twice produces a different result than projecting once, with small numerical differences appearing in the bias term.",
      "package": "optax",
      "file_name": "bug_report_optax_projections_simplex_2025-08-18_23-18_u8uf.md",
      "file_path": "opus-4.1/optax/bug_reports/bug_report_optax_projections_simplex_2025-08-18_23-18_u8uf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "optax.schedules.linear_schedule Precision Loss for Small Initial Values",
      "target": "optax.schedules.linear_schedule",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-01-03",
      "summary": "The `linear_schedule` function loses precision when `init_value` is very small compared to `end_value`, causing it to return an incorrect value at step 0 instead of the exact `init_value`.",
      "package": "optax",
      "file_name": "bug_report_optax_linear_schedule_2025-01-03_00-00_x7j9.md",
      "file_path": "opus-4.1/optax/bug_reports/bug_report_optax_linear_schedule_2025-01-03_00-00_x7j9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "optax.second_order.hvp Crashes with Scalar Parameters",
      "target": "optax.second_order.hvp",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `hvp` function crashes with a ValueError when given scalar parameters, failing to handle this valid use case.",
      "package": "optax",
      "file_name": "bug_report_optax_second_order_hvp_scalar_2025-08-18_23-21_xfq5.md",
      "file_path": "opus-4.1/optax/bug_reports/bug_report_optax_second_order_hvp_scalar_2025-08-18_23-21_xfq5.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "optax.second_order.hvp Returns Dict Instead of Array for Nested Parameters",
      "target": "optax.second_order.hvp",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `hvp` function returns a nested dictionary structure when given nested parameters, violating its documented contract which states it returns \"An Array\".",
      "package": "optax",
      "file_name": "bug_report_optax_second_order_hvp_2025-08-18_23-21_8bdp.md",
      "file_path": "opus-4.1/optax/bug_reports/bug_report_optax_second_order_hvp_2025-08-18_23-21_8bdp.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "orbax.checkpoint merge_trees and intersect_trees Fail on Scalar PyTrees",
      "target": "orbax.checkpoint.transform_utils.merge_trees",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `merge_trees` and `intersect_trees` functions incorrectly handle scalar PyTrees, returning empty dictionaries instead of the scalar values, and crash when merging trees with type conflicts between scalars and dictionaries.",
      "package": "orbax-checkpoint",
      "file_name": "bug_report_orbax_checkpoint_merge_trees_2025-08-18_22-36_m2p8.md",
      "file_path": "opus-4.1/orbax-checkpoint/bug_reports/bug_report_orbax_checkpoint_merge_trees_2025-08-18_22-36_m2p8.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "orbax.checkpoint.tree.serialize_tree Empty Container Handling",
      "target": "orbax.checkpoint.tree.serialize_tree",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-01-02",
      "summary": "The `serialize_tree` function crashes with AssertionError or ValueError when serializing PyTrees containing empty containers within lists, particularly when empty containers appear before non-empty elements.",
      "package": "orbax-checkpoint",
      "file_name": "bug_report_orbax_serialize_tree_2025-01-02_14-30_a7f2.md",
      "file_path": "opus-4.1/orbax-checkpoint/bug_reports/bug_report_orbax_serialize_tree_2025-01-02_14-30_a7f2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "orbax.checkpoint.tree.serialize_tree Fails on PyTrees with Empty Nested Dictionaries",
      "target": "orbax.checkpoint.tree.serialize_tree",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `serialize_tree` function crashes with a ValueError when attempting to serialize valid PyTrees containing empty nested dictionaries, violating the round-trip property expected for serialization functions.",
      "package": "orbax-checkpoint",
      "file_name": "bug_report_orbax_checkpoint_serialize_tree_2025-08-18_22-35_x7k9.md",
      "file_path": "opus-4.1/orbax-checkpoint/bug_reports/bug_report_orbax_checkpoint_serialize_tree_2025-08-18_22-35_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "packaging.licenses KeyError on LicenseRef with Plus Operator",
      "target": "packaging.licenses.canonicalize_license_expression",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The function crashes with a KeyError when processing LicenseRef identifiers with the plus operator (e.g., `LicenseRef-0+`).",
      "package": "packaging",
      "file_name": "bug_report_packaging_licenses_2025-08-18_19-51_clob.md",
      "file_path": "opus-4.1/packaging/bug_reports/bug_report_packaging_licenses_2025-08-18_19-51_clob.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "packaging.markers InvalidVersion on Extra Field Comparisons",
      "target": "packaging.markers.Marker",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "Markers comparing the `extra` field with numeric or version-like strings crash with `InvalidVersion` when the extra field is empty (default environment), despite being accepted as valid by the parser.",
      "package": "packaging",
      "file_name": "bug_report_packaging_markers_extra_2025-08-18_19-51_lj3x.md",
      "file_path": "opus-4.1/packaging/bug_reports/bug_report_packaging_markers_extra_2025-08-18_19-51_lj3x.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "packaging.markers InvalidVersion on Non-Version Field Comparisons",
      "target": "packaging.markers.Marker",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "Markers comparing non-version fields (like `os_name`, `sys_platform`) with version-like strings using comparison operators crash with `InvalidVersion` during evaluation, despite being accepted as valid by the parser.",
      "package": "packaging",
      "file_name": "bug_report_packaging_markers_2025-08-18_19-51_i598.md",
      "file_path": "opus-4.1/packaging/bug_reports/bug_report_packaging_markers_2025-08-18_19-51_i598.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "packaging.metadata Inconsistent Whitespace Handling",
      "target": "packaging.metadata.parse_email",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `parse_email` function preserves trailing whitespace in field values instead of trimming it, leading to inconsistent behavior and potential comparison issues.",
      "package": "packaging",
      "file_name": "bug_report_packaging_metadata_whitespace_2025-08-18_19-51_o2yr.md",
      "file_path": "opus-4.1/packaging/bug_reports/bug_report_packaging_metadata_whitespace_2025-08-18_19-51_o2yr.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "packaging.metadata Name Validation Inconsistency",
      "target": "packaging.metadata",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `parse_email` function accepts package names that are later rejected by `Metadata.from_raw` and `Metadata.from_email`, violating the expected consistency between parsing methods.",
      "package": "packaging",
      "file_name": "bug_report_packaging_metadata_name_validation_2025-08-18_19-51_l8cz.md",
      "file_path": "opus-4.1/packaging/bug_reports/bug_report_packaging_metadata_name_validation_2025-08-18_19-51_l8cz.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "packaging.specifiers Filter/Contains Inconsistency for Prereleases",
      "target": "packaging.specifiers.Specifier",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `contains()` and `filter()` methods of `Specifier` return inconsistent results for prerelease versions when using the `!=` operator.",
      "package": "packaging",
      "file_name": "bug_report_packaging_specifiers_2025-08-18_19-52_l837.md",
      "file_path": "opus-4.1/packaging/bug_reports/bug_report_packaging_specifiers_2025-08-18_19-52_l837.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "packaging.specifiers SpecifierSet Intersection Violates Set Semantics",
      "target": "packaging.specifiers.SpecifierSet",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The intersection operator (`&`) for `SpecifierSet` produces incorrect results, including versions that are not members of both sets, violating fundamental set intersection semantics.",
      "package": "packaging",
      "file_name": "bug_report_packaging_specifiers_2025-08-18_19-52_edch.md",
      "file_path": "opus-4.1/packaging/bug_reports/bug_report_packaging_specifiers_2025-08-18_19-52_edch.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "packaging.specifiers SpecifierSet Prerelease AND Logic Violation",
      "target": "packaging.specifiers.SpecifierSet",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "SpecifierSet incorrectly evaluates prerelease versions against combined specifiers, violating AND logic when one specifier excludes prereleases and another includes them.",
      "package": "packaging",
      "file_name": "bug_report_packaging_specifiers_2025-08-18_19-58_j9kg.md",
      "file_path": "opus-4.1/packaging/bug_reports/bug_report_packaging_specifiers_2025-08-18_19-58_j9kg.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "packaging.tags Case Normalization Failure for Special Unicode Characters",
      "target": "packaging.tags.Tag",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The Tag class fails to maintain case-insensitive equality for Unicode characters with special case mappings like German eszett (\u00df \u2192 SS).",
      "package": "packaging",
      "file_name": "bug_report_packaging_tags_2025-08-18_19-52_wchs.md",
      "file_path": "opus-4.1/packaging/bug_reports/bug_report_packaging_tags_2025-08-18_19-52_wchs.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "packaging.utils is_normalized_name Incorrectly Accepts Consecutive Dashes",
      "target": "packaging.utils.is_normalized_name",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `is_normalized_name` function incorrectly accepts package names containing consecutive dashes (e.g., \"a--b\", \"0--0\") when it should reject them according to normalized name conventions.",
      "package": "packaging",
      "file_name": "bug_report_packaging_utils_2025-08-18_19-54_2nla.md",
      "file_path": "opus-4.1/packaging/bug_reports/bug_report_packaging_utils_2025-08-18_19-54_2nla.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pandas.Interval Zero-Width Interval Contains Bug",
      "target": "pandas.Interval",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Zero-width intervals (where left == right) incorrectly report that they don't contain their endpoint when closed='left' or closed='right', violating the mathematical definition of closed intervals.",
      "package": "pandas",
      "file_name": "bug_report_pandas_interval_zero_width_2025-08-18_05-08_c67u.md",
      "file_path": "opus-4.1/pandas/bug_reports/bug_report_pandas_interval_zero_width_2025-08-18_05-08_c67u.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pandas.api.types.is_re_compilable Crashes on Invalid Regex Patterns",
      "target": "pandas.api.types.is_re_compilable",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `is_re_compilable` function raises an unhandled `re.PatternError` exception when given invalid regex patterns, instead of returning `False` as expected.",
      "package": "pandas",
      "file_name": "bug_report_pandas_api_types_is_re_compilable_2025-08-18_05-04_qdx4.md",
      "file_path": "opus-4.1/pandas/bug_reports/bug_report_pandas_api_types_is_re_compilable_2025-08-18_05-04_qdx4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pandas.core.algorithms.factorize Conflates None and NaN",
      "target": "pandas.core.algorithms.factorize",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "`factorize` incorrectly treats `None` and `NaN` as identical values in object arrays when `use_na_sentinel=False`, violating the documented round-trip property.",
      "package": "pandas",
      "file_name": "bug_report_pandas_core_factorize_2025-08-18_05-10_6i0q.md",
      "file_path": "opus-4.1/pandas/bug_reports/bug_report_pandas_core_factorize_2025-08-18_05-10_6i0q.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pandas.io.json Column Name \"INF\" Converted to Float Infinity",
      "target": "pandas.read_json",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "`pandas.read_json` with orient='split' incorrectly converts the column name string \"INF\" to the float value infinity, corrupting column names.",
      "package": "pandas",
      "file_name": "bug_report_pandas_io_json_inf_2025-08-18_05-04_7b2k.md",
      "file_path": "opus-4.1/pandas/bug_reports/bug_report_pandas_io_json_inf_2025-08-18_05-04_7b2k.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pandas.io.json Float64 Dtype Lost for Zero Values",
      "target": "pandas.read_json",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "`pandas.read_json` incorrectly infers int64 dtype for columns containing only 0.0 float values, losing the original float64 dtype information.",
      "package": "pandas",
      "file_name": "bug_report_pandas_io_json_dtype_2025-08-18_05-04_9c3m.md",
      "file_path": "opus-4.1/pandas/bug_reports/bug_report_pandas_io_json_dtype_2025-08-18_05-04_9c3m.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pandas.io.json String-to-Integer Misinterpretation",
      "target": "pandas.read_json",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "`pandas.read_json` incorrectly converts string values consisting entirely of zeros to the integer 0, causing data corruption when reading JSON containing such strings.",
      "package": "pandas",
      "file_name": "bug_report_pandas_io_json_2025-08-18_05-04_6ia1.md",
      "file_path": "opus-4.1/pandas/bug_reports/bug_report_pandas_io_json_2025-08-18_05-04_6ia1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pandas.plotting.andrews_curves Accepts samples=0 Creating Empty Plot",
      "target": "pandas.plotting.andrews_curves",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "`andrews_curves` accepts `samples=0` without validation, resulting in an empty plot with no data points, which violates the expected behavior of generating curves.",
      "package": "pandas",
      "file_name": "bug_report_pandas_plotting_andrews_curves_2025-08-18_05-07_4ovq.md",
      "file_path": "opus-4.1/pandas/bug_reports/bug_report_pandas_plotting_andrews_curves_2025-08-18_05-07_4ovq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pandas.plotting.lag_plot ValueError with lag=0",
      "target": "pandas.plotting.lag_plot",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "`lag_plot` raises a ValueError when called with `lag=0` due to incorrect array slicing that produces mismatched array sizes.",
      "package": "pandas",
      "file_name": "bug_report_pandas_plotting_lag_plot_2025-08-18_05-06_hjfj.md",
      "file_path": "opus-4.1/pandas/bug_reports/bug_report_pandas_plotting_lag_plot_2025-08-18_05-06_hjfj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pandas.plotting.scatter_matrix Silently Ignores Invalid diagonal Parameter",
      "target": "pandas.plotting.scatter_matrix",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "`scatter_matrix` silently accepts invalid values for the `diagonal` parameter, producing empty diagonal plots instead of raising an error to inform the user of the invalid input.",
      "package": "pandas",
      "file_name": "bug_report_pandas_plotting_scatter_matrix_2025-08-18_05-08_qrnx.md",
      "file_path": "opus-4.1/pandas/bug_reports/bug_report_pandas_plotting_scatter_matrix_2025-08-18_05-08_qrnx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pandas.qcut Fails on Subnormal Float Values",
      "target": "pandas.qcut",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `pd.qcut` function crashes with a ValueError when processing arrays containing subnormal float values (values smaller than `np.finfo(float).tiny`), even though these are valid floating-point numbers that can occur in real pandas usage.",
      "package": "pandas",
      "file_name": "bug_report_pandas_qcut_2025-08-18_05-06_w9zu.md",
      "file_path": "opus-4.1/pandas/bug_reports/bug_report_pandas_qcut_2025-08-18_05-06_w9zu.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pandas.tseries.frequencies Incorrect Self-Comparison in Period Functions",
      "target": "pandas.tseries.frequencies.is_subperiod",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `is_subperiod` and `is_superperiod` functions incorrectly return `True` when comparing certain frequencies with themselves, violating the logical property that a period cannot be both a subperiod and superperiod of itself.",
      "package": "pandas",
      "file_name": "bug_report_pandas_tseries_frequencies_2025-08-18_05-05_ensk.md",
      "file_path": "opus-4.1/pandas/bug_reports/bug_report_pandas_tseries_frequencies_2025-08-18_05-05_ensk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "flask.json.dumps Does Not Sort Keys Without App Context",
      "target": "flask.json.dumps",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "`flask.json.dumps()` fails to sort dictionary keys when called without an active Flask application context, violating the expected behavior that Flask's JSON serialization should always sort keys by default as specified in `DefaultJSONProvider.sort_keys = True`.",
      "package": "pathlib",
      "file_name": "bug_report_flask_json_dumps_2025-08-18_04-50_oo86.md",
      "file_path": "opus-4.1/pathlib/bug_reports/bug_report_flask_json_dumps_2025-08-18_04-50_oo86.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pathlib.PurePath.with_suffix() Crash on Double-Dot Filenames",
      "target": "pathlib.PurePath.with_suffix",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "`pathlib.PurePath.with_suffix('')` crashes with `ValueError` when called on filenames that start with two dots followed by text (e.g., \"..file\"), because it attempts to create an invalid filename consisting of just a single dot.",
      "package": "pathlib",
      "file_name": "bug_report_pathlib_with_suffix_2025-08-18_04-53_z9lr.md",
      "file_path": "opus-4.1/pathlib/bug_reports/bug_report_pathlib_with_suffix_2025-08-18_04-53_z9lr.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pdfkit TypeError on Non-String Input to from_string()",
      "target": "pdfkit.from_string()",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `pdfkit.from_string()` function crashes with a TypeError when passed non-string input (e.g., numbers, None, booleans) instead of gracefully handling or converting the input.",
      "package": "pdfkit",
      "file_name": "bug_report_pdfkit_2025-08-19_14-30_k8f2.md",
      "file_path": "opus-4.1/pdfkit/bug_reports/bug_report_pdfkit_2025-08-19_14-30_k8f2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pdfkit.configuration Incorrect Exception Type for Null Bytes",
      "target": "pdfkit.configuration.Configuration",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Configuration raises ValueError instead of IOError when given binary paths containing null bytes, violating the API contract.",
      "package": "pdfkit",
      "file_name": "bug_report_pdfkit_configuration_2025-08-19_03-01_htte.md",
      "file_path": "opus-4.1/pdfkit/bug_reports/bug_report_pdfkit_configuration_2025-08-19_03-01_htte.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pdfkit.pdfkit Boolean False Handling in Options",
      "target": "pdfkit.pdfkit.PDFKit._normalize_options",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The _normalize_options method incorrectly yields boolean False values instead of converting them to empty strings, violating the method's documented behavior for boolean option values.",
      "package": "pdfkit",
      "file_name": "bug_report_pdfkit_pdfkit_boolean_handling_2025-08-19_03-03_7uy9.md",
      "file_path": "opus-4.1/pdfkit/bug_reports/bug_report_pdfkit_pdfkit_boolean_handling_2025-08-19_03-03_7uy9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pdfkit.pdfkit Boolean False Not Normalized to Empty String",
      "target": "pdfkit.pdfkit.PDFKit._normalize_options",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `_normalize_options` method incorrectly handles boolean False values. According to the code logic at line 247, boolean values should be converted to empty strings, but False is passed through unchanged due to incorrect conditional logic.",
      "package": "pdfkit",
      "file_name": "bug_report_pdfkit_boolean_normalization_2025-08-19_03-03_n2sn.md",
      "file_path": "opus-4.1/pdfkit/bug_reports/bug_report_pdfkit_boolean_normalization_2025-08-19_03-03_n2sn.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pdfkit.pdfkit Meta Tag Content Parsing Truncation",
      "target": "pdfkit.pdfkit.PDFKit._find_options_in_meta",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The meta tag content parsing regex truncates values containing quote or apostrophe characters, causing incorrect option extraction from HTML meta tags.",
      "package": "pdfkit",
      "file_name": "bug_report_pdfkit_pdfkit_meta_tag_parsing_2025-08-19_03-03_292q.md",
      "file_path": "opus-4.1/pdfkit/bug_reports/bug_report_pdfkit_pdfkit_meta_tag_parsing_2025-08-19_03-03_292q.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pdfkit.pdfkit Regex Injection in Meta Tag Parsing",
      "target": "pdfkit.pdfkit.PDFKit._find_options_in_meta",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `_find_options_in_meta` method in pdfkit fails to escape regex special characters in the meta_tag_prefix, causing regex compilation errors when the prefix contains characters like parentheses, brackets, or other regex metacharacters.",
      "package": "pdfkit",
      "file_name": "bug_report_pdfkit_regex_injection_2025-08-19_03-03_sju3.md",
      "file_path": "opus-4.1/pdfkit/bug_reports/bug_report_pdfkit_regex_injection_2025-08-19_03-03_sju3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pdfkit.source TypeError with Non-String/Non-FileObj Input",
      "target": "pdfkit.source.Source",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The Source class crashes with a TypeError when initialized with type='file' and a non-string, non-file-like object, instead of raising a meaningful validation error.",
      "package": "pdfkit",
      "file_name": "bug_report_pdfkit_source_2025-08-19_03-02_uvmo.md",
      "file_path": "opus-4.1/pdfkit/bug_reports/bug_report_pdfkit_source_2025-08-19_03-02_uvmo.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "praw.models.util.permissions_string Incorrectly Handles None Values",
      "target": "praw.models.util.permissions_string",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-01-21",
      "summary": "The `permissions_string` function incorrectly handles `None` values in the permissions list by converting them to the string `\"None\"` instead of raising an error or filtering them out.",
      "package": "praw",
      "file_name": "bug_report_praw_models_util_permissions_string_2025-01-21_23-45_x7n3.md",
      "file_path": "opus-4.1/praw/bug_reports/bug_report_praw_models_util_permissions_string_2025-01-21_23-45_x7n3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "praw.objector TypeError on Lists with Primitives",
      "target": "praw.objector.Objector.objectify",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `objectify` method in PRAW's Objector class crashes with a TypeError when processing lists containing primitive types (integers, floats, etc.), which could occur in Reddit API responses.",
      "package": "praw",
      "file_name": "bug_report_praw_objector_2025-08-18_23-23_v6hp.md",
      "file_path": "opus-4.1/praw/bug_reports/bug_report_praw_objector_2025-08-18_23-23_v6hp.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "praw.util.camel_to_snake Incorrectly Splits Acronyms",
      "target": "praw.util.camel_to_snake",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `camel_to_snake` function incorrectly handles strings with 3+ consecutive uppercase letters followed by a lowercase letter, splitting acronyms like \"API\" into \"ap_i\" instead of keeping them together.",
      "package": "praw",
      "file_name": "bug_report_praw_util_snake_2025-08-18_23-22_1mij.md",
      "file_path": "opus-4.1/praw/bug_reports/bug_report_praw_util_snake_2025-08-18_23-22_1mij.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "praw.util.snake.snake_case_keys Data Loss from Key Collisions",
      "target": "praw.util.snake.snake_case_keys",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `snake_case_keys` function silently loses data when converting dictionaries with keys that differ only in case, as both keys get transformed to the same snake_case key.",
      "package": "praw",
      "file_name": "bug_report_praw_util_snake_2025-08-18_23-21_yzkf.md",
      "file_path": "opus-4.1/praw/bug_reports/bug_report_praw_util_snake_2025-08-18_23-21_yzkf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "money module - Incorrect __rsub__ Implementation",
      "target": "money.money.Money.__rsub__",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `__rsub__` method in the Money class incorrectly computes `self - other` instead of `other - self`, violating Python's reverse operator protocol.",
      "package": "py-money",
      "file_name": "bug_report_money___rsub___2025-08-18_21-54_zpq6.md",
      "file_path": "opus-4.1/py-money/bug_reports/bug_report_money___rsub___2025-08-18_21-54_zpq6.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "money.currency Inconsistent Sub-Unit Configuration",
      "target": "money.currency",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "29 currencies have incorrectly configured sub_unit values that don't match their decimal precision, causing Money.from_sub_units() to fail for most input values.",
      "package": "py-money",
      "file_name": "bug_report_money_currency_2025-08-18_09-45_x3k9.md",
      "file_path": "opus-4.1/py-money/bug_reports/bug_report_money_currency_2025-08-18_09-45_x3k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "money.money Multiplication/Division Inverse Violation",
      "target": "money.money.Money",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The Money class violates the mathematical property that multiplication and division should be inverse operations due to intermediate rounding, causing `(m * x) / x != m` for certain values.",
      "package": "py-money",
      "file_name": "bug_report_money_money_2025-08-18_21-53_a4xf.md",
      "file_path": "opus-4.1/py-money/bug_reports/bug_report_money_money_2025-08-18_21-53_a4xf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "AbstractAssetCache Silent Overwrite on Name Collisions",
      "target": "pyatlan.cache.abstract_asset_cache.AbstractAssetCache",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "AbstractAssetCache silently overwrites cached entries when assets have the same name or qualified_name but different GUIDs, leading to cache corruption and incorrect asset retrieval.",
      "package": "pyatlan",
      "file_name": "bug_report_pyatlan_cache_abstract_asset_cache_2025-08-18_21-09_027f.md",
      "file_path": "opus-4.1/pyatlan/bug_reports/bug_report_pyatlan_cache_abstract_asset_cache_2025-08-18_21-09_027f.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "UserCache Bidirectional Map Inconsistency",
      "target": "pyatlan.cache.user_cache.UserCache",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "UserCache's bidirectional maps become inconsistent when multiple user IDs have the same username or email, silently overwriting previous mappings and breaking cache integrity.",
      "package": "pyatlan",
      "file_name": "bug_report_pyatlan_cache_user_cache_2025-08-18_21-09_ugvx.md",
      "file_path": "opus-4.1/pyatlan/bug_reports/bug_report_pyatlan_cache_user_cache_2025-08-18_21-09_ugvx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "VCRPrettyPrintJSONBody.deserialize AttributeError on Non-Dictionary JSON",
      "target": "pyatlan.test_utils.base_vcr.VCRPrettyPrintJSONBody.deserialize",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "VCRPrettyPrintJSONBody.deserialize crashes with AttributeError when given valid JSON that doesn't parse to a dictionary (e.g., numbers, strings, arrays, booleans, null).",
      "package": "pyatlan",
      "file_name": "bug_report_pyatlan_test_utils_base_vcr_2025-08-18_21-09_92bs.md",
      "file_path": "opus-4.1/pyatlan/bug_reports/bug_report_pyatlan_test_utils_base_vcr_2025-08-18_21-09_92bs.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyatlan.events Inverted Logic in has_changes Method",
      "target": "pyatlan.events.atlan_event_handler.AtlanEventHandler.has_changes",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `has_changes` method in `AtlanEventHandler` returns the opposite of what its documentation claims - it returns `True` when assets are equal (no changes) and `False` when they differ (has changes).",
      "package": "pyatlan",
      "file_name": "bug_report_pyatlan_events_2025-08-18_21-10_p9v5.md",
      "file_path": "opus-4.1/pyatlan/bug_reports/bug_report_pyatlan_events_2025-08-18_21-10_p9v5.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyatlan.model.utils to_python_class_name Returns Invalid Class Names",
      "target": "pyatlan.model.utils.to_python_class_name",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `to_python_class_name` function fails to handle Python keywords and doesn't properly capitalize after removing leading digits, producing invalid Python class names.",
      "package": "pyatlan",
      "file_name": "bug_report_pyatlan_model_utils_2025-08-18_21-09_z5sq.md",
      "file_path": "opus-4.1/pyatlan/bug_reports/bug_report_pyatlan_model_utils_2025-08-18_21-09_z5sq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyatlan.model.utils.to_python_class_name Invalid Class Names",
      "target": "pyatlan.model.utils.to_python_class_name",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `to_python_class_name` function violates its documented contract by returning invalid Python class names in two scenarios: returning lowercase-starting identifiers and returning Python keywords.",
      "package": "pyatlan",
      "file_name": "bug_report_pyatlan_model_utils_2025-08-18_21-10_o171.md",
      "file_path": "opus-4.1/pyatlan/bug_reports/bug_report_pyatlan_model_utils_2025-08-18_21-10_o171.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyatlan.multipart_data_generator Header Injection Vulnerability",
      "target": "pyatlan.multipart_data_generator.MultipartDataGenerator",
      "severity": "High",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The MultipartDataGenerator class fails to properly escape special characters in filenames, allowing HTTP header injection attacks through CRLF sequences and breaking multipart/form-data structure integrity.",
      "package": "pyatlan",
      "file_name": "bug_report_pyatlan_multipart_data_generator_2025-08-18_21-13_rtj1.md",
      "file_path": "opus-4.1/pyatlan/bug_reports/bug_report_pyatlan_multipart_data_generator_2025-08-18_21-13_rtj1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyatlan.pkg.utils.validate_multiselect Fails on Nested Lists",
      "target": "pyatlan.pkg.utils.validate_multiselect",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `validate_multiselect` function crashes with a ValidationError when given a JSON string containing nested lists, even though such structures are valid JSON arrays.",
      "package": "pyatlan",
      "file_name": "bug_report_pyatlan_pkg_utils_2025-08-18_21-43_7xq2.md",
      "file_path": "opus-4.1/pyatlan/bug_reports/bug_report_pyatlan_pkg_utils_2025-08-18_21-43_7xq2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyatlan.utils.to_camel_case Idempotence Violation",
      "target": "pyatlan.utils.to_camel_case",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `to_camel_case` function is not idempotent. Applying it twice produces different results than applying it once, violating the expected mathematical property that f(f(x)) = f(x) for a case conversion function.",
      "package": "pyatlan",
      "file_name": "bug_report_pyatlan_utils_to_camel_case_2025-08-18_21-08_q5sm.md",
      "file_path": "opus-4.1/pyatlan/bug_reports/bug_report_pyatlan_utils_to_camel_case_2025-08-18_21-08_q5sm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyatlan.utils.to_camel_case Idempotence and Unicode Handling Issues",
      "target": "pyatlan.utils.to_camel_case",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `to_camel_case` function has two distinct bugs: (1) it is not idempotent - applying it twice produces different results than applying it once, and (2) it doesn't preserve certain Unicode characters like the German sharp s (\u00df).",
      "package": "pyatlan",
      "file_name": "bug_report_pyatlan_utils_2025-08-18_22-52_helk.md",
      "file_path": "opus-4.1/pyatlan/bug_reports/bug_report_pyatlan_utils_2025-08-18_22-52_helk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyatlan.utils.to_camel_case IndexError on Empty/Whitespace Input",
      "target": "pyatlan.utils.to_camel_case",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `to_camel_case` function crashes with IndexError when given empty strings, whitespace-only strings, or strings that become empty after delimiter replacement.",
      "package": "pyatlan",
      "file_name": "bug_report_pyatlan_utils_to_camel_case_crash_2025-08-18_21-12_k5vd.md",
      "file_path": "opus-4.1/pyatlan/bug_reports/bug_report_pyatlan_utils_to_camel_case_crash_2025-08-18_21-12_k5vd.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyatlan.utils.to_camel_case Non-Idempotent Transformation",
      "target": "pyatlan.utils.to_camel_case",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `to_camel_case` function is not idempotent - applying it twice to certain inputs produces different results than applying it once.",
      "package": "pyatlan",
      "file_name": "bug_report_pyatlan_utils_to_camel_case_idempotence_2025-08-18_21-12_xv4i.md",
      "file_path": "opus-4.1/pyatlan/bug_reports/bug_report_pyatlan_utils_to_camel_case_idempotence_2025-08-18_21-12_xv4i.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pycld2.detect textBytesFound Reports 2 Extra Bytes",
      "target": "pycld2.detect",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `textBytesFound` field returned by `pycld2.detect()` consistently reports 2 more bytes than the actual UTF-8 byte length of the input text, appearing to count null terminators that aren't part of the input.",
      "package": "pycld2",
      "file_name": "bug_report_pycld2_detect_2025-08-18_02-14_h7x9.md",
      "file_path": "opus-4.1/pycld2/bug_reports/bug_report_pycld2_detect_2025-08-18_02-14_h7x9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyct.build.get_setup_version Returns String \"None\" Instead of Version",
      "target": "pyct.build.get_setup_version",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-01-18",
      "summary": "The `get_setup_version()` function returns the string `\"None\"` instead of the actual version when called, even when a valid `.version` file exists.",
      "package": "pyct",
      "file_name": "bug_report_pyct_build_2025-01-18_14-30_x7k2.md",
      "file_path": "opus-4.1/pyct/bug_reports/bug_report_pyct_build_2025-01-18_14-30_x7k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyct.report Output Format Ambiguity",
      "target": "pyct.report",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `report()` function in pyct.report produces ambiguous output when package names contain the delimiter sequence \" # \", making it impossible to reliably parse the output format.",
      "package": "pyct",
      "file_name": "bug_report_pyct_report_2025-08-18_21-03_yf3m.md",
      "file_path": "opus-4.1/pyct/bug_reports/bug_report_pyct_report_2025-08-18_21-03_yf3m.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.traversal Invalid Percent Encoding Accepted",
      "target": "pyramid.traversal.traversal_path",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `traversal_path` function incorrectly accepts invalid percent-encoded sequences without raising `URLDecodeError`, violating URL encoding standards and its documented behavior.",
      "package": "pyct",
      "file_name": "bug_report_pyramid_traversal_2025-08-18_21-03_tkze.md",
      "file_path": "opus-4.1/pyct/bug_reports/bug_report_pyramid_traversal_2025-08-18_21-03_tkze.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.traversal Null Byte Security Vulnerability",
      "target": "pyramid.traversal.split_path_info",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `split_path_info` function preserves null bytes (`\\x00`) in path segments, creating a potential security vulnerability that could enable path traversal attacks.",
      "package": "pyct",
      "file_name": "bug_report_pyramid_traversal_2025-08-18_21-03_1zxn.md",
      "file_path": "opus-4.1/pyct/bug_reports/bug_report_pyramid_traversal_2025-08-18_21-03_1zxn.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Pydantic JSON Round-Trip Fails for Special Float Values",
      "target": "pydantic.BaseModel.model_dump_json",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Pydantic's JSON serialization violates the round-trip property for special float values (infinity, negative infinity, and NaN). These values are serialized as `null` which cannot be deserialized back to the original float values.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_2025-08-18_20-28_6l8q.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_2025-08-18_20-28_6l8q.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic._internal._validators.import_string Inconsistent Error Handling",
      "target": "pydantic._internal._validators.import_string",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `import_string` function fails to consistently wrap import errors in `PydanticCustomError`, allowing `TypeError` to leak through for relative import paths.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_import_string_2025-08-18_20-28_aeze.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_import_string_2025-08-18_20-28_aeze.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic._migration.getattr_migration KeyError on Non-Existent Modules",
      "target": "pydantic._migration.getattr_migration",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `getattr_migration` function crashes with a `KeyError` when the wrapper it returns is called for a module name that doesn't exist in `sys.modules`, instead of raising the expected `AttributeError`.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_generics_2025-08-18_19-39_tiw6.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_generics_2025-08-18_19-39_tiw6.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic._migration.getattr_migration KeyError on Non-existent Modules",
      "target": "pydantic._migration.getattr_migration",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `getattr_migration` function raises `KeyError` instead of `AttributeError` when accessing attributes of non-existent modules, violating Python's expected attribute access behavior.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_migration_getattr_migration_2025-08-18_19-42_01au.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_migration_getattr_migration_2025-08-18_19-42_01au.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.alias_generators Breaks Round-Trip and Idempotence Properties",
      "target": "pydantic.alias_generators",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The case conversion functions in `pydantic.alias_generators` violate round-trip and idempotence properties due to inconsistent handling of letter-digit boundaries.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_alias_generators_2025-08-18_19-18_6iio.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_alias_generators_2025-08-18_19-18_6iio.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.aliases.AliasGenerator Inconsistent Non-Callable Handling",
      "target": "pydantic.aliases.AliasGenerator",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "AliasGenerator accepts non-callable values for its transformation functions but handles them inconsistently, either silently returning None or raising TypeError depending on the combination of parameters.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_aliases_2025-08-18_20-31_g425.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_aliases_2025-08-18_20-31_g425.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.annotated_handlers GetJsonSchemaHandler.mode Attribute Not Initialized",
      "target": "pydantic.annotated_handlers.GetJsonSchemaHandler",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "GetJsonSchemaHandler's docstring documents a `mode` attribute, but accessing it raises AttributeError because the attribute is never initialized.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_annotated_handlers_2025-08-18_20-24_8q1d.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_annotated_handlers_2025-08-18_20-24_8q1d.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.color HSL Round-Trip Precision Loss",
      "target": "pydantic.color.Color",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The Color class loses precision when converting to HSL string format and back, causing RGB values to differ by up to 4 units due to insufficient decimal precision in the as_hsl() method.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_color_2025-08-18_19-22_468x.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_color_2025-08-18_19-22_468x.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.color RGBA 100% Alpha Value Parsing Failure",
      "target": "pydantic.color.parse_str",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `parse_str` function fails to parse RGBA color strings with alpha value of \"100%\", even though this is a valid percentage value representing full opacity.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_color_alpha_percentage_2025-08-18_22-56_2usc.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_color_alpha_percentage_2025-08-18_22-56_2usc.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.color Scientific Notation Parsing Failure",
      "target": "pydantic.color.parse_str",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `parse_str` function fails to parse color strings containing scientific notation, even though such strings can be legitimately generated when formatting floating-point color values.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_color_2025-08-18_22-54_4m0z.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_color_2025-08-18_22-54_4m0z.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.decorator Module Descriptor Attributes Access Failure",
      "target": "pydantic.decorator.getattr_migration",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `getattr_migration` function fails to handle module descriptor attributes like `__dict__`, `__class__`, causing AttributeError when these valid module attributes are accessed through the migration wrapper.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_decorator_2025-08-18_20-28_82wf.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_decorator_2025-08-18_20-28_82wf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.env_settings BaseSettings Error Handling Inconsistency",
      "target": "pydantic.env_settings",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `BaseSettings` migration error is inconsistently handled across different pydantic modules, causing unhelpful AttributeError instead of the intended PydanticImportError with migration instructions.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_env_settings_2025-08-18_20-25_taom.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_env_settings_2025-08-18_20-25_taom.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.experimental.pipeline str_strip Does Not Strip All Unicode Whitespace",
      "target": "pydantic.experimental.pipeline._Pipeline.str_strip",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `str_strip()` method in pydantic.experimental.pipeline does not strip all Unicode whitespace characters that Python's built-in `str.strip()` removes, leading to inconsistent behavior.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_experimental_pipeline_2025-08-18_20-28_vnzh.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_experimental_pipeline_2025-08-18_20-28_vnzh.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.fields Decimal Constraint Validation Issue",
      "target": "pydantic.fields.Field",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Pydantic's Field allows contradictory decimal constraints (decimal_places > max_digits) and incorrectly validates values against these impossible constraints.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_fields_2025-08-18_19-44_irmp.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_fields_2025-08-18_19-44_irmp.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.functional_serializers Multiple Serializers Not Composing",
      "target": "pydantic.functional_serializers.PlainSerializer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "When multiple `PlainSerializer` or `WrapSerializer` instances are specified in an `Annotated` type, only the last serializer is applied, ignoring all previous ones. This violates the expected composition behavior.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_functional_serializers_2025-08-18_19-41_xtdb.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_functional_serializers_2025-08-18_19-41_xtdb.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.main None Defaults Break JSON Round-Trip",
      "target": "pydantic.main.BaseModel",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Pydantic allows creating models with None as default value for non-optional fields (int, float, str, bool), but these models fail JSON round-trip validation.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_main_2025-08-18_19-40_fcil.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_main_2025-08-18_19-40_fcil.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.networks URL Path Round-Trip Failure",
      "target": "pydantic.networks",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "URL round-trip property is systematically violated for ALL path values across ALL URL types (HttpUrl, WebsocketUrl, FtpUrl, AnyUrl, etc.). The `build()` method always prepends an extra `/` to paths, making URLs non-reconstructible from their components.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_networks_2025-08-18_19-40_vx6l.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_networks_2025-08-18_19-40_vx6l.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.plugin._loader Missing Cache When Plugins Disabled",
      "target": "pydantic.plugin._loader.get_plugins",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `get_plugins()` function fails to cache results when plugins are disabled via environment variable, causing repeated environment checks on every call instead of using cached empty results.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_plugin__loader_2025-08-18_19-41_cmy2.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_plugin__loader_2025-08-18_19-41_cmy2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.schema KeyError on Nonexistent Module Access",
      "target": "pydantic.schema.getattr_migration",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `getattr_migration` function crashes with `KeyError` when accessing attributes on a module that doesn't exist in `sys.modules`, instead of raising the expected `AttributeError`.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_schema_2025-08-18_19-41_l4v7.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_schema_2025-08-18_19-41_l4v7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.type_adapter TypeAdapter Violates Round-Trip Property for Bytes",
      "target": "pydantic.type_adapter.TypeAdapter",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "TypeAdapter accepts arbitrary bytes via `validate_python()` but fails to serialize non-UTF-8 bytes with `dump_json()`, violating the round-trip property.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_type_adapter_2025-08-18_19-44_3bkd.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_type_adapter_2025-08-18_19-44_3bkd.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.types.ByteSize Precision Loss in human_readable()",
      "target": "pydantic.types.ByteSize",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "ByteSize.human_readable() method loses significant precision (up to 3%) by aggressively rounding down, making the round-trip conversion non-reversible and causing data loss.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_types_ByteSize_2025-08-18_19-42_olxp.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_types_ByteSize_2025-08-18_19-42_olxp.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.typing KeyError on Non-Existent Module Access",
      "target": "pydantic.typing.getattr_migration",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `getattr_migration` function crashes with `KeyError` when accessing attributes from non-existent modules, instead of raising the expected `AttributeError`.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_typing_2025-08-18_19-39_rxf7.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_typing_2025-08-18_19-39_rxf7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.utils.getattr_migration KeyError on Non-Existent Modules",
      "target": "pydantic.utils.getattr_migration",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `getattr_migration` function raises `KeyError` instead of `AttributeError` when the module name doesn't exist in `sys.modules`.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_utils_2025-08-18_19-40_od3x.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_utils_2025-08-18_19-40_od3x.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.v1 Decimal Precision Loss in JSON Serialization",
      "target": "pydantic.v1.BaseModel",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "High-precision Decimal values lose precision when serialized to JSON and deserialized back, violating the round-trip property and potentially causing data corruption.",
      "package": "pydantic",
      "file_name": "bug_report_pydantic_v1_decimal_2025-08-18_19-43_ozsw.md",
      "file_path": "opus-4.1/pydantic/bug_reports/bug_report_pydantic_v1_decimal_2025-08-18_19-43_ozsw.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.asset Backslash Handling on Unix",
      "target": "pyramid.asset.abspath_from_asset_spec",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "On Unix systems, `abspath_from_asset_spec` incorrectly treats a single backslash `\\` as an absolute path, causing it to raise a ValueError even though backslash is not a path separator on Unix.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_asset_2025-08-18_20-49_xe6w.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_asset_2025-08-18_20-49_xe6w.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.asset Empty Package Name Crash",
      "target": "pyramid.asset.abspath_from_asset_spec",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "`abspath_from_asset_spec` crashes with ValueError or ModuleNotFoundError when given asset specs with empty or non-existent package names like `:` or `0:`.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_asset_2025-08-18_20-49_ebpm.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_asset_2025-08-18_20-49_ebpm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.asset Trailing Slash Path Recognition Bug",
      "target": "pyramid.asset.asset_spec_from_abspath",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `asset_spec_from_abspath` function fails to correctly recognize package directories as part of the package when there's no trailing slash, and fails entirely when `package_path` returns a path with a trailing slash.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_asset_2025-08-18_20-44_53ay.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_asset_2025-08-18_20-44_53ay.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.authentication Empty Tokens List Round-Trip Failure",
      "target": "pyramid.authentication.AuthTicket",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "When an empty tokens list is passed to AuthTicket and then parsed back using parse_ticket, it returns `['']` instead of `[]`, breaking the round-trip property and causing incorrect boolean evaluation.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_authentication_2025-08-18_20-44_g86o.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_authentication_2025-08-18_20-44_g86o.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.authentication Invalid IP Address Handling Causes Crash",
      "target": "pyramid.authentication.encode_ip_timestamp",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `encode_ip_timestamp` function crashes with UnicodeEncodeError when given an IPv4 address with octets greater than 255, causing authentication failures in AuthTicket creation.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_authentication_2025-08-18_20-44_d4bf.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_authentication_2025-08-18_20-44_d4bf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.authorization ACL Processing Logic Error",
      "target": "pyramid.authorization.ACLHelper.principals_allowed_by_permission",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-01-18",
      "summary": "The `principals_allowed_by_permission` method incorrectly includes `Everyone` in the allowed principals set when an ACL contains both `Allow Everyone` and `Deny Everyone` for the same permission (with Allow appearing first).",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_authorization_2025-01-18_00-30_x9k2.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_authorization_2025-01-18_00-30_x9k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.csrf CookieCSRFStoragePolicy Modifies Request State",
      "target": "pyramid.csrf.CookieCSRFStoragePolicy.new_csrf_token",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `CookieCSRFStoragePolicy.new_csrf_token()` method incorrectly modifies the `request.cookies` dictionary, making it appear as if the client sent a CSRF token when it was actually generated server-side.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_csrf_2025-08-18_02-12_k3m9.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_csrf_2025-08-18_02-12_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.encode Non-ASCII Safe Parameter Handling",
      "target": "pyramid.encode.url_quote",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `url_quote` and `quote_plus` functions in pyramid.encode fail to properly handle non-ASCII characters in the `safe` parameter, causing these characters to be encoded even when explicitly marked as safe.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_encode_2025-08-18_20-43_ow0p.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_encode_2025-08-18_20-43_ow0p.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.encode UnicodeEncodeError on Surrogate Characters",
      "target": "pyramid.encode.urlencode",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The URL encoding functions in pyramid.encode crash with UnicodeEncodeError when processing Unicode surrogate characters (U+D800-U+DFFF), potentially causing denial of service when handling user input.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_encode_2025-08-18_20-53_qmh4.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_encode_2025-08-18_20-53_qmh4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.encode.urlencode Documentation/Contract Violation",
      "target": "pyramid.encode.urlencode",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The documentation for `pyramid.encode.urlencode` states that None values are \"dropped from the resulting output\", but the implementation actually includes them as `key=` (key with empty value).",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_encode_urlencode_2025-08-18_20-41_i4yg.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_encode_urlencode_2025-08-18_20-41_i4yg.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.events.BeforeRender Attribute/Dictionary Key Conflict",
      "target": "pyramid.events.BeforeRender",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `BeforeRender` class has a naming conflict where `rendering_val` can simultaneously exist as both a dictionary key and an instance attribute with different values, violating the principle of least surprise.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_events_BeforeRender_2025-08-18_20-44_8r7b.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_events_BeforeRender_2025-08-18_20-44_8r7b.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.httpexceptions HTTP Redirect Exceptions Crash with Control Characters in Location",
      "target": "pyramid.httpexceptions._HTTPMove",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "HTTP redirect exception classes (HTTPFound, HTTPMovedPermanently, etc.) crash during construction when the location parameter contains control characters like `\\r` or `\\n`, raising ValueError instead of handling or sanitizing the input.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_httpexceptions_2025-08-18_14-30_x3f9.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_httpexceptions_2025-08-18_14-30_x3f9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.i18n Missing _catalog Attribute in Domain Translations",
      "target": "pyramid.i18n.Translations",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "`Translations` objects created without a fileobj lack the `_catalog` attribute, causing AttributeError when used as domain-specific translations via `dgettext()`, `dugettext()`, `dngettext()`, and `dungettext()` methods.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_i18n_2025-08-18_22-53_fgcn.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_i18n_2025-08-18_22-53_fgcn.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.location AttributeError in inside() Function",
      "target": "pyramid.location.inside",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `inside()` function crashes with AttributeError when given objects that lack a `__parent__` attribute, while the related `lineage()` function handles this case gracefully.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_location_2025-08-18_20-42_un1j.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_location_2025-08-18_20-42_un1j.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.predicates.RequestParamPredicate Whitespace Handling Bug",
      "target": "pyramid.predicates.RequestParamPredicate",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "RequestParamPredicate strips whitespace from parameter keys and values during parsing but then looks for the stripped keys in request.params, causing predicates with whitespace-padded parameters to never match.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_predicates_2025-08-18_20-45_zjpy.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_predicates_2025-08-18_20-45_zjpy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.registry Introspectable.unrelate() Fails for Non-Existent Targets",
      "target": "pyramid.registry.Introspectable",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "Introspectable.unrelate() stores unrelate operations that are later processed during registration. However, if the target introspectable doesn't exist when register() is called, it raises a KeyError instead of gracefully handling the missing target.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_registry_2025-08-18_00-00_a7f2.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_registry_2025-08-18_00-00_a7f2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.renderers JSONP Callback Validation Overly Restrictive",
      "target": "pyramid.renderers.JSONP",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The JSONP renderer's callback validation regex incorrectly requires a minimum of 3 characters, rejecting common valid JavaScript callback names like 'cb', 'fn', and single-character identifiers.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_renderers_2025-08-18_11-46_k8m2.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_renderers_2025-08-18_11-46_k8m2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.request IPv6 Address Mangling in URL Generation",
      "target": "pyramid.request.Request._partial_application_url",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_partial_application_url` method in pyramid.request completely mangles IPv6 addresses, resulting in invalid URLs when IPv6 hosts are provided.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_request_2025-08-18_17-49_k3m9.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_request_2025-08-18_17-49_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.request Unicode Encoding Error in call_app_with_subpath_as_path_info",
      "target": "pyramid.request.call_app_with_subpath_as_path_info",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `call_app_with_subpath_as_path_info` function crashes with a `UnicodeEncodeError` when the request's subpath contains Unicode characters that cannot be encoded to latin-1 (characters with code points > 255).",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_request_2025-08-18_22-57_pev0.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_request_2025-08-18_22-57_pev0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.response.FileIter Silent Data Loss with block_size=0",
      "target": "pyramid.response.FileIter",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "FileIter silently discards all file content when initialized with block_size=0, returning empty results instead of reading the file.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_response_FileIter_2025-08-18_20-50_1yvq.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_response_FileIter_2025-08-18_20-50_1yvq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.scripting RequestContext Leak on Root Factory Exception",
      "target": "pyramid.scripting.prepare",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "When `prepare()` or `get_root()` encounters an exception from the root factory, the RequestContext is not properly cleaned up, leaving the request object in the threadlocal stack.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_scripting_2025-08-18_20-58_9dib.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_scripting_2025-08-18_20-58_9dib.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.security PermitsResult.msg crashes on malformed format strings",
      "target": "pyramid.security.PermitsResult",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `msg` property of `PermitsResult` and its subclasses (`Denied`, `Allowed`) crashes when the format string contains invalid format specifiers or has mismatched arguments, instead of handling the error gracefully.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_security_2025-08-18_20-50_pp1k.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_security_2025-08-18_20-50_pp1k.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.static _add_vary Function Preserves Existing Duplicates",
      "target": "pyramid.static._add_vary",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_add_vary` function in pyramid.static is designed to prevent duplicate Vary headers (case-insensitive), but it fails to clean up pre-existing duplicates in the response.vary list.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_static_2025-08-18_20-50_vd9b.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_static_2025-08-18_20-50_vd9b.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.threadlocal KeyError in get_current_request/get_current_registry",
      "target": "pyramid.threadlocal",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "`get_current_request()` and `get_current_registry()` raise KeyError when the manager stack contains items without 'request' or 'registry' keys, instead of gracefully returning None or the default registry.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_threadlocal_2025-08-18_20-54_btt2.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_threadlocal_2025-08-18_20-54_btt2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.traversal Round-Trip Property Violation",
      "target": "pyramid.traversal",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The documented round-trip property between `resource_path_tuple()` and `find_resource()` is violated when resources have certain special names like `'..'`, `0`, or empty string, causing `find_resource()` to return the wrong resource or fail entirely.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_traversal_2025-08-18_21-00_ild7.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_traversal_2025-08-18_21-00_ild7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.tweens._error_handler TypeError when called outside exception context",
      "target": "pyramid.tweens._error_handler",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `_error_handler` function in pyramid.tweens crashes with TypeError when called with an exception object outside of an active exception context, causing `sys.exc_info()` to return (None, None, None).",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_tweens_2025-08-18_20-55_90f1.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_tweens_2025-08-18_20-55_90f1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.urldispatch Route Pattern Normalization Inconsistency",
      "target": "pyramid.urldispatch.Route",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The Route class stores the original un-normalized pattern in its `pattern` attribute, but internally uses a normalized version (with leading '/') for matching and generation, causing an inconsistency between what the pattern attribute reports and what the route actually matches.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_urldispatch_2025-08-18_20-54_vkfq.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_urldispatch_2025-08-18_20-54_vkfq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.util.bytes_ Encoding Failure with Non-Latin-1 Characters",
      "target": "pyramid.util.bytes_",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `bytes_` function in pyramid.util fails with a UnicodeEncodeError when given Unicode characters outside the Latin-1 range (codepoint > 255), but this limitation is not documented.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_util_bytes_2025-08-18_04-33_k3h9.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_util_bytes_2025-08-18_04-33_k3h9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.util.takes_one_arg Ignores argname Parameter",
      "target": "pyramid.util.takes_one_arg",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `takes_one_arg` function incorrectly returns `True` for any single-argument function when `argname` is specified, regardless of whether the argument name matches the specified `argname`.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_util_takes_one_arg_2025-08-18_20-55_qquf.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_util_takes_one_arg_2025-08-18_20-55_qquf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.view AppendSlashNotFoundViewFactory Fails on Control Characters in Query String",
      "target": "pyramid.view.AppendSlashNotFoundViewFactory",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `AppendSlashNotFoundViewFactory` in pyramid.view crashes with a `ValueError` when redirecting URLs that have query strings containing control characters (newlines, carriage returns, etc.).",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_view_2025-08-18_16-15_k3j9.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_view_2025-08-18_16-15_k3j9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid_decorator preserve_signature AttributeError",
      "target": "pyramid_decorator.preserve_signature",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-01-10",
      "summary": "The `preserve_signature` decorator crashes with AttributeError when applied to functions without type annotations, as they lack the `__annotations__` attribute.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_decorator_2025-01-10_15-30_x7n2.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_decorator_2025-01-10_15-30_x7n2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid_decorator validate_arguments Fails with **kwargs Functions",
      "target": "pyramid_decorator.validate_arguments",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `validate_arguments` decorator fails to validate any arguments when applied to functions that use `**kwargs`, allowing invalid values to pass through without validation.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_decorator_validate_args_2025-08-18_20-50_pczs.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_decorator_validate_args_2025-08-18_20-50_pczs.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid_decorator view_config Function Mutation",
      "target": "pyramid_decorator.view_config",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-01-10",
      "summary": "The `view_config` decorator mutates the original function by adding a `__view_settings__` attribute directly to it, violating the principle that decorators should not modify original functions.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_decorator_2025-01-10_15-31_m4k9.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_decorator_2025-01-10_15-31_m4k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid_decorator view_config JSON Renderer Fails to Encode Strings",
      "target": "pyramid_decorator.view_config",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `view_config` decorator with `renderer='json'` fails to properly JSON-encode string return values, producing invalid JSON output that cannot be parsed.",
      "package": "pyramid",
      "file_name": "bug_report_pyramid_decorator_view_config_2025-08-18_20-50_l7z8.md",
      "file_path": "opus-4.1/pyramid/bug_reports/bug_report_pyramid_decorator_view_config_2025-08-18_20-50_l7z8.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "GssChannelBindings None Values Lost in Pack/Unpack Round-Trip",
      "target": "spnego.channel_bindings.GssChannelBindings",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The GssChannelBindings class violates the round-trip property: `unpack(pack(x)) != x` when address fields or application_data are None. After packing and unpacking, None values become empty byte strings (b'').",
      "package": "pyspnego",
      "file_name": "bug_report_spnego_channel_bindings_2025-08-18_21-03_aphe.md",
      "file_path": "opus-4.1/pyspnego/bug_reports/bug_report_spnego_channel_bindings_2025-08-18_21-03_aphe.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "awkward.forms Index Type Validation Mismatch",
      "target": "awkward.forms",
      "severity": "High",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Multiple Form classes accept index types during construction that their corresponding Array implementations do not support, leading to TypeError crashes when creating arrays via `length_zero_array()` or `length_one_array()`.",
      "package": "pyspnego",
      "file_name": "bug_report_awkward_forms_index_types_2025-08-18_21-17_4l90.md",
      "file_path": "opus-4.1/pyspnego/bug_reports/bug_report_awkward_forms_index_types_2025-08-18_21-17_4l90.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "awkward.forms.ListForm length_one_array() crashes with ValueError",
      "target": "awkward.forms.ListForm.length_one_array()",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "ListForm.length_one_array() crashes with \"ValueError: zero-size array to reduction operation maximum which has no identity\" due to incorrect buffer initialization that creates an empty list instead of a list with one element.",
      "package": "pyspnego",
      "file_name": "bug_report_awkward_forms_ListForm_2025-08-18_21-16_q0bl.md",
      "file_path": "opus-4.1/pyspnego/bug_reports/bug_report_awkward_forms_ListForm_2025-08-18_21-16_q0bl.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "spnego._context.split_username Empty Domain for Backslash-Prefixed Usernames",
      "target": "spnego._context.split_username",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `split_username` function incorrectly returns an empty string as the domain when a username starts with a backslash (e.g., `\\user`), instead of properly handling this edge case.",
      "package": "pyspnego",
      "file_name": "bug_report_spnego__context_split_username_2025-08-18_21-06_wf8w.md",
      "file_path": "opus-4.1/pyspnego/bug_reports/bug_report_spnego__context_split_username_2025-08-18_21-06_wf8w.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "spnego._spnego.NegTokenInit Pack/Unpack Failure with Empty mech_types",
      "target": "spnego._spnego.NegTokenInit",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "NegTokenInit fails to unpack its own packed output when initialized with an empty mech_types list, violating the round-trip property that pack/unpack should be inverse operations.",
      "package": "pyspnego",
      "file_name": "bug_report_spnego_negtokeninit_2025-08-18_21-06_cgzf.md",
      "file_path": "opus-4.1/pyspnego/bug_reports/bug_report_spnego_negtokeninit_2025-08-18_21-06_cgzf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "spnego._spnego.pack_mech_type_list OID Encoding Overflow",
      "target": "spnego._spnego.pack_mech_type_list",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The pack_mech_type_list function crashes with ValueError when encoding OIDs where the first two components result in a value >= 256, violating the ASN.1 OID encoding specification.",
      "package": "pyspnego",
      "file_name": "bug_report_spnego_pack_mech_type_list_2025-08-18_21-06_n11y.md",
      "file_path": "opus-4.1/pyspnego/bug_reports/bug_report_spnego_pack_mech_type_list_2025-08-18_21-06_n11y.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "spnego._spnego.unpack_token NTLM Message Crash with unwrap=True",
      "target": "spnego._spnego.unpack_token",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The unpack_token function crashes when attempting to unwrap malformed NTLM messages that have the correct signature but insufficient data, instead of gracefully handling the error.",
      "package": "pyspnego",
      "file_name": "bug_report_spnego_unpack_token_ntlm_2025-08-18_21-06_0dyq.md",
      "file_path": "opus-4.1/pyspnego/bug_reports/bug_report_spnego_unpack_token_ntlm_2025-08-18_21-06_0dyq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "spnego.channel_bindings Pack/Unpack Round-Trip Violation",
      "target": "spnego.channel_bindings.GssChannelBindings",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `GssChannelBindings` class violates the round-trip property: `None` values for address and application_data fields become empty bytes `b''` after pack/unpack, breaking field value preservation.",
      "package": "pyspnego",
      "file_name": "bug_report_spnego_channel_bindings_2025-08-18_21-01_oen4.md",
      "file_path": "opus-4.1/pyspnego/bug_reports/bug_report_spnego_channel_bindings_2025-08-18_21-01_oen4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "spnego.channel_bindings.GssChannelBindings Round-Trip Serialization Failure",
      "target": "spnego.channel_bindings.GssChannelBindings",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `GssChannelBindings` class fails to preserve the distinction between `None` and empty bytes (`b''`) during pack/unpack operations, violating the expected round-trip property.",
      "package": "pyspnego",
      "file_name": "bug_report_spnego_channel_bindings_2025-08-18_12-34_x7n9.md",
      "file_path": "opus-4.1/pyspnego/bug_reports/bug_report_spnego_channel_bindings_2025-08-18_12-34_x7n9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pytest_pretty ANSI Escape Regex Fails to Remove Many Valid Sequences",
      "target": "pytest_pretty.ansi_escape",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The ANSI escape removal regex in pytest_pretty fails to remove many legitimate ANSI escape sequences, causing parsing failures when these sequences appear in test output.",
      "package": "pytest-pretty",
      "file_name": "bug_report_pytest_pretty_2025-08-18_14-30_x7k2.md",
      "file_path": "opus-4.1/pytest-pretty/bug_reports/bug_report_pytest_pretty_2025-08-18_14-30_x7k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dateutil.easter Invalid Date Generation Crash",
      "target": "dateutil.easter.easter",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `easter()` function crashes with `ValueError: day is out of range for month` when calculating Orthodox Easter (method=2) for certain years, attempting to create invalid dates like June 31st.",
      "package": "python-dateutil",
      "file_name": "bug_report_dateutil_easter_2025-08-18_05-24_xnc1.md",
      "file_path": "opus-4.1/python-dateutil/bug_reports/bug_report_dateutil_easter_2025-08-18_05-24_xnc1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dateutil.easter Violates Date Range Invariant",
      "target": "dateutil.easter",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `easter.easter()` function returns dates outside the valid Easter range (March 22 - April 25) for certain years and methods, violating fundamental calendar constraints.",
      "package": "python-dateutil",
      "file_name": "bug_report_dateutil_easter_2025-08-18_05-29_6y13.md",
      "file_path": "opus-4.1/python-dateutil/bug_reports/bug_report_dateutil_easter_2025-08-18_05-29_6y13.md",
      "score": null,
      "bug_status": {
        "status": "invalid",
        "url": "https://github.com/dateutil/dateutil/issues/1437"
      }
    },
    {
      "title": "dateutil.parser OverflowError on Large Numeric Strings",
      "target": "dateutil.parser.parse",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `dateutil.parser.parse()` function crashes with an unhandled OverflowError when parsing large numeric strings (15+ digits), instead of raising a proper ParserError or handling the value gracefully.",
      "package": "python-dateutil",
      "file_name": "bug_report_dateutil_parser_2025-08-18_05-31_cbik.md",
      "file_path": "opus-4.1/python-dateutil/bug_reports/bug_report_dateutil_parser_2025-08-18_05-31_cbik.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dateutil.relativedelta Addition Not Associative Due to Normalization",
      "target": "dateutil.relativedelta",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Addition of relativedelta objects is not associative when microseconds overflow due to premature normalization in the _fix() method, causing `(a + b) + c \u2260 a + (b + c)`.",
      "package": "python-dateutil",
      "file_name": "bug_report_dateutil_relativedelta_2025-08-18_05-24_xygx.md",
      "file_path": "opus-4.1/python-dateutil/bug_reports/bug_report_dateutil_relativedelta_2025-08-18_05-24_xygx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dateutil.relativedelta Inverse Property Violation",
      "target": "dateutil.relativedelta",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The relativedelta class violates the mathematical inverse property: adding a relativedelta and then subtracting the same relativedelta does not always return the original date.",
      "package": "python-dateutil",
      "file_name": "bug_report_dateutil_relativedelta_2025-08-18_05-22_lyzu.md",
      "file_path": "opus-4.1/python-dateutil/bug_reports/bug_report_dateutil_relativedelta_2025-08-18_05-22_lyzu.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dateutil.relativedelta Multiplication Unexpectedly Normalizes Units",
      "target": "dateutil.relativedelta.__mul__",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Multiplying a relativedelta by a scalar unexpectedly normalizes time units (e.g., 12 months becomes 1 year), changing the semantic meaning of the delta.",
      "package": "python-dateutil",
      "file_name": "bug_report_dateutil_relativedelta_multiplication_2025-08-18_05-24_dny2.md",
      "file_path": "opus-4.1/python-dateutil/bug_reports/bug_report_dateutil_relativedelta_multiplication_2025-08-18_05-24_dny2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dateutil.rrule Count Parameter Not Honored Near MAXYEAR",
      "target": "dateutil.rrule",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `rrule` class fails to generate the exact number of occurrences specified by the `count` parameter when the generated dates would exceed `datetime.MAXYEAR` (9999).",
      "package": "python-dateutil",
      "file_name": "bug_report_dateutil_rrule_2025-08-18_05-27_rsp0.md",
      "file_path": "opus-4.1/python-dateutil/bug_reports/bug_report_dateutil_rrule_2025-08-18_05-27_rsp0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dateutil.tz.tzical Invalid Timezone Offset Validation",
      "target": "dateutil.tz.tzical._parse_offset",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_parse_offset` method in `dateutil.tz.tzical` accepts invalid time offset values without validation, allowing hours > 23 and minutes > 59, resulting in nonsensical timezone offsets that violate timezone standards.",
      "package": "python-dateutil",
      "file_name": "bug_report_dateutil_tz_tzical_2025-08-18_05-26_xmkz.md",
      "file_path": "opus-4.1/python-dateutil/bug_reports/bug_report_dateutil_tz_tzical_2025-08-18_05-26_xmkz.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dateutil.utils.within_delta TypeError with Mixed Timezone Awareness",
      "target": "dateutil.utils.within_delta",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `within_delta` function crashes with a `TypeError` when comparing datetimes with different timezone awareness (one naive, one aware).",
      "package": "python-dateutil",
      "file_name": "bug_report_dateutil_utils_2025-08-18_05-24_o87b.md",
      "file_path": "opus-4.1/python-dateutil/bug_reports/bug_report_dateutil_utils_2025-08-18_05-24_o87b.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "dateutil.zoneinfo Unhandled Exceptions in Metadata Parsing",
      "target": "dateutil.zoneinfo.ZoneInfoFile",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "`ZoneInfoFile.__init__` crashes with unhandled `JSONDecodeError` or `UnicodeDecodeError` when the METADATA file in a tarball contains invalid JSON or non-UTF-8 data.",
      "package": "python-dateutil",
      "file_name": "bug_report_dateutil_zoneinfo_2025-08-18_05-27_suar.md",
      "file_path": "opus-4.1/python-dateutil/bug_reports/bug_report_dateutil_zoneinfo_2025-08-18_05-27_suar.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "lxml.isoschematron.stylesheet_params Control Character Crash",
      "target": "lxml.isoschematron.stylesheet_params",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `stylesheet_params` function crashes with ValueError when given strings containing control characters, despite accepting string parameters and not documenting this limitation.",
      "package": "python-dateutil",
      "file_name": "bug_report_lxml_isoschematron_stylesheet_params_2025-08-18_05-29_j74k.md",
      "file_path": "opus-4.1/python-dateutil/bug_reports/bug_report_lxml_isoschematron_stylesheet_params_2025-08-18_05-29_j74k.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "python_http_client Version 0 Not Added to URL",
      "target": "python_http_client.client.Client",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The Client class incorrectly ignores version=0 when building URLs, treating 0 as falsy instead of a valid version number.",
      "package": "python-http-client",
      "file_name": "bug_report_python_http_client_2025-08-19_15-43_z71h.md",
      "file_path": "opus-4.1/python-http-client/bug_reports/bug_report_python_http_client_2025-08-19_15-43_z71h.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "python_http_client.client Shared Mutable Headers",
      "target": "python_http_client.client.Client",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "Child Client instances created via the `_()` method share the same headers dictionary with their parent, causing header modifications on any client to affect all related clients.",
      "package": "python-http-client",
      "file_name": "bug_report_python_http_client_client_2025-08-19_03-07_weog.md",
      "file_path": "opus-4.1/python-http-client/bug_reports/bug_report_python_http_client_client_2025-08-19_03-07_weog.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "QuickBooks Error Code 0 Handling",
      "target": "quickbooks.client.QuickBooks.handle_exceptions",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `handle_exceptions` method incorrectly handles error code 0, raising a generic `QuickbooksException` instead of following the documented error code classification scheme.",
      "package": "python-quickbooks",
      "file_name": "bug_report_quickbooks_2025-08-18_22-05_6rba.md",
      "file_path": "opus-4.1/python-quickbooks/bug_reports/bug_report_quickbooks_2025-08-18_22-05_6rba.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "quickbooks.batch Missing Response Validation",
      "target": "quickbooks.batch.BatchManager.batch_results_to_list",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `batch_results_to_list` method silently ignores missing batch item responses, leading to incomplete processing without any error indication.",
      "package": "python-quickbooks",
      "file_name": "bug_report_quickbooks_batch_2025-08-18_22-07_382f.md",
      "file_path": "opus-4.1/python-quickbooks/bug_reports/bug_report_quickbooks_batch_2025-08-18_22-07_382f.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "quickbooks.cdc Empty CDCResponse Causes IndexError",
      "target": "quickbooks.cdc.change_data_capture",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `change_data_capture` function crashes with IndexError when the QuickBooks API returns an empty CDCResponse list, which can occur when there are no changes since the specified timestamp.",
      "package": "python-quickbooks",
      "file_name": "bug_report_quickbooks_cdc_2025-08-18_22-08_bbnl.md",
      "file_path": "opus-4.1/python-quickbooks/bug_reports/bug_report_quickbooks_cdc_2025-08-18_22-08_bbnl.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "quickbooks.cdc Missing QueryResponse Key Causes KeyError",
      "target": "quickbooks.cdc.change_data_capture",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `change_data_capture` function crashes with KeyError when the CDCResponse doesn't contain a 'QueryResponse' key, which can occur with malformed or unexpected API responses.",
      "package": "python-quickbooks",
      "file_name": "bug_report_quickbooks_cdc_2025-08-18_22-09_swgs.md",
      "file_path": "opus-4.1/python-quickbooks/bug_reports/bug_report_quickbooks_cdc_2025-08-18_22-09_swgs.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "quickbooks.helpers Year Padding Missing",
      "target": "quickbooks.helpers.qb_date_format",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Date formatting functions in quickbooks.helpers fail to zero-pad years with less than 4 digits, violating ISO 8601 standard and likely causing API compatibility issues.",
      "package": "python-quickbooks",
      "file_name": "bug_report_quickbooks_helpers_2025-08-18_22-08_v8af.md",
      "file_path": "opus-4.1/python-quickbooks/bug_reports/bug_report_quickbooks_helpers_2025-08-18_22-08_v8af.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "quickbooks.mixins ToJsonMixin.json_filter Decimal Handling",
      "target": "quickbooks.mixins.ToJsonMixin.json_filter",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `json_filter` method in `ToJsonMixin` fails to convert `Decimal` objects to strings within the dictionary comprehension, only converting them at the top level of the lambda function.",
      "package": "python-quickbooks",
      "file_name": "bug_report_quickbooks_mixins_2025-08-18_23-01_4qhq.md",
      "file_path": "opus-4.1/python-quickbooks/bug_reports/bug_report_quickbooks_mixins_2025-08-18_23-01_4qhq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "quickbooks.mixins.to_dict Circular Reference RecursionError",
      "target": "quickbooks.mixins.to_dict",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `to_dict()` function in quickbooks.mixins crashes with RecursionError when processing objects containing circular references.",
      "package": "python-quickbooks",
      "file_name": "bug_report_quickbooks_mixins_to_dict_2025-08-18_22-14_9add.md",
      "file_path": "opus-4.1/python-quickbooks/bug_reports/bug_report_quickbooks_mixins_to_dict_2025-08-18_22-14_9add.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "quickbooks.utils Incorrect SQL Quote Escaping",
      "target": "quickbooks.utils.build_where_clause",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The functions `build_where_clause` and `build_choose_clause` use incorrect SQL escaping by replacing single quotes with backslash-quote (`\\'`) instead of the SQL-92 standard of doubling quotes (`''`), potentially causing SQL errors and security vulnerabilities.",
      "package": "python-quickbooks",
      "file_name": "bug_report_quickbooks_utils_2025-08-18_22-13_coe8.md",
      "file_path": "opus-4.1/python-quickbooks/bug_reports/bug_report_quickbooks_utils_2025-08-18_22-13_coe8.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "rarfile sanitize_filename Idempotence Violation",
      "target": "rarfile.sanitize_filename",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `sanitize_filename` function is not idempotent on Windows paths - applying it twice produces different results than applying it once.",
      "package": "rarfile",
      "file_name": "bug_report_rarfile_sanitize_filename_2025-08-18_22-09_1plz.md",
      "file_path": "opus-4.1/rarfile/bug_reports/bug_report_rarfile_sanitize_filename_2025-08-18_22-09_1plz.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "rarfile to_datetime Incomplete Sanitization",
      "target": "rarfile.to_datetime",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `to_datetime` function fails to properly sanitize negative time values, raising ValueError instead of clamping them as documented.",
      "package": "rarfile",
      "file_name": "bug_report_rarfile_to_datetime_2025-08-18_22-09_v91q.md",
      "file_path": "opus-4.1/rarfile/bug_reports/bug_report_rarfile_to_datetime_2025-08-18_22-09_v91q.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "re Module Undocumented Negative Parameter Behavior",
      "target": "re.split",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `re.split()` and `re.sub()` functions treat negative values for `maxsplit` and `count` parameters as \"no operations\", which is undocumented and contradicts the documentation for `split` that states \"If maxsplit is nonzero, at most maxsplit splits occur\".",
      "package": "re",
      "file_name": "bug_report_re_2025-08-19_00-07_cue8.md",
      "file_path": "opus-4.1/re/bug_reports/bug_report_re_2025-08-19_00-07_cue8.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.billingconductor validate() Method Does Not Validate Required Properties",
      "target": "troposphere.billingconductor",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `validate()` method in all troposphere AWS resource classes does not validate required properties, despite its name suggesting it should perform validation. Validation only occurs when calling `to_dict(validation=True)`.",
      "package": "re",
      "file_name": "bug_report_troposphere_billingconductor_2025-08-19_00-05_nsd0.md",
      "file_path": "opus-4.1/re/bug_reports/bug_report_troposphere_billingconductor_2025-08-19_00-05_nsd0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "CaseInsensitiveDict Unicode Case Conversion Failure",
      "target": "requests.structures.CaseInsensitiveDict",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "CaseInsensitiveDict fails to handle Unicode characters whose uppercase and lowercase conversions are not reversible, violating its case-insensitive lookup guarantee.",
      "package": "requests",
      "file_name": "bug_report_requests_structures_CaseInsensitiveDict_2025-08-19_00-01_pg4y.md",
      "file_path": "opus-4.1/requests/bug_reports/bug_report_requests_structures_CaseInsensitiveDict_2025-08-19_00-01_pg4y.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "CaseInsensitiveDict Unicode Case-Folding Bug",
      "target": "requests.structures.CaseInsensitiveDict",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "CaseInsensitiveDict fails to handle Unicode case-folding correctly, causing lookups to fail for characters with complex case mappings like German \u00df (sharp s) which uppercases to 'SS'.",
      "package": "requests",
      "file_name": "bug_report_requests_CaseInsensitiveDict_2025-08-19_00-07_h6l3.md",
      "file_path": "opus-4.1/requests/bug_reports/bug_report_requests_CaseInsensitiveDict_2025-08-19_00-07_h6l3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "LookupDict Dict Storage vs __dict__ Lookup Inconsistency",
      "target": "requests.structures.LookupDict",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "LookupDict inherits from dict but overrides `__getitem__` to look in `__dict__` instead of dict storage, causing severe inconsistency between dict operations and item access.",
      "package": "requests",
      "file_name": "bug_report_requests_structures_LookupDict_2025-08-19_00-02_rf3l.md",
      "file_path": "opus-4.1/requests/bug_reports/bug_report_requests_structures_LookupDict_2025-08-19_00-02_rf3l.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "RequestsCookieJar AttributeError with domain=None",
      "target": "requests.cookies.create_cookie",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The create_cookie function crashes with AttributeError when explicitly passed domain=None, which should be a valid way to specify no domain restriction.",
      "package": "requests",
      "file_name": "bug_report_requests_cookies_2025-08-19_00-02_68d7.md",
      "file_path": "opus-4.1/requests/bug_reports/bug_report_requests_cookies_2025-08-19_00-02_68d7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "RequestsCookieJar Empty String Values Lost",
      "target": "requests.cookies.RequestsCookieJar",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "RequestsCookieJar silently loses cookie values that are empty strings, returning None instead of the actual empty string value.",
      "package": "requests",
      "file_name": "bug_report_requests_cookies_2025-08-19_00-02_vke4.md",
      "file_path": "opus-4.1/requests/bug_reports/bug_report_requests_cookies_2025-08-19_00-02_vke4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.adapters.HTTPAdapter.proxy_headers Unicode Encoding Crash",
      "target": "requests.adapters.HTTPAdapter.proxy_headers",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "HTTPAdapter.proxy_headers crashes with UnicodeEncodeError when proxy URLs contain non-Latin-1 characters in username or password fields.",
      "package": "requests",
      "file_name": "bug_report_requests_adapters_proxy_headers_2025-08-19_00-01_jd3r.md",
      "file_path": "opus-4.1/requests/bug_reports/bug_report_requests_adapters_proxy_headers_2025-08-19_00-01_jd3r.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.adapters.get_auth_from_url Fails on Username-Only URLs",
      "target": "requests.adapters.get_auth_from_url",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "get_auth_from_url incorrectly returns empty strings for both username and password when a URL contains only a username (no password), losing valid authentication data.",
      "package": "requests",
      "file_name": "bug_report_requests_adapters_get_auth_2025-08-19_00-01_69hn.md",
      "file_path": "opus-4.1/requests/bug_reports/bug_report_requests_adapters_get_auth_2025-08-19_00-01_69hn.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.api Inconsistent JSON Parameter API",
      "target": "requests.api",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `put()` and `patch()` functions in requests.api have an inconsistent API compared to `post()`. While all three functions document accepting a `json` parameter, only `post()` explicitly lists it in the function signature.",
      "package": "requests",
      "file_name": "bug_report_requests_api_2025-08-19_00-00_gz5h.md",
      "file_path": "opus-4.1/requests/bug_reports/bug_report_requests_api_2025-08-19_00-00_gz5h.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.auth Unicode Encoding Failure",
      "target": "requests.auth._basic_auth_str",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `_basic_auth_str` function crashes with UnicodeEncodeError when given usernames or passwords containing characters outside the latin-1 encoding range (characters with code points > 255).",
      "package": "requests",
      "file_name": "bug_report_requests_auth_2025-08-19_00-01_gysz.md",
      "file_path": "opus-4.1/requests/bug_reports/bug_report_requests_auth_2025-08-19_00-01_gysz.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.hooks.dispatch_hook AttributeError with Non-Dict Hooks",
      "target": "requests.hooks.dispatch_hook",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `dispatch_hook` function crashes with AttributeError when passed non-dict values for the `hooks` parameter, despite being a public API that could receive arbitrary input.",
      "package": "requests",
      "file_name": "bug_report_requests_hooks_dispatch_hook_2025-08-19_00-07_jzex.md",
      "file_path": "opus-4.1/requests/bug_reports/bug_report_requests_hooks_dispatch_hook_2025-08-19_00-07_jzex.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.models.CaseInsensitiveDict Case-Folding Failure",
      "target": "requests.models.CaseInsensitiveDict",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "CaseInsensitiveDict fails to provide case-insensitive access for Unicode characters where uppercase and lowercase transformations have different lengths, such as the German '\u00df' which uppercases to 'SS'.",
      "package": "requests",
      "file_name": "bug_report_requests_models_CaseInsensitiveDict_2025-08-19_00-01_r0h2.md",
      "file_path": "opus-4.1/requests/bug_reports/bug_report_requests_models_CaseInsensitiveDict_2025-08-19_00-01_r0h2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.packages Module Aliasing Issues",
      "target": "requests.packages",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `requests.packages` module has incomplete aliasing logic that fails to alias lazily-loaded submodules and creates an inconsistent package structure that breaks certain import mechanisms.",
      "package": "requests",
      "file_name": "bug_report_requests_packages_2025-08-19_00-01_346z.md",
      "file_path": "opus-4.1/requests/bug_reports/bug_report_requests_packages_2025-08-19_00-01_346z.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.sessions.merge_setting Inconsistent None Value Removal",
      "target": "requests.sessions.merge_setting",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `merge_setting` function inconsistently handles None values in dictionaries - it removes them when merging two dictionaries but preserves them when returning a single dictionary.",
      "package": "requests",
      "file_name": "bug_report_requests_sessions_merge_setting_2025-08-19_00-04_yih9.md",
      "file_path": "opus-4.1/requests/bug_reports/bug_report_requests_sessions_merge_setting_2025-08-19_00-04_yih9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.status_codes LookupDict Attribute Access Inconsistency",
      "target": "requests.status_codes.LookupDict",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "LookupDict's `__getitem__` method returns None for inherited dict methods instead of the actual methods, causing inconsistency with attribute access.",
      "package": "requests",
      "file_name": "bug_report_requests_status_codes_2025-08-19_00-01_fp2w.md",
      "file_path": "opus-4.1/requests/bug_reports/bug_report_requests_status_codes_2025-08-19_00-01_fp2w.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests.utils.is_ipv4_address crashes on null byte input",
      "target": "requests.utils.is_ipv4_address",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `is_ipv4_address` function crashes with a ValueError when given input containing null bytes, instead of returning False as expected for invalid IP addresses.",
      "package": "requests",
      "file_name": "bug_report_requests_utils_is_ipv4_address_2025-08-19_00-03_ks69.md",
      "file_path": "opus-4.1/requests/bug_reports/bug_report_requests_utils_is_ipv4_address_2025-08-19_00-03_ks69.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "OAuth1Session.authorization_url Converts None to String 'None'",
      "target": "requests_oauthlib.oauth1_session.OAuth1Session.authorization_url",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `authorization_url` method incorrectly converts `None` values to the string `'None'` in URL parameters, causing OAuth providers to receive invalid token values.",
      "package": "requests-oauthlib",
      "file_name": "bug_report_oauth1_session_2025-08-18_22-03_zm2q.md",
      "file_path": "opus-4.1/requests-oauthlib/bug_reports/bug_report_oauth1_session_2025-08-18_22-03_zm2q.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "OAuth2Session Invalid expires_in Causes Crash",
      "target": "requests_oauthlib.OAuth2Session",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "OAuth2Session crashes with ValueError when setting a token containing `expires_in` field with a non-integer string value, instead of handling the invalid input gracefully.",
      "package": "requests-oauthlib",
      "file_name": "bug_report_oauth2session_expires_in_2025-08-18_22-59_skz2.md",
      "file_path": "opus-4.1/requests-oauthlib/bug_reports/bug_report_oauth2session_expires_in_2025-08-18_22-59_skz2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "OAuth2Session Missing Callable Validation for Compliance Hooks",
      "target": "requests_oauthlib.oauth2_session.OAuth2Session.register_compliance_hook",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `register_compliance_hook` method accepts non-callable objects (None, strings, integers, etc.) without validation, causing runtime TypeErrors when hooks are invoked.",
      "package": "requests-oauthlib",
      "file_name": "bug_report_requests_oauthlib_oauth2_session_2025-08-18_00-00_x7a3.md",
      "file_path": "opus-4.1/requests-oauthlib/bug_reports/bug_report_requests_oauthlib_oauth2_session_2025-08-18_00-00_x7a3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests_oauthlib.oauth1_auth TypeError with Empty Binary Body",
      "target": "requests_oauthlib.oauth1_auth.OAuth1",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "OAuth1 authentication handler crashes with TypeError when processing an empty binary body (`b''`) without a Content-Type header.",
      "package": "requests-oauthlib",
      "file_name": "bug_report_requests_oauthlib_oauth1_auth_2025-08-18_22-03_cv4p.md",
      "file_path": "opus-4.1/requests-oauthlib/bug_reports/bug_report_requests_oauthlib_oauth1_auth_2025-08-18_22-03_cv4p.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "requests_oauthlib.oauth1_auth UnicodeDecodeError with Non-UTF8 Content-Type Header",
      "target": "requests_oauthlib.oauth1_auth.OAuth1",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "OAuth1 authentication handler crashes with UnicodeDecodeError when the Content-Type header contains non-UTF8 bytes.",
      "package": "requests-oauthlib",
      "file_name": "bug_report_requests_oauthlib_oauth1_auth_2025-08-18_22-03_8exx.md",
      "file_path": "opus-4.1/requests-oauthlib/bug_reports/bug_report_requests_oauthlib_oauth1_auth_2025-08-18_22-03_8exx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "urldecode JSON Fallback Broken for Simple Values",
      "target": "requests_oauthlib.oauth1_session.urldecode",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The urldecode function fails to parse simple JSON values (integers, strings, booleans) because they are incorrectly interpreted as URL-encoded data, preventing the JSON fallback from activating.",
      "package": "requests-oauthlib",
      "file_name": "bug_report_urldecode_json_fallback_2025-08-18_22-59_y63q.md",
      "file_path": "opus-4.1/requests-oauthlib/bug_reports/bug_report_urldecode_json_fallback_2025-08-18_22-59_y63q.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.cluster.hierarchy.cophenet Returns NaN for Identical Observations",
      "target": "scipy.cluster.hierarchy.cophenet",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `cophenet` function returns NaN instead of a valid correlation coefficient when all input observations are identical, causing division by zero in the correlation calculation.",
      "package": "scipy",
      "file_name": "bug_report_scipy_cluster_hierarchy_cophenet_2025-08-18_19-55_ifso.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_cluster_hierarchy_cophenet_2025-08-18_19-55_ifso.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.constants.convert_temperature Identity Conversion Introduces Floating-Point Errors",
      "target": "scipy.constants.convert_temperature",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Converting a temperature from a scale to itself (identity conversion) introduces unnecessary floating-point errors instead of returning the exact input value.",
      "package": "scipy",
      "file_name": "bug_report_scipy_constants_convert_temperature_2025-08-18_19-57_9031.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_constants_convert_temperature_2025-08-18_19-57_9031.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.datasets.face() Incorrect Gray Parameter Handling",
      "target": "scipy.datasets.face",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `face()` function only converts to grayscale when `gray=True` is passed, ignoring other truthy values like `gray=1`, violating Python's standard boolean semantics.",
      "package": "scipy",
      "file_name": "bug_report_scipy_datasets_face_2025-08-18_19-55_9wrp.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_datasets_face_2025-08-18_19-55_9wrp.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.differentiate API Inconsistency in Hessian Function",
      "target": "scipy.differentiate.hessian",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `hessian` function returns a result object with attribute `ddf` for the Hessian matrix, while `derivative` and `jacobian` return result objects with attribute `df` for their respective results. This creates an inconsistent API across the module's differentiation functions.",
      "package": "scipy",
      "file_name": "bug_report_scipy_differentiate_2025-08-18_19-59_v282.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_differentiate_2025-08-18_19-59_v282.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.fft DCT/IDCT Type 1 Fails on Single-Element Arrays",
      "target": "scipy.fft.dct",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "DCT and IDCT type 1 transforms crash with `RuntimeError: zero-length FFT requested` when given single-element arrays, while DST/IDST type 1 and all other transform types handle single-element arrays correctly.",
      "package": "scipy",
      "file_name": "bug_report_scipy_fft_dct_type1_2025-08-18_19-59_0a4j.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_fft_dct_type1_2025-08-18_19-59_0a4j.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.fftpack DCT/IDCT Round-Trip Failure",
      "target": "scipy.fftpack.dct",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `idct` function with default normalization (norm=None) does not actually invert the `dct` function, despite being named \"Inverse Discrete Cosine Transform\". All DCT types (1-4) fail the round-trip property with default parameters.",
      "package": "scipy",
      "file_name": "bug_report_scipy_fftpack_dct_2025-08-18_20-01_o2sz.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_fftpack_dct_2025-08-18_20-01_o2sz.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.integrate.cumulative_simpson Non-Monotonic for Non-Negative Functions",
      "target": "scipy.integrate.cumulative_simpson",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Cumulative Simpson integration produces non-monotonic results for non-negative functions, including negative values when integrating strictly positive functions.",
      "package": "scipy",
      "file_name": "bug_report_scipy_integrate_cumulative_nonmonotonic_2025-08-18_19-59_f8uu.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_integrate_cumulative_nonmonotonic_2025-08-18_19-59_f8uu.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.integrate.simpson Produces Huge Incorrect Results with Close X Values",
      "target": "scipy.integrate.simpson",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Simpson integration produces wildly incorrect results (orders of magnitude off) when x array contains values that are very close together, even when the function values are reasonable.",
      "package": "scipy",
      "file_name": "bug_report_scipy_integrate_simpson_close_values_2025-08-18_19-59_mct6.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_integrate_simpson_close_values_2025-08-18_19-59_mct6.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.integrate.simpson Returns NaN with Very Small X Spacing",
      "target": "scipy.integrate.simpson",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "Simpson integration returns NaN when x values contain extremely small spacing (e.g., 2.22e-309), even for simple functions like constant zero.",
      "package": "scipy",
      "file_name": "bug_report_scipy_integrate_simpson_nan_2025-08-18_19-59_n7ro.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_integrate_simpson_nan_2025-08-18_19-59_n7ro.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.interpolate.RBFInterpolator Fails to Interpolate at Training Points",
      "target": "scipy.interpolate.RBFInterpolator",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "RBFInterpolator fails to pass through training points when given nearly colinear data, producing large errors (>1.3) instead of exact interpolation at the training points.",
      "package": "scipy",
      "file_name": "bug_report_scipy_interpolate_RBFInterpolator_2025-08-18_20-02_cbbn.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_interpolate_RBFInterpolator_2025-08-18_20-02_cbbn.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.io Harwell-Boeing Round-Trip Fails with Denormal Floats",
      "target": "scipy.io.hb_write",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The Harwell-Boeing format round-trip (write then read) fails when matrices contain very small floating point values (denormal numbers), causing a ValueError during read.",
      "package": "scipy",
      "file_name": "bug_report_scipy_io_hb_read_2025-08-18_20-04_tc0x.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_io_hb_read_2025-08-18_20-04_tc0x.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.io.hb_write Cannot Handle Zero Sparse Matrices",
      "target": "scipy.io.hb_write",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "scipy.io.hb_write fails with a ValueError when attempting to write sparse matrices that contain no non-zero elements.",
      "package": "scipy",
      "file_name": "bug_report_scipy_io_hb_write_2025-08-18_20-04_ih5v.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_io_hb_write_2025-08-18_20-04_ih5v.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.linalg.pinv Violates Moore-Penrose Condition",
      "target": "scipy.linalg.pinv",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The pseudo-inverse computed by `scipy.linalg.pinv` violates the third Moore-Penrose condition (A @ A_pinv should be Hermitian) for certain rank-deficient matrices with small but non-zero values.",
      "package": "scipy",
      "file_name": "bug_report_scipy_linalg_pinv_2025-08-18_14-30_x7k9.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_linalg_pinv_2025-08-18_14-30_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.ndimage.gaussian_filter1d ZeroDivisionError with sigma=0",
      "target": "scipy.ndimage.gaussian_filter1d",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "`scipy.ndimage.gaussian_filter1d` raises `ZeroDivisionError` when called with `sigma=0`, while the multi-dimensional `gaussian_filter` handles this case correctly.",
      "package": "scipy",
      "file_name": "bug_report_scipy_ndimage_gaussian_filter1d_2025-08-18_20-34_t2zr.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_ndimage_gaussian_filter1d_2025-08-18_20-34_t2zr.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.odr Quadratic Model Jacobian Wrong Shape for Single Data Point",
      "target": "scipy.odr.quadratic.fjacb",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The jacobian function `fjacb` of scipy.odr's quadratic model returns an incorrectly shaped array when given a single data point, returning (n_params, 1) instead of the expected (1, n_params).",
      "package": "scipy",
      "file_name": "bug_report_scipy_odr_quadratic_jacobian_2025-08-18_20-03_0dro.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_odr_quadratic_jacobian_2025-08-18_20-03_0dro.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.optimize Root Finding Methods Return Different Roots",
      "target": "scipy.optimize.bisect",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "When multiple roots exist within a bracketing interval, different root-finding methods (bisect, brentq, brenth) return different roots without documenting this behavior.",
      "package": "scipy",
      "file_name": "bug_report_scipy_optimize_root_finding_2025-08-18_20-02_m8hn.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_optimize_root_finding_2025-08-18_20-02_m8hn.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.optimize.approx_fprime Fails for Small Magnitude Inputs",
      "target": "scipy.optimize.approx_fprime",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `approx_fprime` function produces incorrect gradient approximations for small-magnitude inputs due to inappropriate default epsilon, causing up to 7450% relative error.",
      "package": "scipy",
      "file_name": "bug_report_scipy_optimize_approx_fprime_2025-08-18_20-02_6dx4.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_optimize_approx_fprime_2025-08-18_20-02_6dx4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.signal.windows.tukey Incorrect Hann Equivalence for Small Windows",
      "target": "scipy.signal.windows.tukey",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The Tukey window with alpha=1.0 does not match the Hann window for small window sizes (M < 10) when sym=False, contradicting the documentation which states they should be equivalent.",
      "package": "scipy",
      "file_name": "bug_report_scipy_signal_windows_tukey_2025-08-18_20-33_yv7g.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_signal_windows_tukey_2025-08-18_20-33_yv7g.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.sparse.hstack Crashes on Empty List",
      "target": "scipy.sparse.hstack",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "`scipy.sparse.hstack([])` crashes with an IndexError instead of raising a meaningful error message or returning an empty matrix.",
      "package": "scipy",
      "file_name": "bug_report_scipy_sparse_hstack_2025-08-18_20-32_xow2.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_sparse_hstack_2025-08-18_20-32_xow2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.spatial.KDTree Duplicate Point Index Inconsistency",
      "target": "scipy.spatial.KDTree.query",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "KDTree.query() returns inconsistent indices when querying duplicate points - it may return a different instance of the same coordinate rather than the queried point's own index, violating the expected behavior that a point's nearest neighbor is itself.",
      "package": "scipy",
      "file_name": "bug_report_scipy_spatial_kdtree_2025-08-18_20-27_vsjf.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_spatial_kdtree_2025-08-18_20-27_vsjf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.special Round-Trip Functions Fail Catastrophically",
      "target": "scipy.special.expit/logit",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Multiple pairs of inverse functions in scipy fail their round-trip property for moderate input values, returning infinity instead of the original value when the forward function output rounds to its asymptotic limit in float64.",
      "package": "scipy",
      "file_name": "bug_report_scipy_special_round_trip_2025-08-18_19-54_hjyt.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_special_round_trip_2025-08-18_19-54_hjyt.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.special betainc/betaincinv Precision Loss Causes Inverse Property Violation",
      "target": "scipy.special.betainc",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The regularized incomplete beta function `betainc` loses precision for extreme parameter values, causing it to return exactly 1.0 for inputs that should be slightly less than 1.0. This breaks the inverse relationship with `betaincinv`, resulting in massive errors (up to 100%) in round-trip operations.",
      "package": "scipy",
      "file_name": "bug_report_scipy_special_betainc_2025-08-18_20-03_swgy.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_special_betainc_2025-08-18_20-03_swgy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "scipy.stats.skew and scipy.stats.kurtosis Return NaN for Constant Arrays",
      "target": "scipy.stats.skew",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `skew` and `kurtosis` functions return NaN when given constant arrays (arrays where all values are the same), when they should return 0 for skewness and a defined value for kurtosis.",
      "package": "scipy",
      "file_name": "bug_report_scipy_stats_skew_kurtosis_2025-08-18_20-02_ypzg.md",
      "file_path": "opus-4.1/scipy/bug_reports/bug_report_scipy_stats_skew_kurtosis_2025-08-18_20-02_ypzg.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sentinels Mutable Name Breaks Singleton Contract",
      "target": "sentinels.Sentinel",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `_name` attribute of Sentinel objects can be modified after creation, breaking the singleton contract and causing repr inconsistency.",
      "package": "sentinels",
      "file_name": "bug_report_sentinels_2025-08-19_03-11_s9vk.md",
      "file_path": "opus-4.1/sentinels/bug_reports/bug_report_sentinels_2025-08-19_03-11_s9vk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "functools.singledispatch Class Decorator Corruption",
      "target": "functools.singledispatch",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Using `@func.register` decorator on a class without specifying a type argument silently corrupts the class definition, replacing it with a lambda function and breaking expected behavior.",
      "package": "singledispatch",
      "file_name": "bug_report_functools_singledispatch_2025-08-18_21-36_i9vc.md",
      "file_path": "opus-4.1/singledispatch/bug_reports/bug_report_functools_singledispatch_2025-08-18_21-36_i9vc.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "slack Module Exception Name Typo",
      "target": "slack",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The exception class `ParamterMissingError` contains a typo - it should be `ParameterMissingError` (missing 'e' in \"Parameter\").",
      "package": "slack",
      "file_name": "bug_report_slack_typo_2025-08-18_23-14_6huj.md",
      "file_path": "opus-4.1/slack/bug_reports/bug_report_slack_typo_2025-08-18_23-14_6huj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "slack Module Incompatible with Python 3.11+",
      "target": "slack",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The slack module uses the deprecated `inspect.getargspec()` function which was removed in Python 3.11, causing AttributeError on all operations that invoke functions.",
      "package": "slack",
      "file_name": "bug_report_slack_2025-08-18_23-13_iq2j.md",
      "file_path": "opus-4.1/slack/bug_reports/bug_report_slack_2025-08-18_23-13_iq2j.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "spacy_wordnet Duplicate SSID Overwrite in load_wordnet_domains",
      "target": "spacy_wordnet.wordnet_domains.load_wordnet_domains",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `load_wordnet_domains()` function overwrites domains for duplicate SSIDs instead of merging them, causing data loss when the same synset ID appears multiple times in the input file.",
      "package": "spacy-wordnet",
      "file_name": "bug_report_spacy_wordnet_load_domains_2025-08-19_15-30_a7b3.md",
      "file_path": "opus-4.1/spacy-wordnet/bug_reports/bug_report_spacy_wordnet_load_domains_2025-08-19_15-30_a7b3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "spacy_wordnet.__utils__.fetch_wordnet_lang Improper Error Message Formatting",
      "target": "spacy_wordnet.__utils__.fetch_wordnet_lang",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `fetch_wordnet_lang` function includes unsanitized user input directly in error messages, causing malformed error messages when the input contains special characters like newlines, tabs, or carriage returns.",
      "package": "spacy-wordnet",
      "file_name": "bug_report_spacy_wordnet___utils___fetch_wordnet_lang_2025-08-19_03-16_zrip.md",
      "file_path": "opus-4.1/spacy-wordnet/bug_reports/bug_report_spacy_wordnet___utils___fetch_wordnet_lang_2025-08-19_03-16_zrip.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "spacy_wordnet.wordnet_domains Crashes on Malformed Input Files",
      "target": "spacy_wordnet.wordnet_domains.load_wordnet_domains",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `load_wordnet_domains()` function crashes with a `ValueError` when the input file contains empty lines or lines without tab separators, making it vulnerable to file corruption or malformed custom data files.",
      "package": "spacy-wordnet",
      "file_name": "bug_report_spacy_wordnet_wordnet_domains_2025-08-19_03-16_evle.md",
      "file_path": "opus-4.1/spacy-wordnet/bug_reports/bug_report_spacy_wordnet_wordnet_domains_2025-08-19_03-16_evle.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sphinxcontrib-mermaid Invalid Mermaid Syntax from Special Class Names",
      "target": "sphinxcontrib.mermaid.autoclassdiag.class_diagram",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-01-18",
      "summary": "The `class_diagram` function in sphinxcontrib-mermaid generates invalid Mermaid syntax when Python classes have special characters in their names, particularly newlines and empty strings.",
      "package": "sphinxcontrib-mermaid",
      "file_name": "bug_report_sphinxcontrib_mermaid_2025-01-18_12-45_x7n2.md",
      "file_path": "opus-4.1/sphinxcontrib-mermaid/bug_reports/bug_report_sphinxcontrib_mermaid_2025-01-18_12-45_x7n2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sphinxcontrib.applehelp Control Character Crash",
      "target": "sphinxcontrib.applehelp.AppleHelpBuilder.build_info_plist",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The AppleHelpBuilder crashes when configuration values (title, bundle_id, etc.) contain control characters because plistlib.dump() cannot serialize them.",
      "package": "sphinxcontrib-mermaid",
      "file_name": "bug_report_sphinxcontrib_applehelp_2025-08-18_22-54_7f8u.md",
      "file_path": "opus-4.1/sphinxcontrib-mermaid/bug_reports/bug_report_sphinxcontrib_applehelp_2025-08-18_22-54_7f8u.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sphinxcontrib.devhelp Control Characters Cause Invalid XML",
      "target": "sphinxcontrib.devhelp",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "Control characters in documentation titles or function names cause sphinxcontrib.devhelp to generate invalid XML files that cannot be parsed, making the devhelp documentation unusable.",
      "package": "sphinxcontrib-mermaid",
      "file_name": "bug_report_sphinxcontrib_devhelp_2025-08-18_22-55_dfl6.md",
      "file_path": "opus-4.1/sphinxcontrib-mermaid/bug_reports/bug_report_sphinxcontrib_devhelp_2025-08-18_22-55_dfl6.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sphinxcontrib.htmlhelp C1 Control Characters Incorrectly Escaped",
      "target": "sphinxcontrib.htmlhelp.HTMLHelpBuilder._escape",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_escape` method incorrectly escapes C1 control characters (U+0080-U+009F) causing them to be transformed into different Unicode characters due to HTML's Windows-1252 legacy behavior.",
      "package": "sphinxcontrib-mermaid",
      "file_name": "bug_report_sphinxcontrib_htmlhelp_2025-08-18_21-33_ocjr.md",
      "file_path": "opus-4.1/sphinxcontrib-mermaid/bug_reports/bug_report_sphinxcontrib_htmlhelp_2025-08-18_21-33_ocjr.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sphinxcontrib.mermaid.autoclassdiag Incorrect Exception Type for Edge Case Input",
      "target": "sphinxcontrib.mermaid.autoclassdiag.get_classes",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `get_classes` function raises `ValueError` instead of the expected `MermaidError` when given \".\" as input, violating its documented error handling contract.",
      "package": "sphinxcontrib-mermaid",
      "file_name": "bug_report_sphinxcontrib_mermaid_autoclassdiag_2025-08-18_21-34_4dwa.md",
      "file_path": "opus-4.1/sphinxcontrib-mermaid/bug_reports/bug_report_sphinxcontrib_mermaid_autoclassdiag_2025-08-18_21-34_4dwa.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sphinxcontrib.qthelp Regex Pattern Fails on Newline Characters",
      "target": "sphinxcontrib.qthelp.split_index_entry",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `split_index_entry` function fails to parse index entries containing newline characters in the title portion, returning the entire string instead of splitting it into title and ID components.",
      "package": "sphinxcontrib-mermaid",
      "file_name": "bug_report_sphinxcontrib_qthelp_2025-08-18_21-40_dd32.md",
      "file_path": "opus-4.1/sphinxcontrib-mermaid/bug_reports/bug_report_sphinxcontrib_qthelp_2025-08-18_21-40_dd32.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "SQLAlchemy URL Password Lost When Username Is None",
      "target": "sqlalchemy.engine.url",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "When creating a URL with a password but no username using URL.create(), the password is lost during the render/parse round-trip.",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_url_password_without_username_2025-08-19_00-17_qftf.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_url_password_without_username_2025-08-19_00-17_qftf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "SQLAlchemy URL Query Parameters with Empty Values Lost",
      "target": "sqlalchemy.engine.url",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "Query parameters with empty string values are silently dropped during URL round-trip operations, causing data loss.",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_query_2025-08-19_00-10_gnt0.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_query_2025-08-19_00-10_gnt0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "SQLAlchemy URL Query Parameters with Empty Values Lost During Round-Trip",
      "target": "sqlalchemy.engine.url",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "URL query parameters with empty string values are lost when a URL is rendered to string and parsed back, violating the round-trip property.",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_url_query_params_2025-08-19_00-17_uaqe.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_url_query_params_2025-08-19_00-17_uaqe.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "SQLAlchemy URL Special Characters Lost in Round-Trip",
      "target": "sqlalchemy.engine.url",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "URL passwords containing special characters are URL-encoded when rendered, breaking the round-trip property between `make_url()` and `render_as_string()`.",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_url_2025-08-19_00-10_n8pb.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_url_2025-08-19_00-10_n8pb.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sqlalchemy.cyextension.immutabledict Union Returns Same Object",
      "target": "sqlalchemy.cyextension.immutabledict.union()",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `union()` and `merge_with()` methods of immutabledict return the same object instance instead of creating a new one when the result would be identical to one of the inputs.",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_cyextension_immutabledict_union_2025-08-19_00-11_r2xy.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_cyextension_immutabledict_union_2025-08-19_00-11_r2xy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sqlalchemy.cyextension.immutabledict fromkeys() Method Fails",
      "target": "sqlalchemy.cyextension.immutabledict.fromkeys()",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `fromkeys()` class method of immutabledict raises TypeError instead of creating a new immutabledict with the specified keys and value.",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_cyextension_immutabledict_fromkeys_2025-08-19_00-11_upea.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_cyextension_immutabledict_fromkeys_2025-08-19_00-11_upea.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sqlalchemy.dialects.postgresql.ARRAY TypeError with FLOAT/NUMERIC Types",
      "target": "sqlalchemy.dialects.postgresql.ARRAY",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "Creating a result_processor for PostgreSQL ARRAY types with FLOAT, NUMERIC, REAL, or DOUBLE_PRECISION item types causes a TypeError when coltype is None.",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_dialects_postgresql_array_2025-08-19_00-13_i293.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_dialects_postgresql_array_2025-08-19_00-13_i293.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sqlalchemy.engine URL Empty Password Loss",
      "target": "sqlalchemy.engine.url.URL",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "When creating a URL with `username=None` and an empty string password (`password=''`), the password is lost during round-trip parsing and becomes `None`.",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_engine_url_2025-08-19_00-14_vnbf.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_engine_url_2025-08-19_00-14_vnbf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sqlalchemy.event RuntimeError on Listener Modification During Execution",
      "target": "sqlalchemy.event",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "Modifying event listeners (adding or removing) during event execution causes an unhandled `RuntimeError: deque mutated during iteration` instead of a graceful error or deferred modification.",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_event_2025-08-19_00-17_0v1t.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_event_2025-08-19_00-17_0v1t.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sqlalchemy.events Undocumented Listener Deduplication",
      "target": "sqlalchemy.event.listen",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "SQLAlchemy's event system silently deduplicates identical listener functions when registered multiple times, but this behavior is undocumented and violates reasonable API expectations.",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_events_2025-08-19_00-14_n0br.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_events_2025-08-19_00-14_n0br.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sqlalchemy.ext.orderinglist Multiple Issues with Position Management",
      "target": "sqlalchemy.ext.orderinglist.OrderingList",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "OrderingList fails to maintain position attributes correctly for multiple list operations including `extend()`, `+=`, and slice assignment, violating its core promise to \"manage position information for its children.\"",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_ext_orderinglist_2025-08-19_00-15_8t2j.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_ext_orderinglist_2025-08-19_00-15_8t2j.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sqlalchemy.future CompoundSelect Cannot Chain Set Operations",
      "target": "sqlalchemy.future.select",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `CompoundSelect` object returned by set operations (union, intersect, except_) lacks the methods needed to chain additional set operations, breaking the expected fluent interface pattern.",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_future_compoundselect_2025-08-19_00-18_ee5g.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_future_compoundselect_2025-08-19_00-18_ee5g.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sqlalchemy.orm.polymorphic_union IndexError with Empty Table Map",
      "target": "sqlalchemy.orm.polymorphic_union",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "`polymorphic_union` raises an `IndexError` when called with an empty dictionary as the table_map argument, instead of handling the edge case gracefully.",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_orm_polymorphic_union_2025-08-19_00-21_67tx.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_orm_polymorphic_union_2025-08-19_00-21_67tx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sqlalchemy.schema.sort_tables_and_constraints Returns Sets Instead of Lists",
      "target": "sqlalchemy.schema.sort_tables_and_constraints",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `sort_tables_and_constraints` function returns sets instead of lists for the constraints part of its tuple return values, violating its documented interface.",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_sort_tables_and_constraints_2025-08-19_00-17_eua5.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_sort_tables_and_constraints_2025-08-19_00-17_eua5.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sqlalchemy.sql not_ operator fails to simplify Python booleans",
      "target": "sqlalchemy.sql.not_",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `sql.not_()` function fails to simplify Python boolean values (True/False) to SQL constants, instead creating parameter bindings that prevent proper logical simplification in compound expressions.",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_sql_2025-08-19_00-18_byzb.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_sql_2025-08-19_00-18_byzb.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sqlalchemy.types.Float Precision Loss During Decimal Conversion",
      "target": "sqlalchemy.types.Float",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The Float type in SQLAlchemy loses precision when converting float values to Decimal with `asdecimal=True`, due to string formatting with a fixed number of decimal places.",
      "package": "sqlalchemy",
      "file_name": "bug_report_sqlalchemy_types_float_2025-08-19_00-18_awue.md",
      "file_path": "opus-4.1/sqlalchemy/bug_reports/bug_report_sqlalchemy_types_float_2025-08-19_00-18_awue.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "SQLiteTrie Incorrect ShortKeyError After Deletion",
      "target": "sqltrie.sqlite.SQLiteTrie",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "SQLiteTrie incorrectly raises ShortKeyError instead of KeyError when accessing a deleted root node, violating the expected exception semantics.",
      "package": "sqltrie",
      "file_name": "bug_report_sqltrie_shortkey_2025-08-19_03-03_fa09.md",
      "file_path": "opus-4.1/sqltrie/bug_reports/bug_report_sqltrie_shortkey_2025-08-19_03-03_fa09.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "SQLiteTrie Null Character Embedded SQL Error",
      "target": "sqltrie.sqlite.SQLiteTrie",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "SQLiteTrie crashes with ValueError when keys contain null characters (\\x00) due to SQL string embedding issues in the executescript() method.",
      "package": "sqltrie",
      "file_name": "bug_report_sqltrie_null_2025-08-19_03-03_tknx.md",
      "file_path": "opus-4.1/sqltrie/bug_reports/bug_report_sqltrie_null_2025-08-19_03-03_tknx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "SQLiteTrie Root Node Not Included in Prefixes",
      "target": "sqltrie.SQLiteTrie.prefixes()",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "SQLiteTrie's `prefixes()` method fails to include the root node `()` as a prefix even when it has an associated value, causing `shortest_prefix()` to return incorrect results.",
      "package": "sqltrie",
      "file_name": "bug_report_sqltrie_prefixes_2025-08-19_02-58_pcyr.md",
      "file_path": "opus-4.1/sqltrie/bug_reports/bug_report_sqltrie_prefixes_2025-08-19_02-58_pcyr.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "esp_idf_monitor.base.line_matcher Filter Parsing Fails with Colons in Tags",
      "target": "esp_idf_monitor.base.line_matcher.LineMatcher",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "LineMatcher's filter string parsing fails when tags contain colons, causing ValueError exceptions when creating filters with tags like \":\" or \"tag:subtag\".",
      "package": "sqltrie",
      "file_name": "bug_report_esp_idf_monitor_base_line_matcher_2025-08-19_02-57_fiyd.md",
      "file_path": "opus-4.1/sqltrie/bug_reports/bug_report_esp_idf_monitor_base_line_matcher_2025-08-19_02-57_fiyd.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sqltrie.PyGTrie Inconsistent Error Handling for Non-Existent Prefixes",
      "target": "sqltrie.pygtrie.PyGTrie",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "PyGTrie.items() raises KeyError when called with a non-existent prefix, while PyGTrie.view() gracefully handles the same situation by returning an empty trie. This inconsistency makes the API unpredictable.",
      "package": "sqltrie",
      "file_name": "bug_report_sqltrie_pygtrie_2025-08-19_14-45_x7k2.md",
      "file_path": "opus-4.1/sqltrie/bug_reports/bug_report_sqltrie_pygtrie_2025-08-19_14-45_x7k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sqltrie.serialized shortest_prefix Returns Wrong Key",
      "target": "sqltrie.serialized.SerializedTrie.shortest_prefix",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `shortest_prefix` method in `SerializedTrie` returns the query key instead of the actual shortest prefix key found in the trie.",
      "package": "sqltrie",
      "file_name": "bug_report_sqltrie_serialized_2025-08-19_03-00_t50q.md",
      "file_path": "opus-4.1/sqltrie/bug_reports/bug_report_sqltrie_serialized_2025-08-19_03-00_t50q.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "srsly YAML Doesn't Preserve NEL Control Character in Dictionary Keys",
      "target": "srsly.yaml_dumps",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "YAML serialization/deserialization silently converts the NEL (Next Line, U+0085) control character to a space (U+0020) when used in dictionary keys, causing data corruption.",
      "package": "srsly",
      "file_name": "bug_report_srsly_yaml_nel_character_2025-08-18_00-01_ab3d.md",
      "file_path": "opus-4.1/srsly/bug_reports/bug_report_srsly_yaml_nel_character_2025-08-18_00-01_ab3d.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "srsly.cloudpickle Mutable Closure Side Effect Re-execution",
      "target": "srsly.cloudpickle",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Functions with mutable closures that contain side effects have those side effects re-executed when the function is called after being pickled and unpickled, violating the round-trip property.",
      "package": "srsly",
      "file_name": "bug_report_srsly_cloudpickle_2025-08-18_22-57_i4qt.md",
      "file_path": "opus-4.1/srsly/bug_reports/bug_report_srsly_cloudpickle_2025-08-18_22-57_i4qt.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "srsly.is_json_serializable Crashes with Non-UTF8 Bytes",
      "target": "srsly.is_json_serializable",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `is_json_serializable` function crashes with a UnicodeDecodeError when checking non-UTF8 byte strings, instead of returning False.",
      "package": "srsly",
      "file_name": "bug_report_srsly_is_json_serializable_2025-08-18_00-00_xk9z.md",
      "file_path": "opus-4.1/srsly/bug_reports/bug_report_srsly_is_json_serializable_2025-08-18_00-00_xk9z.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "srsly.msgpack Integer Overflow on Large Values",
      "target": "srsly.msgpack",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The msgpack serialization functions in srsly raise OverflowError when attempting to serialize integers outside the range [-2^63, 2^64-1], which are valid Python integers commonly used in cryptographic, scientific, and timestamp applications.",
      "package": "srsly",
      "file_name": "bug_report_srsly_msgpack_2025-08-18_21-33_owup.md",
      "file_path": "opus-4.1/srsly/bug_reports/bug_report_srsly_msgpack_2025-08-18_21-33_owup.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "srsly.ruamel_yaml Round-trip Failure with U+0085 Character",
      "target": "srsly.ruamel_yaml",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The YAML serialization/deserialization functions incorrectly handle the Unicode character U+0085 (Next Line) in dictionary keys, replacing it with a space during round-trip operations.",
      "package": "srsly",
      "file_name": "bug_report_srsly_ruamel_yaml_2025-08-18_22-54_mh0h.md",
      "file_path": "opus-4.1/srsly/bug_reports/bug_report_srsly_ruamel_yaml_2025-08-18_22-54_mh0h.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "srsly.ujson Converts Large Finite Floats to Infinity",
      "target": "srsly.ujson.dumps",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "ujson incorrectly converts large but finite floating-point values to infinity during encoding/decoding, causing data corruption and making round-trip encoding impossible.",
      "package": "srsly",
      "file_name": "bug_report_srsly_ujson_2025-08-18_21-33_r22e.md",
      "file_path": "opus-4.1/srsly/bug_reports/bug_report_srsly_ujson_2025-08-18_21-33_r22e.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "srsly.ujson Float Precision Loss",
      "target": "srsly.ujson.dumps",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "ujson loses precision when encoding/decoding floating-point numbers, particularly for large values, violating the round-trip property and causing data corruption.",
      "package": "srsly",
      "file_name": "bug_report_srsly_ujson_2025-08-18_21-33_ej1s.md",
      "file_path": "opus-4.1/srsly/bug_reports/bug_report_srsly_ujson_2025-08-18_21-33_ej1s.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "srsly.ujson Integer Overflow on Large Negative Integers",
      "target": "srsly.ujson.dumps",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "ujson.dumps() crashes with OverflowError when encoding integers smaller than -(2^63), while the standard json module handles these values correctly.",
      "package": "srsly",
      "file_name": "bug_report_srsly_ujson_2025-08-18_21-33_uetq.md",
      "file_path": "opus-4.1/srsly/bug_reports/bug_report_srsly_ujson_2025-08-18_21-33_uetq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "statistics.quantiles() Returns Values Outside Data Range",
      "target": "statistics.quantiles",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `statistics.quantiles()` function with `method='exclusive'` (the default) returns quantile values that fall outside the minimum and maximum bounds of the input data when the sample size is small.",
      "package": "statistics",
      "file_name": "bug_report_statistics_quantiles_2025-08-18_04-53_5h4i.md",
      "file_path": "opus-4.1/statistics/bug_reports/bug_report_statistics_quantiles_2025-08-18_04-53_5h4i.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "storage3 UnicodeEncodeError with Non-ASCII Headers",
      "target": "storage3.create_client",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `create_client` function crashes with UnicodeEncodeError when headers contain non-ASCII characters, preventing client initialization with certain header values.",
      "package": "storage3",
      "file_name": "bug_report_storage3_2025-08-18_23-01_rnp2.md",
      "file_path": "opus-4.1/storage3/bug_reports/bug_report_storage3_2025-08-18_23-01_rnp2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "storage3.constants Mutable Constants Vulnerability",
      "target": "storage3.constants",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The DEFAULT_SEARCH_OPTIONS and DEFAULT_FILE_OPTIONS in storage3.constants are mutable dictionaries that can be modified at runtime, affecting all code using these \"constants\" and breaking encapsulation.",
      "package": "storage3",
      "file_name": "bug_report_storage3_constants_2025-08-18_21-52_a4hz.md",
      "file_path": "opus-4.1/storage3/bug_reports/bug_report_storage3_constants_2025-08-18_21-52_a4hz.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "storage3.types.UploadResponse Dataclass/Init Conflict",
      "target": "storage3.types.UploadResponse",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "UploadResponse class has conflicting @dataclass decorator and custom __init__ method, breaking dataclass functionality and causing serialization failures.",
      "package": "storage3",
      "file_name": "bug_report_storage3_types_2025-08-18_22-58_aulb.md",
      "file_path": "opus-4.1/storage3/bug_reports/bug_report_storage3_types_2025-08-18_22-58_aulb.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pyramid.path FSAssetDescriptor Inconsistent Null Byte Handling",
      "target": "pyramid.path.FSAssetDescriptor",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "FSAssetDescriptor methods handle paths containing null bytes inconsistently - some methods gracefully handle invalid paths while `listdir()` crashes with a ValueError.",
      "package": "sudachipy",
      "file_name": "bug_report_pyramid_path_2025-08-18_04-34_k3m9.md",
      "file_path": "opus-4.1/sudachipy/bug_reports/bug_report_pyramid_path_2025-08-18_04-34_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sudachipy Config Type Validation and Invalid JSON Generation",
      "target": "sudachipy.Config",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `Config` class in sudachipy accepts non-string values for the `projection` field, violating its type contract and potentially producing invalid JSON that violates the JSON specification.",
      "package": "sudachipy",
      "file_name": "bug_report_sudachipy_config_2025-08-18_02-22_x3k9.md",
      "file_path": "opus-4.1/sudachipy/bug_reports/bug_report_sudachipy_config_2025-08-18_02-22_x3k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sudachipy.SplitMode Undocumented Error Behavior",
      "target": "sudachipy.SplitMode",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `SplitMode.__init__` method raises `SudachiError` for invalid mode strings, but this error behavior is not documented in the type hints or docstring.",
      "package": "sudachipy",
      "file_name": "bug_report_sudachipy_splitmode_2025-08-18_04-42_k3j9.md",
      "file_path": "opus-4.1/sudachipy/bug_reports/bug_report_sudachipy_splitmode_2025-08-18_04-42_k3j9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sudachipy.command_line Silent Failure on Long Descriptions",
      "target": "sudachipy.command_line._command_build",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Dictionary build commands silently fail when descriptions exceed 255 bytes in UTF-8, printing a misleading \"will be truncated\" message but actually returning without building the dictionary.",
      "package": "sudachipy",
      "file_name": "bug_report_sudachipy_command_line_2025-08-18_20-37_6jw1.md",
      "file_path": "opus-4.1/sudachipy/bug_reports/bug_report_sudachipy_command_line_2025-08-18_20-37_6jw1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "sudachipy.config._filter_nulls Mutates Input Dictionary",
      "target": "sudachipy.config._filter_nulls",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_filter_nulls` function in sudachipy's config module mutates its input dictionary by deleting keys with None values, instead of returning a filtered copy.",
      "package": "sudachipy",
      "file_name": "bug_report_sudachipy_config_2025-08-18_20-40_ew27.md",
      "file_path": "opus-4.1/sudachipy/bug_reports/bug_report_sudachipy_config_2025-08-18_20-40_ew27.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pathlib.PurePath.with_name() Inconsistent Special Name Validation",
      "target": "pathlib.PurePath.with_name",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "`PurePath.with_name()` inconsistently validates special directory names - it correctly rejects `'.'` but incorrectly accepts `'..'`, despite both being special directory references in filesystems.",
      "package": "testpath",
      "file_name": "bug_report_pathlib_with_name_2025-08-19_03-11_l0ze.md",
      "file_path": "opus-4.1/testpath/bug_reports/bug_report_pathlib_with_name_2025-08-19_03-11_l0ze.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "testpath.MockCommand Records Incorrect argv[0]",
      "target": "testpath.MockCommand",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "MockCommand records the full path to the mocked command in argv[0] instead of just the command name, which differs from standard Unix command behavior and violates mock fidelity.",
      "package": "testpath",
      "file_name": "bug_report_testpath_MockCommand_2025-08-19_03-33_k9x2.md",
      "file_path": "opus-4.1/testpath/bug_reports/bug_report_testpath_MockCommand_2025-08-19_03-33_k9x2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "testpath.asserts Broken Symlink Inverse Property Violation",
      "target": "testpath.asserts",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The functions `assert_path_exists` and `assert_not_path_exists` violate their inverse property when dealing with broken symlinks, causing both assertions to fail for the same path.",
      "package": "testpath",
      "file_name": "bug_report_testpath_asserts_2025-08-19_14-30_x9k2.md",
      "file_path": "opus-4.1/testpath/bug_reports/bug_report_testpath_asserts_2025-08-19_14-30_x9k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "testpath.commands Carriage Return Conversion",
      "target": "testpath.commands.MockCommand.fixed_output",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "MockCommand.fixed_output incorrectly converts carriage returns (`\\r`) to newlines (`\\n`) when the output is captured using subprocess in text mode, violating the \"fixed output\" contract.",
      "package": "testpath",
      "file_name": "bug_report_testpath_commands_2025-08-19_03-13_lzk0.md",
      "file_path": "opus-4.1/testpath/bug_reports/bug_report_testpath_commands_2025-08-19_03-13_lzk0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "testpath.commands Null Byte Handling",
      "target": "testpath.commands.prepend_to_path",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `prepend_to_path` function crashes with a generic ValueError when given a directory name containing a null byte, instead of handling the invalid input gracefully.",
      "package": "testpath",
      "file_name": "bug_report_testpath_commands_2025-08-19_03-13_wou3.md",
      "file_path": "opus-4.1/testpath/bug_reports/bug_report_testpath_commands_2025-08-19_03-13_wou3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "testpath.commands Path Separator Handling",
      "target": "testpath.commands.prepend_to_path",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `prepend_to_path` and `remove_from_path` functions fail to properly handle directory names containing the PATH separator character (`:` on Unix, `;` on Windows), causing `remove_from_path` to fail with a ValueError.",
      "package": "testpath",
      "file_name": "bug_report_testpath_commands_2025-08-19_03-13_vpof.md",
      "file_path": "opus-4.1/testpath/bug_reports/bug_report_testpath_commands_2025-08-19_03-13_vpof.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "testpath.tempdir AttributeError in cleanup when file opening fails",
      "target": "testpath.tempdir.NamedFileInTemporaryDirectory",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "NamedFileInTemporaryDirectory's cleanup method raises AttributeError when __init__ fails after creating the temporary directory but before successfully opening the file.",
      "package": "testpath",
      "file_name": "bug_report_testpath_tempdir_2025-08-19_03-11_l2wb.md",
      "file_path": "opus-4.1/testpath/bug_reports/bug_report_testpath_tempdir_2025-08-19_03-11_l2wb.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tokenizers add_tokens() Returns Incorrect Count for Existing Tokens",
      "target": "tokenizers.ByteLevelBPETokenizer.add_tokens",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `add_tokens()` method returns 1 when adding an existing token but doesn't actually increase the vocabulary size, leading to inconsistent state.",
      "package": "tokenizers",
      "file_name": "bug_report_tokenizers_add_tokens_2025-08-18_21-25_ouof.md",
      "file_path": "opus-4.1/tokenizers/bug_reports/bug_report_tokenizers_add_tokens_2025-08-18_21-25_ouof.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tokenizers enable_padding() Doesn't Enforce Fixed Length",
      "target": "tokenizers.ByteLevelBPETokenizer.enable_padding",
      "severity": "High",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "When `enable_padding(length=N)` is called, sequences longer than N are not truncated, violating the expectation that all outputs will have exactly length N.",
      "package": "tokenizers",
      "file_name": "bug_report_tokenizers_padding_2025-08-18_21-26_ngyd.md",
      "file_path": "opus-4.1/tokenizers/bug_reports/bug_report_tokenizers_padding_2025-08-18_21-26_ngyd.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tokenizers.Encoding Incorrect Offsets When Unknown Characters Are Dropped",
      "target": "tokenizers.Encoding",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "When the tokenizer drops unknown characters, the offsets in the Encoding object incorrectly point to the positions of the dropped characters instead of the actual token positions.",
      "package": "tokenizers",
      "file_name": "bug_report_tokenizers_tokenizers_2025-08-18_14-31_c3d4.md",
      "file_path": "opus-4.1/tokenizers/bug_reports/bug_report_tokenizers_tokenizers_2025-08-18_14-31_c3d4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tokenizers.Tokenizer Silently Drops Unknown Characters",
      "target": "tokenizers.Tokenizer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The Tokenizer silently drops characters that are not in its vocabulary instead of using the [UNK] token, causing encode/decode round-trip failures.",
      "package": "tokenizers",
      "file_name": "bug_report_tokenizers_tokenizers_2025-08-18_14-30_a1b2.md",
      "file_path": "opus-4.1/tokenizers/bug_reports/bug_report_tokenizers_tokenizers_2025-08-18_14-30_a1b2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tokenizers.decoders.Strip Does Not Strip Characters",
      "target": "tokenizers.decoders.Strip",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The Strip decoder in tokenizers.decoders claims to strip n characters from the left or right of each token, but it doesn't strip any characters at all - it just concatenates the tokens unchanged.",
      "package": "tokenizers",
      "file_name": "bug_report_tokenizers_decoders_Strip_2025-08-18_10-30_x7k9.md",
      "file_path": "opus-4.1/tokenizers/bug_reports/bug_report_tokenizers_decoders_Strip_2025-08-18_10-30_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tokenizers.models Unknown Tokens Return None Instead of UNK ID",
      "target": "tokenizers.models.WordLevel",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "WordLevel and WordPiece models return `None` for unknown tokens instead of returning the ID of the configured unknown token, violating the documented behavior.",
      "package": "tokenizers",
      "file_name": "bug_report_tokenizers_models_unknown_token_2025-08-18_21-27_92j2.md",
      "file_path": "opus-4.1/tokenizers/bug_reports/bug_report_tokenizers_models_unknown_token_2025-08-18_21-27_92j2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tokenizers.models.WordLevel Accepts Duplicate Token IDs Breaking Round-Trip Property",
      "target": "tokenizers.models.WordLevel",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "WordLevel model accepts vocabularies where multiple tokens map to the same ID, violating the bijection property between tokens and IDs and breaking round-trip guarantees.",
      "package": "tokenizers",
      "file_name": "bug_report_tokenizers_models_wordlevel_2025-08-18_21-27_i59p.md",
      "file_path": "opus-4.1/tokenizers/bug_reports/bug_report_tokenizers_models_wordlevel_2025-08-18_21-27_i59p.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tokenizers.normalizers.BertNormalizer not idempotent with Chinese characters",
      "target": "tokenizers.normalizers.BertNormalizer",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "BertNormalizer violates idempotence when processing Chinese characters. It adds spaces around Chinese characters on each application, causing the output to differ when applied multiple times.",
      "package": "tokenizers",
      "file_name": "bug_report_tokenizers_normalizers_bert_2025-08-18_14-32_c9h4.md",
      "file_path": "opus-4.1/tokenizers/bug_reports/bug_report_tokenizers_normalizers_bert_2025-08-18_14-32_c9h4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tokenizers.normalizers.Prepend fails on empty string",
      "target": "tokenizers.normalizers.Prepend",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The Prepend normalizer fails to add the prefix when given an empty string, returning an empty string instead of the expected prefix.",
      "package": "tokenizers",
      "file_name": "bug_report_tokenizers_normalizers_prepend_2025-08-18_14-30_a7f2.md",
      "file_path": "opus-4.1/tokenizers/bug_reports/bug_report_tokenizers_normalizers_prepend_2025-08-18_14-30_a7f2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tokenizers.normalizers.Strip doesn't handle all whitespace characters",
      "target": "tokenizers.normalizers.Strip",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The Strip normalizer fails to remove certain whitespace characters that Python's `str.isspace()` recognizes as whitespace, such as the unit separator character (`\\x1f`).",
      "package": "tokenizers",
      "file_name": "bug_report_tokenizers_normalizers_strip_2025-08-18_14-31_b8g3.md",
      "file_path": "opus-4.1/tokenizers/bug_reports/bug_report_tokenizers_normalizers_strip_2025-08-18_14-31_b8g3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tokenizers.tools.visualizer Missing Closing Parenthesis in HSL Color Format",
      "target": "tokenizers.tools.visualizer.EncodingVisualizer.calculate_label_colors",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `calculate_label_colors` method generates malformed HSL color strings missing a closing parenthesis, causing CSS parsing errors when used in HTML visualization.",
      "package": "tokenizers",
      "file_name": "bug_report_tokenizers_tools_visualizer_2025-08-18_04-33_k3x9.md",
      "file_path": "opus-4.1/tokenizers/bug_reports/bug_report_tokenizers_tools_visualizer_2025-08-18_04-33_k3x9.md",
      "score": null,
      "bug_status": {
        "status": "valid",
        "url": "https://github.com/huggingface/tokenizers/pull/1853"
      }
    },
    {
      "title": "tokenizers.trainers UnigramTrainer Accepts Invalid shrinking_factor Values",
      "target": "tokenizers.trainers.UnigramTrainer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "UnigramTrainer accepts mathematically invalid values for the `shrinking_factor` parameter, including negative values and values greater than 1, which violate the semantic meaning of a \"shrinking\" factor.",
      "package": "tokenizers",
      "file_name": "bug_report_tokenizers_trainers_shrinking_factor_2025-08-18_10-31_de7c.md",
      "file_path": "opus-4.1/tokenizers/bug_reports/bug_report_tokenizers_trainers_shrinking_factor_2025-08-18_10-31_de7c.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "pydantic.functional_validators PlainValidator Blocks BeforeValidator",
      "target": "pydantic.functional_validators",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "When PlainValidator and BeforeValidator are used together in an Annotated type, the BeforeValidator is completely skipped, violating the documented validator execution order.",
      "package": "tqdm",
      "file_name": "bug_report_pydantic_functional_validators_2025-08-18_19-50_teee.md",
      "file_path": "opus-4.1/tqdm/bug_reports/bug_report_pydantic_functional_validators_2025-08-18_19-50_teee.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tqdm.asyncio.gather Improper Exception Handling",
      "target": "tqdm.asyncio.tqdm_asyncio.gather",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "`tqdm_asyncio.gather()` fails to properly handle exceptions from multiple tasks, leaving unhandled task exceptions that trigger \"Task exception was never retrieved\" warnings.",
      "package": "tqdm",
      "file_name": "bug_report_tqdm_asyncio_gather_2025-08-18_19-45_igsv.md",
      "file_path": "opus-4.1/tqdm/bug_reports/bug_report_tqdm_asyncio_gather_2025-08-18_19-45_igsv.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tqdm.auto Incorrect Percentage Rounding",
      "target": "tqdm.auto.tqdm.format_meter",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "format_meter incorrectly rounds percentages, showing 17% for 1/6 (16.67%) when it should display 16% using integer truncation.",
      "package": "tqdm",
      "file_name": "bug_report_tqdm_auto_2025-08-18_19-50_pmqm.md",
      "file_path": "opus-4.1/tqdm/bug_reports/bug_report_tqdm_auto_2025-08-18_19-50_pmqm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tqdm.auto Negative Progress Allowed",
      "target": "tqdm.auto.tqdm",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "tqdm allows progress counter to become negative when update() is called with negative values, violating the fundamental invariant that progress should never be negative.",
      "package": "tqdm",
      "file_name": "bug_report_tqdm_auto_2025-08-18_19-50_cof6.md",
      "file_path": "opus-4.1/tqdm/bug_reports/bug_report_tqdm_auto_2025-08-18_19-50_cof6.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tqdm.cli.cast Backslash Escape Sequence Handling",
      "target": "tqdm.cli.cast",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `cast` function in tqdm.cli fails to correctly handle the escaped backslash sequence `\\\\` when casting to 'chr' type, raising a TqdmTypeError instead of returning the expected single backslash byte.",
      "package": "tqdm",
      "file_name": "bug_report_tqdm_cli_2025-08-18_19-50_k6s9.md",
      "file_path": "opus-4.1/tqdm/bug_reports/bug_report_tqdm_cli_2025-08-18_19-50_k6s9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tqdm.contrib.tenumerate Silently Ignores start Parameter for NumPy Arrays",
      "target": "tqdm.contrib.tenumerate",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `start` parameter in `tqdm.contrib.tenumerate` is silently ignored when used with NumPy arrays, causing inconsistent behavior compared to regular iterables.",
      "package": "tqdm",
      "file_name": "bug_report_tqdm_contrib_tenumerate_2025-08-18_19-52_gz84.md",
      "file_path": "opus-4.1/tqdm/bug_reports/bug_report_tqdm_contrib_tenumerate_2025-08-18_19-52_gz84.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tqdm.gui Non-Idempotent close() Method",
      "target": "tqdm.gui.tqdm_gui.close",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `close()` method in `tqdm.gui.tqdm_gui` is not idempotent and raises `KeyError` when called multiple times, particularly when `__del__` is triggered after an explicit `close()`.",
      "package": "tqdm",
      "file_name": "bug_report_tqdm_gui_2025-08-18_19-52_rvwc.md",
      "file_path": "opus-4.1/tqdm/bug_reports/bug_report_tqdm_gui_2025-08-18_19-52_rvwc.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tqdm.notebook AttributeError in close() after failed initialization",
      "target": "tqdm.notebook.tqdm_notebook",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "When `tqdm_notebook` initialization fails due to missing ipywidgets, the object is left in an inconsistent state where the `disp` attribute is not set, causing an AttributeError when `close()` is called during garbage collection.",
      "package": "tqdm",
      "file_name": "bug_report_tqdm_notebook_2025-08-18_19-54_kex2.md",
      "file_path": "opus-4.1/tqdm/bug_reports/bug_report_tqdm_notebook_2025-08-18_19-54_kex2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tqdm.std.Bar ValueError on Non-Numeric Format Specifiers",
      "target": "tqdm.std.Bar.__format__",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The Bar class's `__format__` method crashes with ValueError when given format specifiers containing non-numeric characters that are not recognized type indicators ('a', 'u', 'b').",
      "package": "tqdm",
      "file_name": "bug_report_tqdm_std_bar_format_2025-08-18_19-50_bcpk.md",
      "file_path": "opus-4.1/tqdm/bug_reports/bug_report_tqdm_std_bar_format_2025-08-18_19-50_bcpk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tqdm.std.EMA ZeroDivisionError with smoothing=0",
      "target": "tqdm.std.EMA",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The EMA class raises a ZeroDivisionError when initialized with smoothing=0.0 and called with any value.",
      "package": "tqdm",
      "file_name": "bug_report_tqdm_std_ema_zerodivision_2025-08-18_19-50_yeoy.md",
      "file_path": "opus-4.1/tqdm/bug_reports/bug_report_tqdm_std_ema_zerodivision_2025-08-18_19-50_yeoy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tqdm.utils.disp_trim Incomplete ANSI Code Handling",
      "target": "tqdm.utils.disp_trim",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The disp_trim function can produce malformed output containing partial ANSI escape sequences without proper reset codes when trimming strings with multiple ANSI codes.",
      "package": "tqdm",
      "file_name": "bug_report_tqdm_utils_disp_trim_2025-08-18_19-50_5g2e.md",
      "file_path": "opus-4.1/tqdm/bug_reports/bug_report_tqdm_utils_disp_trim_2025-08-18_19-50_5g2e.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tqdm.utils.disp_trim Incorrect Handling of Negative Lengths",
      "target": "tqdm.utils.disp_trim",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `disp_trim` function does not properly handle negative length values, violating the expected property that trimmed strings should have display length \u2264 max(0, requested_length).",
      "package": "tqdm",
      "file_name": "bug_report_tqdm_utils_disp_trim_2025-08-18_19-51_4bc5.md",
      "file_path": "opus-4.1/tqdm/bug_reports/bug_report_tqdm_utils_disp_trim_2025-08-18_19-51_4bc5.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "trino.auth._OAuth2TokenBearer._parse_authenticate_header Multiple Parsing Issues",
      "target": "trino.auth._OAuth2TokenBearer._parse_authenticate_header",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `_parse_authenticate_header` method has multiple parsing issues: it crashes on empty values with IndexError, incorrectly parses values containing commas, and improperly handles keys with spaces.",
      "package": "trino",
      "file_name": "bug_report_trino_auth_2025-08-18_14-30_x7k2.md",
      "file_path": "opus-4.1/trino/bug_reports/bug_report_trino_auth_2025-08-18_14-30_x7k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "trino.client ValueError in get_prepared_statement_values",
      "target": "trino.client.get_prepared_statement_values",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `get_prepared_statement_values` function crashes with a ValueError when parsing header values that don't contain an equals sign, causing an unpacking error.",
      "package": "trino",
      "file_name": "bug_report_trino_client_2025-08-18_14-32_q8n4.md",
      "file_path": "opus-4.1/trino/bug_reports/bug_report_trino_client_2025-08-18_14-32_q8n4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "trino.client ValueError in get_roles_values",
      "target": "trino.client.get_roles_values",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `get_roles_values` function crashes with a ValueError when parsing header values that don't contain an equals sign, causing an unpacking error.",
      "package": "trino",
      "file_name": "bug_report_trino_client_2025-08-18_14-31_m3p7.md",
      "file_path": "opus-4.1/trino/bug_reports/bug_report_trino_client_2025-08-18_14-31_m3p7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "trino.client ValueError in get_session_property_values",
      "target": "trino.client.get_session_property_values",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `get_session_property_values` function crashes with a ValueError when parsing header values that don't contain an equals sign, causing an unpacking error.",
      "package": "trino",
      "file_name": "bug_report_trino_client_2025-08-18_14-30_x9k2.md",
      "file_path": "opus-4.1/trino/bug_reports/bug_report_trino_client_2025-08-18_14-30_x9k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "trino.constants Mutable List Constants",
      "target": "trino.constants",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `LENGTH_TYPES`, `PRECISION_TYPES`, and `SCALE_TYPES` constants in `trino.constants` are mutable lists that can be modified at runtime, violating the expectation that constants should be immutable.",
      "package": "trino",
      "file_name": "bug_report_trino_constants_2025-08-18_00-00_m7x9.md",
      "file_path": "opus-4.1/trino/bug_reports/bug_report_trino_constants_2025-08-18_00-00_m7x9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "trino.dbapi Large Integer Overflow",
      "target": "trino.dbapi._format_prepared_param",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `_format_prepared_param` method in trino.dbapi fails to convert integers exceeding the 64-bit BIGINT range to DECIMAL format, despite a TODO comment indicating this should be done. This causes potential overflow errors when large Python integers are sent to the database.",
      "package": "trino",
      "file_name": "bug_report_trino_dbapi_2025-08-18_00-00_a3f2.md",
      "file_path": "opus-4.1/trino/bug_reports/bug_report_trino_dbapi_2025-08-18_00-00_a3f2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "trino.mapper.BooleanValueMapper Fails on Strings with Whitespace",
      "target": "trino.mapper.BooleanValueMapper",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "BooleanValueMapper fails to parse boolean string values that contain leading or trailing whitespace, even though such values commonly occur in real-world data transmission scenarios.",
      "package": "trino",
      "file_name": "bug_report_trino_mapper_boolean_whitespace_2025-08-18_21-06_hxhj.md",
      "file_path": "opus-4.1/trino/bug_reports/bug_report_trino_mapper_boolean_whitespace_2025-08-18_21-06_hxhj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "trino.mapper.IntegerValueMapper Inconsistent Float Handling",
      "target": "trino.mapper.IntegerValueMapper",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "IntegerValueMapper inconsistently handles float values: it successfully converts float objects to integers but fails when the same values are provided as strings, creating an unexpected asymmetry in the API.",
      "package": "trino",
      "file_name": "bug_report_trino_mapper_integer_float_string_2025-08-18_21-07_x2q8.md",
      "file_path": "opus-4.1/trino/bug_reports/bug_report_trino_mapper_integer_float_string_2025-08-18_21-07_x2q8.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "trino.transaction IsolationLevel.check() Accepts Non-Integer Types",
      "target": "trino.transaction.IsolationLevel.check()",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `IsolationLevel.check()` method incorrectly accepts non-integer numeric types (float, bool, Decimal, complex) that are numerically equal to valid isolation levels, violating type safety.",
      "package": "trino",
      "file_name": "bug_report_trino_transaction_2025-08-18_21-01_fvts.md",
      "file_path": "opus-4.1/trino/bug_reports/bug_report_trino_transaction_2025-08-18_21-01_fvts.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "trino.types TemporalType.round_to() Crashes on NaN",
      "target": "trino.types.TemporalType.round_to()",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The round_to() method in TemporalType crashes with TypeError when given NaN fractional seconds, as it doesn't handle special Decimal values properly.",
      "package": "trino",
      "file_name": "bug_report_trino_types_nan_handling_2025-08-18_21-04_y1fd.md",
      "file_path": "opus-4.1/trino/bug_reports/bug_report_trino_types_nan_handling_2025-08-18_21-04_y1fd.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "trino.types TemporalType.round_to() KeyError on Negative Precision",
      "target": "trino.types.TemporalType.round_to()",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The round_to() method raises KeyError when given negative precision values, as it tries to access non-existent negative indices in the POWERS_OF_TEN dictionary.",
      "package": "trino",
      "file_name": "bug_report_trino_types_negative_precision_2025-08-18_21-04_3x5x.md",
      "file_path": "opus-4.1/trino/bug_reports/bug_report_trino_types_negative_precision_2025-08-18_21-04_3x5x.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "trino.types.NamedRowTuple Shadows Tuple Methods",
      "target": "trino.types.NamedRowTuple",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "NamedRowTuple allows field names that shadow built-in tuple methods, making those methods inaccessible and causing TypeError when called.",
      "package": "trino",
      "file_name": "bug_report_trino_types_namedrowtuple_2025-08-18_21-04_64qa.md",
      "file_path": "opus-4.1/trino/bug_reports/bug_report_trino_types_namedrowtuple_2025-08-18_21-04_64qa.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "BaseAWSObject Accepts Invalid Empty Titles",
      "target": "troposphere.BaseAWSObject",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "BaseAWSObject and its subclasses accept empty string and None as titles without validation, even though the validate_title() method requires alphanumeric characters matching the regex `^[a-zA-Z0-9]+$`.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_BaseAWSObject_2025-08-19_02-08_l4pj.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_BaseAWSObject_2025-08-19_02-08_l4pj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Troposphere Empty Title Validation Bypass",
      "target": "troposphere.BaseAWSObject",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The BaseAWSObject class in troposphere fails to validate empty string titles, allowing creation of CloudFormation resources with invalid empty logical names.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_2025-08-19_14-30_x7k2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_2025-08-19_14-30_x7k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Troposphere Parameter Accepts Invalid Empty String for Number Type",
      "target": "troposphere.Parameter",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-01-18",
      "summary": "The Parameter class incorrectly accepts an empty string as a default value for Number type parameters, violating CloudFormation's type contract.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_parameter_2025-01-18_15-31_p9x2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_parameter_2025-01-18_15-31_p9x2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Troposphere Tags Concatenation Creates Duplicate Keys",
      "target": "troposphere.Tags",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-01-18",
      "summary": "The Tags concatenation operator (+) creates duplicate tag keys when combining Tags objects with overlapping keys, resulting in invalid CloudFormation templates.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_tags_2025-01-18_15-30_k3m9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_tags_2025-01-18_15-30_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere AWSObject Round-Trip Serialization Failure",
      "target": "troposphere.resourceexplorer2",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `from_dict()` method cannot deserialize the output of `to_dict()` for AWSObject classes, breaking the round-trip serialization contract.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_resourceexplorer2_2025-08-19_02-24_sky7.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_resourceexplorer2_2025-08-19_02-24_sky7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Allows Empty Titles for Resources",
      "target": "troposphere",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The troposphere library incorrectly allows empty strings and None as titles for AWSObject instances (CloudFormation resources), which produces invalid CloudFormation templates with missing logical IDs and broken references.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_empty_titles_2025-08-19_00-19_m8x2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_empty_titles_2025-08-19_00-19_m8x2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere BaseAWSObject Type Hint Mismatch",
      "target": "troposphere.BaseAWSObject.__init__",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `title` parameter in `BaseAWSObject.__init__` has type hint `Optional[str]` but lacks a default value, making it a required positional argument despite the type hint suggesting it's optional.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_baseawsobject_2025-08-19_02-19_9wfw.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_baseawsobject_2025-08-19_02-19_9wfw.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere BaseAWSObject accepts empty string as title",
      "target": "troposphere.BaseAWSObject.validate_title",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The title validation accepts empty strings despite requiring alphanumeric characters, allowing creation of CloudFormation resources with invalid names.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_empty_title_2025-08-18_23-41_el5h.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_empty_title_2025-08-18_23-41_el5h.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere BaseAWSObject ignores validation=False for title",
      "target": "troposphere.BaseAWSObject.__init__",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `validation=False` parameter is ignored for title validation, causing title validation to always run even when explicitly disabled.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validation_flag_2025-08-18_23-41_rcxi.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validation_flag_2025-08-18_23-41_rcxi.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere BaseAWSObject._from_dict Poor Error Message for Empty Property Names",
      "target": "troposphere.BaseAWSObject._from_dict",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "When `from_dict` is called with an empty string as a property name, the error message contains incorrect formatting with a double space, making it unclear and unprofessional.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_from_dict_2025-08-19_00-25_j7e4.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_from_dict_2025-08-19_00-25_j7e4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Empty Property Name Causes Unhelpful Error",
      "target": "troposphere.AWSProperty",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "When an empty string is used as a property name in troposphere AWSProperty classes, it produces an AttributeError with an empty attribute name in the error message, making debugging difficult.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_empty_property_name_2025-08-19_01-38_om6e.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_empty_property_name_2025-08-19_01-38_om6e.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Empty String Bypasses Title Validation",
      "target": "troposphere.BaseAWSObject.validate_title",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The title validation method accepts empty strings despite using a regex pattern `^[a-zA-Z0-9]+$` that should require at least one alphanumeric character.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_docdb_2025-08-19_00-42_bug2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_docdb_2025-08-19_00-42_bug2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Empty String Title Validation",
      "target": "troposphere.BaseAWSObject.__init__",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Empty string titles are incorrectly accepted as valid for AWS objects, violating the alphanumeric validation requirement.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_empty_title_2025-08-18_23-47_geef.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_empty_title_2025-08-18_23-47_geef.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Empty String Title Validation Bypass",
      "target": "troposphere.BaseAWSObject.validate_title",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The title validation in troposphere's BaseAWSObject class fails to validate empty strings, allowing resources to be created with empty titles which should be invalid according to the alphanumeric validation rules.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere___init___2025-08-19_02-05_syvz.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere___init___2025-08-19_02-05_syvz.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Empty Title Validation Bypass",
      "target": "troposphere.BaseAWSObject.validate_title()",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-01-19",
      "summary": "Empty string titles bypass validation in troposphere AWS objects due to a logic error that skips validation for falsy title values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_empty_title_2025-01-19_18-45_k3n2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_empty_title_2025-01-19_18-45_k3n2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Empty Title Validation Bypass",
      "target": "troposphere.codecommit.Repository",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The Repository class accepts empty string as a valid title, bypassing the alphanumeric validation that should reject non-alphanumeric or empty titles.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_codecommit_2025-08-19_00-29_fa5d.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_codecommit_2025-08-19_00-29_fa5d.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Integer Validator Accepts Float Values",
      "target": "troposphere.validators.integer()",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-01-19",
      "summary": "The `integer()` validator function incorrectly accepts float values without raising an error, violating the expected type contract for integer properties.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_integer_validator_2025-01-19_18-45_m7x9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_integer_validator_2025-01-19_18-45_m7x9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Integer Validator Accepts Non-Integer Values",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer` validator function accepts float values when it should only accept integers, violating the contract implied by its name and causing float values to be stored where integers are expected.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_integer_validator_2025-08-19_09-00_k3m9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_integer_validator_2025-08-19_09-00_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Integer Validator OverflowError",
      "target": "troposphere.validators.integer",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The integer validator raises an unhandled OverflowError when given float infinity values instead of the expected ValueError.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_integer_validator_2025-08-19_01-43_riut.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_integer_validator_2025-08-19_01-43_riut.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Missing Required Property Validation",
      "target": "troposphere.route53recoveryreadiness.ResourceSet.validate",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `validate()` method does not check for missing required properties as defined in the `props` dictionary, allowing invalid CloudFormation resources to pass validation.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_missing_validation_2025-08-19_02-24_9nrb.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_missing_validation_2025-08-19_02-24_9nrb.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Optional Fields Reject None Values",
      "target": "troposphere.BaseAWSObject",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Optional fields in troposphere AWS resources reject `None` values with a TypeError, even though they are marked as optional in the props definition. This forces users to omit optional fields entirely rather than explicitly setting them to None.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_optional_fields_2025-08-19_02-36_m2n7.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_optional_fields_2025-08-19_02-36_m2n7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Optional Properties Reject None Values",
      "target": "troposphere.BaseAWSObject",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Optional properties in troposphere AWS objects incorrectly reject None values during initialization, causing TypeError exceptions when None is explicitly passed for optional properties.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_optional_none_2025-08-18_23-42_eol3.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_optional_none_2025-08-18_23-42_eol3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Parameter Validation Bypassed for Falsy Values",
      "target": "troposphere.Parameter",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The Parameter class in troposphere incorrectly accepts falsy values (0, False) as Default values for String type parameters, and accepts empty string as a valid title, both violating documented validation rules.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_parameter_validation_2025-08-19_04-45_k3n2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_parameter_validation_2025-08-19_04-45_k3n2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Title Validation Inconsistency",
      "target": "troposphere.BaseAWSObject.validate_title",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The title validation error message states \"not alphanumeric\" but rejects Unicode alphanumeric characters that Python's `isalnum()` accepts, creating a misleading error message.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_title_validation_2025-08-19_01-43_0agv.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_title_validation_2025-08-19_01-43_0agv.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Title Validation Inconsistent with Python's isalnum()",
      "target": "troposphere.BaseAWSObject.validate_title",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The title validation regex in troposphere only accepts ASCII alphanumeric characters, but Python's `isalnum()` returns True for non-ASCII alphanumeric characters like '\u00aa', causing an inconsistency.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_title_validation_2025-08-19_01-53_ubzk.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_title_validation_2025-08-19_01-53_ubzk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Title Validation Rejects Valid CloudFormation Names",
      "target": "troposphere.systemsmanagersap.Application",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Title validation rejects underscores and other valid CloudFormation resource name characters, preventing common naming patterns used in AWS CloudFormation templates.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_title_validation_2025-08-19_02-38_z2kz.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_title_validation_2025-08-19_02-38_z2kz.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Title Validation Rejects Valid Unicode Alphanumeric Characters",
      "target": "troposphere.BaseAWSObject.validate_title",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The title validation in troposphere uses an ASCII-only regex that rejects valid Unicode alphanumeric characters, causing an inconsistency with Python's definition of alphanumeric and limiting internationalization support.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_title_validation_2025-08-19_02-17_qxlm.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_title_validation_2025-08-19_02-17_qxlm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere Title Validation Unicode Inconsistency",
      "target": "troposphere.BaseAWSObject.validate_title",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Title validation rejects Unicode alphanumeric characters that Python's `isalnum()` accepts, causing inconsistent behavior between the validation regex and Python's string methods.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_title_validation_2025-08-18_23-43_pdrf.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_title_validation_2025-08-18_23-43_pdrf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere _from_dict Method Fails Without Title",
      "target": "troposphere.BaseAWSObject._from_dict",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `_from_dict` class method fails when creating objects without providing a title, breaking round-trip serialization for objects that don't require titles.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_from_dict_2025-08-19_01-53_5se0.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_from_dict_2025-08-19_01-53_5se0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere from_dict/to_dict Round-Trip Failure",
      "target": "troposphere.stepfunctions.Activity.from_dict",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `from_dict()` method cannot reconstruct objects from the output of `to_dict()`, breaking the expected round-trip property between these complementary methods.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_stepfunctions_from_dict_2025-08-19_02-37_eg5h.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_stepfunctions_from_dict_2025-08-19_02-37_eg5h.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.BaseAWSObject None Title Causes TypeError in Template Serialization",
      "target": "troposphere.BaseAWSObject",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "BaseAWSObject allows None or empty string titles which bypass validation but cause TypeError when multiple resources are added to a Template and it attempts to sort them during serialization.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_baseawsobject_2025-08-19_02-15_dnyn.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_baseawsobject_2025-08-19_02-15_dnyn.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.BaseAWSObject Title Validation Bypass",
      "target": "troposphere.BaseAWSObject",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "Empty strings and None values bypass title validation in BaseAWSObject, allowing invalid resource names that should be rejected according to the alphanumeric validation rule.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_BaseAWSObject_2025-08-19_02-15_en4n.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_BaseAWSObject_2025-08-19_02-15_en4n.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.Parameter Accepts Invalid CloudFormation Types",
      "target": "troposphere.Parameter",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The Parameter class in troposphere accepts invalid Type values without validation, allowing creation of CloudFormation templates that AWS will reject.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_parameter_type_2025-08-19_02-29_jsrp.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_parameter_type_2025-08-19_02-29_jsrp.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.Parameter Accepts Invalid Empty String for Number Type",
      "target": "troposphere.Parameter",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Parameters with Type=\"Number\" incorrectly accept empty strings as default values, which are not valid numbers and will cause CloudFormation template validation to fail.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_parameter_2025-08-19_02-02_w5d1.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_parameter_2025-08-19_02-02_w5d1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.Tags Addition Operator Mutates Right Operand",
      "target": "troposphere.Tags",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The Tags `__add__` operator mutates its right operand instead of creating a new object, violating the expected immutability of operands in addition operations.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_tags_2025-08-19_02-02_0m3h.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_tags_2025-08-19_02-02_0m3h.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.Tags Concatenation Mutates Right Operand",
      "target": "troposphere.Tags.__add__",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `Tags.__add__` method mutates its right operand instead of creating a new Tags object, violating the expected immutability of the `+` operator and causing unexpected side effects.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_tags_concatenation_2025-08-19_00-36_fc78.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_tags_concatenation_2025-08-19_00-36_fc78.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.Tags Concatenation Mutates Right Operand",
      "target": "troposphere.Tags.__add__",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `Tags.__add__` method mutates the right operand in place instead of creating a new Tags object, violating the expected immutability contract of the `+` operator.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_tags_concatenation_2025-08-19_02-24_dz5z.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_tags_concatenation_2025-08-19_02-24_dz5z.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.acmpca Misleading Error Message for Title Validation",
      "target": "troposphere.acmpca.CertificateAuthority",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The title validation error message \"Name 'X' not alphanumeric\" is misleading because it rejects Unicode alphanumeric characters that Python's `isalnum()` accepts.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_acmpca_2025-08-18_23-43_94fy.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_acmpca_2025-08-18_23-43_94fy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.analytics Empty Title Validation Bypass",
      "target": "troposphere.analytics.Application",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Empty strings and None values bypass title validation in troposphere AWSObject classes, violating the documented requirement that titles must be alphanumeric.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_analytics_2025-08-18_23-40_oea8.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_analytics_2025-08-18_23-40_oea8.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.appflow Property Name Conflicts with Internal Attributes",
      "target": "troposphere.appflow",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The troposphere library allows users to define CloudFormation properties with any name in the `props` dictionary, but certain property names conflict with internal BaseAWSObject attributes, causing silent data corruption and validation failures.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_appflow_2025-08-18_02-31_k7m9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_appflow_2025-08-18_02-31_k7m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.appintegrations None Handling for Optional Fields",
      "target": "troposphere.appintegrations",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The troposphere library incorrectly rejects `None` values for optional fields (marked with `False` in props), causing TypeError when users explicitly pass None for optional parameters.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_appintegrations_2025-08-18_23-42_gyro.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_appintegrations_2025-08-18_23-42_gyro.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.applicationinsights Title Validation Error Message Bug",
      "target": "troposphere.applicationinsights.Application",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The title validation in troposphere incorrectly reports Unicode alphanumeric characters as \"not alphanumeric\" despite them being valid according to Python's `isalnum()` method.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_applicationinsights_2025-08-18_23-47_x9k2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_applicationinsights_2025-08-18_23-47_x9k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.applicationsignals Optional Properties Reject None Values",
      "target": "troposphere.applicationsignals",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Optional properties in troposphere AWS resource classes incorrectly reject `None` values, causing TypeErrors when users explicitly pass `None` for optional properties.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_applicationsignals_2025-08-18_23-43_9su0.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_applicationsignals_2025-08-18_23-43_9su0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.arczonalshift None Values for Optional Properties Rejected",
      "target": "troposphere.arczonalshift",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "Optional properties in troposphere AWS resource classes reject None values, even though they are marked as optional. This violates the expected API contract where optional properties should accept None to indicate absence.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_arczonalshift_2025-08-18_00-00_x9k2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_arczonalshift_2025-08-18_00-00_x9k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.ask Misleading Title Validation Error Message",
      "target": "troposphere.ask.Skill",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The title validation error message incorrectly states that Unicode alphanumeric characters are \"not alphanumeric\" when they fail validation, even though they are alphanumeric according to Python's `isalnum()` method.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_ask_2025-08-19_00-18_2b0g.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_ask_2025-08-19_00-18_2b0g.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.autoscalingplans Deferred Required Field Validation",
      "target": "troposphere.autoscalingplans",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Classes in troposphere.autoscalingplans allow instantiation without required fields, deferring validation until `to_dict()` is called, violating the fail-fast principle.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_autoscalingplans_2025-08-18_23-50_pm35.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_autoscalingplans_2025-08-18_23-50_pm35.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.awslambda Environment Variable Name Validation Accepts Invalid Characters",
      "target": "troposphere.validators.awslambda.validate_variables_name",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-01-18",
      "summary": "The environment variable name validation in troposphere.awslambda incorrectly accepts variable names containing invalid characters (colons, hyphens, dots, spaces, etc.) after a valid prefix, which would cause AWS deployment failures.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_awslambda_2025-01-18_02-23_x7n9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_awslambda_2025-01-18_02-23_x7n9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.b2bi None Values Not Handled for Optional Properties",
      "target": "troposphere.b2bi",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Troposphere raises TypeError when optional properties are set to None, violating Python conventions and breaking common programming patterns.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_b2bi_2025-08-19_00-18_77df.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_b2bi_2025-08-19_00-18_77df.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.backup validate_backup_selection Allows Invalid Configuration",
      "target": "troposphere.validators.backup.validate_backup_selection",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `validate_backup_selection` function incorrectly allows both `ListOfTags` and `Resources` to be specified when they are CloudFormation `If` objects, violating the \"exactly one\" constraint.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_backup_2025-08-19_00-00_x7k9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_backup_2025-08-19_00-00_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.backupgateway Empty Title Validation Bypass",
      "target": "troposphere.backupgateway.Hypervisor",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The Hypervisor class in troposphere.backupgateway accepts empty strings as titles, allowing creation of invalid CloudFormation templates that AWS will reject.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_backupgateway_2025-08-19_19-55_k3n7.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_backupgateway_2025-08-19_19-55_k3n7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.bcmdataexports Cannot Delete Properties After Setting",
      "target": "troposphere.bcmdataexports",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Properties stored in troposphere AWS objects cannot be deleted using `del` after being set, even though they can be accessed via attribute syntax.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_bcmdataexports_2025-08-19_00-22_77zs.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_bcmdataexports_2025-08-19_00-22_77zs.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.bcmdataexports Cannot Set Optional Properties to None",
      "target": "troposphere.bcmdataexports",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Optional properties in troposphere AWS objects cannot be set to None, raising a TypeError instead of allowing the property to be unset.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_bcmdataexports_2025-08-19_00-22_7kww.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_bcmdataexports_2025-08-19_00-22_7kww.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.billingconductor Missing Validation in from_dict()",
      "target": "troposphere.billingconductor.BillingGroup.from_dict()",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `from_dict()` method in troposphere AWS resource classes fails to validate required properties, allowing creation of invalid CloudFormation resources that only fail when `to_dict()` is called.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_billingconductor_2025-08-19_00-25_4zrr.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_billingconductor_2025-08-19_00-25_4zrr.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.cassandra None Handling for Optional Properties",
      "target": "troposphere.cassandra",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The troposphere library incorrectly rejects `None` values for optional properties that expect lists, despite these properties being marked as optional in the class definition.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_cassandra_2025-08-19_00-19_k3n9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_cassandra_2025-08-19_00-19_k3n9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.ce Hash/Equality Contract Violation",
      "target": "troposphere.ce",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "AWSProperty subclasses in troposphere.ce (ResourceTag, Subscriber) violate Python's hash/equality contract, causing identical objects to have different hashes when used in sets or as dictionary keys.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_ce_2025-08-19_03-45_a7b3.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_ce_2025-08-19_03-45_a7b3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.chatbot Optional Properties Reject None",
      "target": "troposphere.chatbot",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Optional properties in troposphere.chatbot classes incorrectly raise TypeError when explicitly set to None, despite being marked as optional in their property definitions.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_chatbot_2025-08-19_00-00_x3k9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_chatbot_2025-08-19_00-00_x3k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.cleanrooms None Handling for Optional Properties",
      "target": "troposphere.cleanrooms",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Optional properties in troposphere.cleanrooms classes cannot be explicitly set to None, causing a TypeError instead of treating None as an unset value.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_cleanrooms_2025-08-19_00-27_ko4m.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_cleanrooms_2025-08-19_00-27_ko4m.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.cleanroomsml Tags Round-Trip Serialization Failure",
      "target": "troposphere.cleanroomsml.TrainingDataset",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The Tags property in TrainingDataset cannot survive a to_dict/from_dict round-trip due to type mismatch during deserialization.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_cleanroomsml_2025-08-19_00-30_bn67.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_cleanroomsml_2025-08-19_00-30_bn67.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.cloudformation validate_int_to_str Unicode Digit Crash",
      "target": "troposphere.validators.cloudformation.validate_int_to_str",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `validate_int_to_str` function crashes with ValueError when given Unicode digit characters (like '\u00b2') that pass Python's `isdigit()` check but cannot be parsed by `int()`.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_cloudformation_2025-08-19_00-41_x3k9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_cloudformation_2025-08-19_00-41_x3k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.cloudfront Delayed Required Properties Validation",
      "target": "troposphere.cloudfront",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Required properties in CloudFront resource classes are not validated at object instantiation, only when converting to dict/JSON, violating the fail-fast principle and causing delayed runtime errors.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_cloudfront_2025-08-19_00-28_75wq.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_cloudfront_2025-08-19_00-28_75wq.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.cloudtrail Deferred Validation of Required Properties",
      "target": "troposphere.cloudtrail",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "All AWS resource classes in troposphere.cloudtrail (and likely the entire troposphere library) fail to validate required properties at object creation time, deferring validation until `to_dict()` is called. This violates the fail-fast principle and can lead to late discovery of configuration errors.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_cloudtrail_2025-08-19_00-28_96b6.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_cloudtrail_2025-08-19_00-28_96b6.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.cloudwatch Type Validators Accept Boolean Values",
      "target": "troposphere.cloudwatch",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer()` and `double()` type validators incorrectly accept boolean values due to Python's type hierarchy where `bool` is a subclass of `int`. This violates CloudFormation's type system where booleans and integers are distinct types.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_cloudwatch_2025-08-19_00-29_mysf.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_cloudwatch_2025-08-19_00-29_mysf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.codeartifact Empty String Validation Failure",
      "target": "troposphere.codeartifact",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Required string properties in troposphere.codeartifact accept empty strings, violating the validation contract and potentially causing CloudFormation deployment failures.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_codeartifact_2025-08-19_00-29_m1jx.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_codeartifact_2025-08-19_00-29_m1jx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.codebuild EnvironmentVariable validation missing required property checks",
      "target": "troposphere.codebuild.EnvironmentVariable",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `EnvironmentVariable.validate()` method fails to verify that required properties `Name` and `Value` are present, only checking the optional `Type` property if it exists.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_codebuild_2025-08-19_00-31_04y8.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_codebuild_2025-08-19_00-31_04y8.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.codecommit None Handling for Optional Properties",
      "target": "troposphere.codecommit",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The troposphere library raises TypeError when None is passed for optional properties in codecommit module classes, violating the expected behavior that optional properties should accept None values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_codecommit_2025-08-19_00-28_1qwy.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_codecommit_2025-08-19_00-28_1qwy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.codeconnections Title Validation Not Enforced",
      "target": "troposphere.codeconnections.Connection",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `Connection.to_dict()` method does not validate resource titles even when validation is enabled, allowing invalid CloudFormation resource names containing special characters to be generated.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_codeconnections_2025-08-19_00-29_q2rv.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_codeconnections_2025-08-19_00-29_q2rv.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.codedeploy DeploymentGroup Validation Failure",
      "target": "troposphere.codedeploy.DeploymentGroup",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "DeploymentGroup's validate() method fails to enforce mutually exclusive constraints due to a case mismatch between property names and validator expectations.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_codedeploy_2025-08-19_00-29_83q4.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_codedeploy_2025-08-19_00-29_83q4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.codeguruprofiler - None Values for Optional Fields Raise TypeError",
      "target": "troposphere.codeguruprofiler.ProfilingGroup",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Setting `None` to optional fields in troposphere classes raises a TypeError instead of omitting the field from the CloudFormation template output.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_codeguruprofiler_2025-08-19_00-29_x8j2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_codeguruprofiler_2025-08-19_00-29_x8j2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.codepipeline Unicode Title Validation Error",
      "target": "troposphere.codepipeline",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The title validation in troposphere incorrectly rejects Unicode alphanumeric characters while claiming they are \"not alphanumeric\", even though Python's standard `isalnum()` returns True for these characters.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_codepipeline_2025-08-19_00-32_hmj6.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_codepipeline_2025-08-19_00-32_hmj6.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.codestarconnections None Handling for Optional Properties",
      "target": "troposphere.codestarconnections",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Troposphere raises TypeError when None is explicitly passed for optional properties, violating Python conventions where None represents absence of value.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_codestarconnections_2025-08-19_00-29_n7x2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_codestarconnections_2025-08-19_00-29_n7x2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.codestarnotifications Empty List Validation",
      "target": "troposphere.codestarnotifications",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The troposphere.codestarnotifications module accepts empty lists for required properties EventTypeIds and Targets, which violates AWS CloudFormation requirements and will cause deployment failures.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_codestarnotifications_2025-08-19_00-34_tpwe.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_codestarnotifications_2025-08-19_00-34_tpwe.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.cognito Title Validation Bypass",
      "target": "troposphere.cognito",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "AWSObject classes in troposphere.cognito (and likely all troposphere modules) incorrectly accept empty string and None as titles, bypassing alphanumeric validation that should reject these values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_cognito_2025-08-19_00-34_s8yk.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_cognito_2025-08-19_00-34_s8yk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.comprehend Empty String Title Bypasses Validation",
      "target": "troposphere.comprehend.DocumentClassifier",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Empty strings bypass title validation in AWS CloudFormation objects, allowing creation of resources with invalid empty titles when alphanumeric titles are required.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_comprehend_2025-08-19_00-33_mrwf.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_comprehend_2025-08-19_00-33_mrwf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.connectcampaigns Invalid JSON Generation with NaN/Infinity",
      "target": "troposphere.connectcampaigns",
      "severity": "High",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The troposphere library generates invalid JSON when NaN or Infinity values are used in numeric properties, violating the JSON specification and causing potential CloudFormation deployment failures.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_connectcampaigns_2025-08-19_00-36_x5py.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_connectcampaigns_2025-08-19_00-36_x5py.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.connectcampaignsv2 Empty Title Validation Bypass",
      "target": "troposphere.connectcampaignsv2.Campaign",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Empty string titles bypass alphanumeric validation in AWS resource objects, allowing creation of resources with invalid names that violate CloudFormation requirements.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_connectcampaignsv2_2025-08-19_00-41_k332.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_connectcampaignsv2_2025-08-19_00-41_k332.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.constants Missing M5A and M5AD Instance Types",
      "target": "troposphere.constants",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The troposphere.constants module is missing four EC2 instance type constants that are supported by AWS: M5A_8XLARGE, M5A_16XLARGE, M5AD_8XLARGE, and M5AD_16XLARGE.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_constants_2025-08-19_12-45_x7k9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_constants_2025-08-19_12-45_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.controltower Title Validation Bypass",
      "target": "troposphere.controltower",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The title validation in troposphere AWS resource classes fails to validate empty strings and None values, allowing invalid titles that violate the documented alphanumeric requirement.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_controltower_2025-08-19_12-00_x7y3.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_controltower_2025-08-19_12-00_x7y3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.datapipeline Type Validation Bypass",
      "target": "troposphere.datapipeline",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The troposphere library's type validation system may allow incorrect types (e.g., integers) to be assigned to string-only properties, violating the type contract defined in the props dictionaries.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_datapipeline_2025-08-19_00-45_k3n9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_datapipeline_2025-08-19_00-45_k3n9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.datasync Title Validation Inconsistency",
      "target": "troposphere.datasync",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The title validation in troposphere incorrectly rejects Unicode alphanumeric characters (e.g., Greek letters, mathematical symbols) despite the error message claiming they are \"not alphanumeric\". These characters are considered alphanumeric by Python's standard `str.isalnum()` method.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_datasync_2025-08-19_00-35_vs6e.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_datasync_2025-08-19_00-35_vs6e.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.datazone.boolean() Incorrectly Accepts Float Values",
      "target": "troposphere.datazone.boolean",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `boolean()` function incorrectly accepts float values `0.0` and `1.0`, returning `False` and `True` respectively, when it should raise `ValueError` for all float inputs.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_datazone_boolean_2025-08-19_06-04_9581.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_datazone_boolean_2025-08-19_06-04_9581.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.dax Title Validation Bypass",
      "target": "troposphere.dax.Cluster",
      "severity": "High",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The title validation in troposphere's BaseAWSObject accepts empty strings and None values, which violates CloudFormation's requirement for alphanumeric resource identifiers and causes JSON serialization errors.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_dax_2025-08-19_15-42_k3n9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_dax_2025-08-19_15-42_k3n9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.deadline integer validator accepts non-integer floats",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer()` validator function in troposphere accepts float values with decimal parts (e.g., 1.5, 2.7) when it should reject them, violating the contract of integer validation.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_deadline_2025-08-19_15-45_k9x2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_deadline_2025-08-19_15-45_k9x2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.devopsguru Misleading Alphanumeric Validation Error",
      "target": "troposphere.devopsguru",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The title validation error message claims a title is \"not alphanumeric\" when it rejects Unicode alphanumeric characters that Python's `isalnum()` considers valid, creating a misleading contract violation.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_devopsguru_2025-08-19_00-40_yxs9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_devopsguru_2025-08-19_00-40_yxs9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.docdbelastic Integer Validator Accepts Non-Integer Floats",
      "target": "troposphere.docdbelastic.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer()` validation function incorrectly accepts non-integer float values like 0.5, 1.5, etc., when it should only accept values that represent whole numbers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_docdbelastic_2025-08-19_06-05_5bq1.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_docdbelastic_2025-08-19_06-05_5bq1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.dynamodb Integer Validator Accepts Non-Integer Floats",
      "target": "troposphere.dynamodb.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer()` function incorrectly accepts floating-point numbers with fractional parts (e.g., 0.5, 1.5) without raising a ValueError, despite being an integer validator.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_dynamodb_2025-08-19_06-04_4j8b.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_dynamodb_2025-08-19_06-04_4j8b.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.ecr Boolean Case Sensitivity Inconsistency",
      "target": "troposphere.ecr.boolean",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `boolean` function accepts mixed-case boolean strings ('true', 'True', 'false', 'False') but rejects all-uppercase variants ('TRUE', 'FALSE'), creating an inconsistent case-handling behavior.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_ecr_boolean_2025-08-19_06-06_ukdm.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_ecr_boolean_2025-08-19_06-06_ukdm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.ecs ProxyConfiguration Constructor/Validation Inconsistency",
      "target": "troposphere.ecs.ProxyConfiguration",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "ProxyConfiguration allows object construction without required fields, but fails when calling to_dict(), violating the expected contract that constructible objects should be serializable.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_ecs_2025-08-19_06-04_06mo.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_ecs_2025-08-19_06-04_06mo.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.efs Round-Trip Property Violation",
      "target": "troposphere.efs",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `to_dict()` and `from_dict()` methods in troposphere.efs AWSObject classes violate the round-trip property - objects cannot be reconstructed from their dictionary representation.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_efs_2025-08-19_06-04_i6au.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_efs_2025-08-19_06-04_i6au.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.eks Type Validation Issues",
      "target": "troposphere.eks",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The troposphere.eks module has multiple type validation issues: validator functions crash with TypeError on non-string inputs, and the Taint class allows invalid non-string types for its fields.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_eks_2025-08-19_06-03_v2w2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_eks_2025-08-19_06-03_v2w2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.elasticbeanstalk Misleading \"not alphanumeric\" Error Message",
      "target": "troposphere.elasticbeanstalk.Application",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The title validation error message claims a name is \"not alphanumeric\" when rejecting Unicode alphanumeric characters like '\u00aa', '\u00b2', '\u00b5', but these characters ARE alphanumeric according to Python's `isalnum()` method.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_elasticbeanstalk_2025-08-19_01-38_qd1v.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_elasticbeanstalk_2025-08-19_01-38_qd1v.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.elasticloadbalancing.validate_int_to_str Raises Wrong Exception Type",
      "target": "troposphere.elasticloadbalancing.validate_int_to_str",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `validate_int_to_str` function raises ValueError instead of TypeError when given a string that cannot be converted to an integer, violating its implied contract.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_elasticloadbalancing_validate_int_to_str_2025-08-19_06-06_ma8e.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_elasticloadbalancing_validate_int_to_str_2025-08-19_06-06_ma8e.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.elasticloadbalancingv2 Port Validator Accepts Invalid Strings with Whitespace",
      "target": "troposphere.elasticloadbalancingv2.tg_healthcheck_port",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The port validation functions accept strings with trailing/leading whitespace (e.g., '80\\r', '443\\n', '8080\\t') which are invalid port specifications and would create malformed CloudFormation templates.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_elasticloadbalancingv2_2025-08-19_06-07_a0ni.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_elasticloadbalancingv2_2025-08-19_06-07_a0ni.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.emrcontainers Inconsistent Empty String Handling",
      "target": "troposphere.emrcontainers",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `from_dict` class method inconsistently converts empty string titles to `None`, while direct instantiation preserves empty strings, violating the expected consistency between these construction methods.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_emrcontainers_2025-08-19_06-06_81yu.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_emrcontainers_2025-08-19_06-06_81yu.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.emrserverless Integer Validator Accepts Non-Integer Floats",
      "target": "troposphere.emrserverless.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer()` validator function incorrectly accepts non-integer float values like 1.5, 2.3, etc., when it should only accept values that are actual integers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_emrserverless_2025-08-19_06-05_mf6p.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_emrserverless_2025-08-19_06-05_mf6p.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.entityresolution.boolean Accepts Float Values Inconsistently",
      "target": "troposphere.entityresolution.boolean",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `boolean()` function unexpectedly accepts float values 0.0 and 1.0, converting them to False and True respectively, while rejecting other float values like 2.0 or 0.5.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_entityresolution_boolean_2025-08-19_06-06_2b5g.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_entityresolution_boolean_2025-08-19_06-06_2b5g.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.events Title Validation Bypass",
      "target": "troposphere.events",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The title validation in troposphere's AWSObject classes can be bypassed by using None or empty string values, creating objects with invalid titles that would fail explicit validation.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_events_2025-08-19_06-06_11dy.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_events_2025-08-19_06-06_11dy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.eventschemas Inconsistent Case Handling in boolean Function",
      "target": "troposphere.eventschemas.boolean",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `boolean` function in troposphere.eventschemas handles case variations inconsistently - it accepts 'true' and 'True' but raises ValueError for 'TRUE', similarly for 'false'/'False' vs 'FALSE'.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_eventschemas_boolean_2025-08-19_06-02_4f6f.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_eventschemas_boolean_2025-08-19_06-02_4f6f.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.evidently Numeric String Kwargs Cause AttributeError",
      "target": "troposphere.evidently",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "All AWS resource classes in troposphere.evidently raise confusing AttributeError when passed kwargs with numeric string keys (e.g., '0', '123', '-1').",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_evidently_2025-08-19_06-08_09le.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_evidently_2025-08-19_06-08_09le.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.finspace Title Validation Bypass",
      "target": "troposphere.finspace.Environment",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Empty strings and None values bypass title validation in troposphere AWS resources, allowing invalid CloudFormation resource names to be created without raising the expected ValueError.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_finspace_2025-08-19_00-44_k3m9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_finspace_2025-08-19_00-44_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.firehose Naming Convention Violation",
      "target": "troposphere.firehose.IcebergDestinationConfiguration",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `IcebergDestinationConfiguration` class has a property named `s3BackupMode` with lowercase 's', violating AWS CloudFormation naming conventions where all other similar classes use `S3BackupMode` with uppercase 'S'.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_firehose_2025-08-19_01-43_nics.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_firehose_2025-08-19_01-43_nics.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.fis None Handling for Optional Properties",
      "target": "troposphere.fis",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Optional properties in troposphere.fis AWS resource classes fail to accept None values, causing TypeError exceptions and breaking round-trip dict conversion.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_fis_2025-08-19_01-43_78xf.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_fis_2025-08-19_01-43_78xf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.forecast Mutation of Shared List References",
      "target": "troposphere.forecast",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The Schema class in troposphere.forecast stores a reference to the provided Attributes list instead of creating a copy, allowing external mutations to affect the Schema object after creation.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_forecast_2025-08-19_18-45_xb7q.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_forecast_2025-08-19_18-45_xb7q.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.frauddetector Empty Title Validation Bypass",
      "target": "troposphere.frauddetector",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-01-19",
      "summary": "Empty string and None titles bypass validation in all AWSObject classes, allowing creation of invalid CloudFormation resources that cause template corruption and duplicate key errors.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_frauddetector_2025-01-19_13-27_x7k2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_frauddetector_2025-01-19_13-27_x7k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.globalaccelerator None Type Validation Issue with Tags",
      "target": "troposphere.globalaccelerator.Accelerator",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The Accelerator class incorrectly rejects `Tags=None` but accepts omitting the Tags parameter entirely, breaking the common Python pattern `Tags=Tags(tags) if tags else None` when tags is an empty dictionary.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_globalaccelerator_2025-08-19_01-44_fvt8.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_globalaccelerator_2025-08-19_01-44_fvt8.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.glue String Formatting Error in Validators",
      "target": "troposphere.validators.glue",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "All five validators in troposphere.validators.glue crash with TypeError when given invalid input due to incorrect string formatting syntax using `%` instead of `%s`.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_glue_2025-08-19_01-40_19tt.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_glue_2025-08-19_01-40_19tt.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.greengrassv2 Missing Documentation Link",
      "target": "troposphere.greengrassv2.IoTJobRateIncreaseCriteria",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-01-19",
      "summary": "The `IoTJobRateIncreaseCriteria` class is missing its AWS CloudFormation documentation link, breaking consistency with all other AWSProperty classes in the module.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_greengrassv2_2025-01-19_14-30_d3f8.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_greengrassv2_2025-01-19_14-30_d3f8.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.groundstation Properties Not Included in to_dict()",
      "target": "troposphere.groundstation",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "When properties are directly assigned to an AWSProperty object after initialization, the `to_dict()` method returns an empty dictionary instead of the assigned properties due to a broken reference between `self.properties` and `self.resource`.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_groundstation_2025-08-19_01-43_qjsx.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_groundstation_2025-08-19_01-43_qjsx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.healthimaging Empty/None Title Validation Bypass",
      "target": "troposphere.healthimaging.Datastore",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `Datastore` class accepts empty string and None as titles, bypassing validation and producing invalid CloudFormation references.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_healthimaging_2025-08-19_01-42_aqf2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_healthimaging_2025-08-19_01-42_aqf2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.imagebuilder Integer Validator Crashes on Float Infinity",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The integer validator in troposphere crashes with an unhandled OverflowError when passed float infinity or negative infinity values, causing application failure instead of proper validation error.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_imagebuilder_2025-08-19_01-48_gpu9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_imagebuilder_2025-08-19_01-48_gpu9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.imagebuilder validation=False Parameter Doesn't Disable Validation",
      "target": "troposphere.imagebuilder.Component",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `validation=False` parameter in troposphere resource constructors doesn't actually disable validation during object creation, only during serialization, violating the expected behavior that validation should be optional.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_imagebuilder_2025-08-19_01-49_0lpm.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_imagebuilder_2025-08-19_01-49_0lpm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.inspector Title Validation Bypass",
      "target": "troposphere.inspector",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "Empty string and None titles bypass validation in troposphere AWS resources, causing TypeErrors when generating CloudFormation templates.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_inspector_2025-08-19_01-48_f7xh.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_inspector_2025-08-19_01-48_f7xh.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.inspectorv2 Missing Range Validation",
      "target": "troposphere.inspectorv2.PortRangeFilter",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "Range filter classes in troposphere.inspectorv2 do not validate that begin/start/lower values are less than or equal to end/upper values, allowing semantically invalid ranges.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_inspectorv2_range_validation_2025-08-19_02-31_b8g3.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_inspectorv2_range_validation_2025-08-19_02-31_b8g3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.iot Empty Title Validation Bypass",
      "target": "troposphere.iot",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-01-19",
      "summary": "Resources in troposphere can be created with empty string or None titles, bypassing the alphanumeric validation that should reject them. The validation regex requires at least one alphanumeric character, but validation is skipped entirely for falsy titles.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_iot_2025-01-19_16-45_a3x7.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_iot_2025-01-19_16-45_a3x7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.iotanalytics Title Validation Inconsistency",
      "target": "troposphere.iotanalytics",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Troposphere's title validation rejects Unicode alphanumeric characters while claiming to validate \"alphanumeric\" names, creating an inconsistency between the error message and actual behavior.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_iotanalytics_2025-08-19_01-55_8t87.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_iotanalytics_2025-08-19_01-55_8t87.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.iotevents Title Validation Bypass",
      "target": "troposphere.iotevents",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Title validation in troposphere resources can be bypassed by using falsy non-string values (0, False, None), allowing invalid types to be used as resource titles when only alphanumeric strings should be accepted.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_iotevents_2025-08-19_01-52_4awo.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_iotevents_2025-08-19_01-52_4awo.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.iotfleetwise Optional Properties Reject None Values",
      "target": "troposphere.iotfleetwise",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Optional properties in troposphere.iotfleetwise classes raise TypeError when explicitly set to None, despite being marked as optional. This creates inconsistent behavior between omitting a property and explicitly setting it to None.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_iotfleetwise_2025-08-19_01-51_i7ez.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_iotfleetwise_2025-08-19_01-51_i7ez.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.iotthingsgraph Title Validation Bypass for Falsy Values",
      "target": "troposphere.iotthingsgraph.FlowTemplate",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-01-19",
      "summary": "AWSObject instances in troposphere bypass title validation when the title is a falsy value (empty string, None, 0, False), allowing creation of invalid CloudFormation templates that would be rejected by AWS.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_iotthingsgraph_2025-01-19_20-43_x9k2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_iotthingsgraph_2025-01-19_20-43_x9k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.iottwinmaker Validators Return None",
      "target": "troposphere.iottwinmaker",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The validators `validate_listvalue` and `validate_nestedtypel` in troposphere.iottwinmaker don't return the validated values, causing DataValue.ListValue and DataType.NestedType properties to always be None.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_iottwinmaker_2025-08-19_11-45_x3k9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_iottwinmaker_2025-08-19_11-45_x3k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.kafkaconnect Integer Validator Accepts Bytes Causing JSON Serialization Failure",
      "target": "troposphere.kafkaconnect",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The integer validator in troposphere accepts bytes objects, which then causes JSON serialization to fail when generating CloudFormation templates, resulting in a TypeError.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_kafkaconnect_2025-08-19_16-45_k3n2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_kafkaconnect_2025-08-19_16-45_k3n2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.kendra Type Preservation in Integer Validator",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The integer validator accepts string representations of integers but doesn't convert them to actual integers, causing type inconsistency in CloudFormation templates and preserving problematic formatting like leading zeros.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_kendra_2025-08-19_14-31_c3d4.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_kendra_2025-08-19_14-31_c3d4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.kendra Unicode Digit Acceptance in Integer Validator",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The integer validator accepts Unicode digit strings (e.g., Thai \"\u0e57\", Arabic \"\u0667\") which produce CloudFormation templates with Unicode characters that AWS services cannot parse correctly.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_kendra_2025-08-19_14-30_a1b2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_kendra_2025-08-19_14-30_a1b2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.kinesis Incorrect Error Message in kinesis_stream_mode Validator",
      "target": "troposphere.validators.kinesis.kinesis_stream_mode",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `kinesis_stream_mode` validator function raises a ValueError with an incorrect error message that references \"ContentType\" instead of \"StreamMode\".",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_kinesis_2025-08-19_01-54_nskl.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_kinesis_2025-08-19_01-54_nskl.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.kms Empty Title Validation Bypass",
      "target": "troposphere.kms",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Empty string titles bypass validation in troposphere AWS resource classes, allowing creation of resources without logical IDs, which violates CloudFormation requirements.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_kms_2025-08-19_01-58_nvjn.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_kms_2025-08-19_01-58_nvjn.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.lakeformation Round-Trip Serialization Failure",
      "target": "troposphere.lakeformation.DataCellsFilter.from_dict",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `from_dict` method fails to properly deserialize the output of `to_dict`, breaking round-trip serialization for AWS::LakeFormation resources.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_lakeformation_from_dict_2025-08-19_02-01_tqbs.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_lakeformation_from_dict_2025-08-19_02-01_tqbs.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.launchwizard Empty Title Validation Bypass",
      "target": "troposphere.launchwizard.Deployment",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "Empty string titles bypass validation during object initialization but fail when `validate_title()` is called directly, creating inconsistent validation behavior.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_launchwizard_2025-08-19_02-04_afgo.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_launchwizard_2025-08-19_02-04_afgo.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.launchwizard Unicode Title Validation Inconsistency",
      "target": "troposphere.launchwizard.Deployment",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `validate_title()` method rejects Unicode alphanumeric characters with error message \"not alphanumeric\", even though Python's `isalnum()` returns `True` for these characters, creating a misleading API contract.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_launchwizard_2025-08-19_02-03_q6qy.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_launchwizard_2025-08-19_02-03_q6qy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.location Validation Method Inconsistency",
      "target": "troposphere.location.APIKey",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `validate()` method doesn't check for required fields, while `to_dict(validation=True)` does. This creates an inconsistency where objects that pass `validate()` can fail when converted to dict with validation enabled.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_location_validation_2025-08-19_02-00_l8gh.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_location_validation_2025-08-19_02-00_l8gh.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.lookoutequipment Misleading Error Message for Title Validation",
      "target": "troposphere.lookoutequipment",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The title validation error message incorrectly states \"not alphanumeric\" for Unicode characters that Python considers alphanumeric, creating a misleading contract violation.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_lookoutequipment_2025-08-19_02-03_wtf7.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_lookoutequipment_2025-08-19_02-03_wtf7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.m2 ApplicationVersion Accepts Invalid Negative Values",
      "target": "troposphere.m2.Deployment",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `ApplicationVersion` property in `troposphere.m2.Deployment` accepts negative integers, violating AWS CloudFormation's requirement that application versions must be >= 1.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_m2_2025-08-19_02-05_2p93.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_m2_2025-08-19_02-05_2p93.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.m2 DesiredCapacity Accepts Invalid Range",
      "target": "troposphere.m2.HighAvailabilityConfig",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `DesiredCapacity` property in `troposphere.m2.HighAvailabilityConfig` accepts any integer value, violating AWS CloudFormation's requirement that it must be between 1 and 100.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_m2_2025-08-19_02-05_po02.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_m2_2025-08-19_02-05_po02.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.managedblockchain Round-Trip Serialization Failure",
      "target": "troposphere.managedblockchain",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "AWSObject subclasses in troposphere violate the round-trip property: `from_dict(to_dict())` fails with AttributeError. The `to_dict()` method wraps properties in a 'Properties' key, but `from_dict()` expects unwrapped properties.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_managedblockchain_2025-08-19_02-04_fjnx.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_managedblockchain_2025-08-19_02-04_fjnx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.mediaconvert Title Validation Bypass",
      "target": "troposphere.mediaconvert",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Empty strings and None values bypass title validation in troposphere AWS resources, violating the documented alphanumeric-only requirement and potentially causing issues in CloudFormation templates.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_mediaconvert_2025-08-19_02-02_h3k9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_mediaconvert_2025-08-19_02-02_h3k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.mediapackage Integer Validator Accepts Floats",
      "target": "troposphere.validators.integer",
      "severity": "High",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer` validator function in troposphere accepts float values without converting them to integers, causing CloudFormation templates to contain float values for properties that AWS CloudFormation strictly requires to be integers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_mediapackage_2025-08-19_02-04_fyab.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_mediapackage_2025-08-19_02-04_fyab.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.mediastore Stderr Pollution on Validation Error",
      "target": "troposphere.mediastore.MetricPolicy",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Troposphere writes error messages to stderr before raising validation exceptions, causing stderr pollution even when exceptions are properly handled.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_mediastore_2025-08-19_02-06_njoj.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_mediastore_2025-08-19_02-06_njoj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.neptune Hash Inconsistency for Equal Objects",
      "target": "troposphere.neptune",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "Equal objects in troposphere can have different hash values when properties are set in different orders, violating Python's requirement that equal objects must have equal hashes.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_neptune_2025-08-19_02-21_wnk0.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_neptune_2025-08-19_02-21_wnk0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.networkmanager None Handling for Optional Properties",
      "target": "troposphere.networkmanager",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-01-15",
      "summary": "Optional properties in troposphere classes reject None values with a TypeError, even though they are marked as optional. This prevents programmatic setting of optional properties to None.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_networkmanager_2025-01-15_00-00_x7k9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_networkmanager_2025-01-15_00-00_x7k9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.nimblestudio Title Validation Unicode Mismatch",
      "target": "troposphere.nimblestudio.StudioComponent",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Title validation in troposphere uses an ASCII-only regex pattern that rejects valid Unicode alphanumeric characters that Python's `isalnum()` accepts, causing an inconsistency in validation logic.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_nimblestudio_2025-08-19_02-09_t4eh.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_nimblestudio_2025-08-19_02-09_t4eh.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.opensearchserverless Misleading Title Validation Error Message",
      "target": "troposphere.opensearchserverless",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The error message for title validation incorrectly states \"not alphanumeric\" when rejecting Unicode alphanumeric characters that Python's `str.isalnum()` considers valid.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_opensearchserverless_2025-08-19_02-11_hvrk.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_opensearchserverless_2025-08-19_02-11_hvrk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.opensearchservice Engine Version Validation Regex Bug",
      "target": "troposphere.validators.opensearchservice.validate_search_service_engine_version",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The regex pattern in `validate_search_service_engine_version` incorrectly accepts any character as a separator between major and minor version numbers, not just a literal dot, due to an unescaped dot in the regex pattern.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_opensearchservice_2025-08-19_10-15_xk3m.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_opensearchservice_2025-08-19_10-15_xk3m.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.opensearchservice Missing Input Validation for AWS Resource Properties",
      "target": "troposphere.opensearchservice.WindowStartTime",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Multiple AWS property classes in the opensearchservice module accept invalid values that violate AWS CloudFormation constraints, including negative counts, invalid time ranges, and unreasonable availability zone counts.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_opensearchservice_2025-08-19_10-16_yz7n.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_opensearchservice_2025-08-19_10-16_yz7n.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.openstack.neutron.SessionPersistence Incorrect Validation Logic",
      "target": "troposphere.openstack.neutron.SessionPersistence.validate()",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The SessionPersistence.validate() method incorrectly requires `cookie_name` for all session types, not just for `APP_COOKIE` type as intended.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_openstack_neutron_2025-08-19_02-11_8wxg.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_openstack_neutron_2025-08-19_02-11_8wxg.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.openstack.nova.Server Incorrect Key Access in validate()",
      "target": "troposphere.openstack.nova.Server.validate()",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The Server.validate() method incorrectly accesses `self.resource[\"flavor_update_policy\"]` when validating the `image_update_policy` attribute, causing a KeyError.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_openstack_nova_2025-08-19_02-11_0gml.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_openstack_nova_2025-08-19_02-11_0gml.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.opsworks Invalid Iops Validation Logic",
      "target": "troposphere.validators.opsworks.validate_volume_configuration",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `validate_volume_configuration` function incorrectly rejects Iops when VolumeType is not specified (None), treating it the same as non-io1 volume types.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_opsworks_validate_volume_configuration_2025-08-19_02-10_x2jk.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_opsworks_validate_volume_configuration_2025-08-19_02-10_x2jk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.organizations Empty Title Validation Bypass",
      "target": "troposphere.organizations",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Empty strings bypass title validation in troposphere AWS resources, violating the documented alphanumeric requirement that titles must match `^[a-zA-Z0-9]+$`.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_organizations_2025-08-19_02-13_ebre.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_organizations_2025-08-19_02-13_ebre.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.pcaconnectorscep Empty/None Title Validation Bypass",
      "target": "troposphere.pcaconnectorscep",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Troposphere accepts empty strings and None as CloudFormation resource logical IDs (titles), bypassing validation that would correctly reject these invalid values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_pcaconnectorscep_2025-08-19_16-45_k3m9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_pcaconnectorscep_2025-08-19_16-45_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.personalize HpoResourceConfig Accepts Invalid Values",
      "target": "troposphere.personalize.HpoResourceConfig",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "HpoResourceConfig accepts non-numeric strings and invalid numeric values (zero/negative) for MaxNumberOfTrainingJobs and MaxParallelTrainingJobs fields, which should represent positive integers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_personalize_2025-08-19_02-16_1cav.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_personalize_2025-08-19_02-16_1cav.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.personalize Invalid Hyperparameter Ranges Accepted",
      "target": "troposphere.personalize",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The troposphere.personalize module fails to validate hyperparameter ranges, allowing MaxValue < MinValue in both IntegerHyperParameterRange and ContinuousHyperParameterRange classes, generating invalid CloudFormation templates.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_personalize_2025-08-19_02-16_l9f0.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_personalize_2025-08-19_02-16_l9f0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.pipes.integer OverflowError with Infinity",
      "target": "troposphere.pipes.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer` function raises `OverflowError` instead of `ValueError` when given infinity values, violating its documented error contract.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_pipes_integer_2025-08-19_02-15_fsmv.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_pipes_integer_2025-08-19_02-15_fsmv.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.policies Incorrect Validator Types in CodeDeployLambdaAliasUpdate",
      "target": "troposphere.policies.CodeDeployLambdaAliasUpdate",
      "severity": "High",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "CodeDeployLambdaAliasUpdate uses boolean validators for ApplicationName and DeploymentGroupName fields, but AWS CloudFormation expects these to be strings representing application and deployment group names.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_policies_2025-08-19_02-16_y2u7.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_policies_2025-08-19_02-16_y2u7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.proton API Inconsistency in to_dict() Method",
      "target": "troposphere.proton",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `to_dict()` method inconsistently includes or excludes the 'Properties' key based on whether properties are set, breaking API predictability and the round-trip property.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_proton_2025-08-19_02-18_hnil.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_proton_2025-08-19_02-18_hnil.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.qbusiness Round-Trip Serialization Failure",
      "target": "troposphere.qbusiness",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `from_dict()` method fails for all AWS Object classes in troposphere.qbusiness, violating the round-trip property that `from_dict(to_dict(obj))` should recreate the object.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_qbusiness_2025-08-19_02-17_k3h4.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_qbusiness_2025-08-19_02-17_k3h4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.qldb Round-Trip Property Violation",
      "target": "troposphere.qldb.Ledger",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `to_dict()` and `from_dict()` methods in troposphere.qldb AWS objects are not inverses of each other, violating the expected round-trip property.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_qldb_2025-08-19_02-17_gxby.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_qldb_2025-08-19_02-17_gxby.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.ram.boolean Accepts Float Values",
      "target": "troposphere.ram.boolean",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean` function unintentionally accepts float values 0.0 and 1.0, converting them to boolean values, when it should only accept bool, int (0/1), and specific string values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_ram_boolean_2025-08-19_02-16_ispy.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_ram_boolean_2025-08-19_02-16_ispy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.rbin.integer() OverflowError Not Caught",
      "target": "troposphere.rbin.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer()` function raises `OverflowError` for infinity values instead of the expected `ValueError`, causing inconsistent error handling.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_rbin_integer_2025-08-19_02-19_igkv.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_rbin_integer_2025-08-19_02-19_igkv.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.rds Floating-Point Precision Error in validate_v2_capacity",
      "target": "troposphere.rds.validate_v2_capacity",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `validate_v2_capacity` function incorrectly rejects values that are extremely close to valid half-steps due to floating-point precision issues, causing legitimate capacity values to be rejected.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_rds_2025-08-19_02-21_whqp.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_rds_2025-08-19_02-21_whqp.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.redshift validate() Method Doesn't Check Required Fields",
      "target": "troposphere.redshift",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `validate()` method in troposphere AWS resource classes doesn't check for required fields, while `to_dict()` does, leading to inconsistent validation behavior.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_redshift_2025-08-19_02-26_cqj2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_redshift_2025-08-19_02-26_cqj2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.redshiftserverless from_dict() Fails on Extra Fields",
      "target": "troposphere.redshiftserverless.ConfigParameter.from_dict",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `from_dict()` method raises AttributeError when the input dictionary contains extra fields, breaking compatibility with CloudFormation templates that commonly include metadata fields.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_redshiftserverless_2025-08-19_02-22_yr3d.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_redshiftserverless_2025-08-19_02-22_yr3d.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.refactorspaces boolean Function Issues",
      "target": "troposphere.refactorspaces.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean` function in troposphere.refactorspaces raises ValueError with no error message and inconsistently handles case variations of boolean strings.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_refactorspaces_boolean_2025-08-19_02-21_811x.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_refactorspaces_boolean_2025-08-19_02-21_811x.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.rekognition Missing Point Class ImportError",
      "target": "troposphere.rekognition.validate_PolygonRegionsOfInterest",
      "severity": "High",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `validate_PolygonRegionsOfInterest` function fails with ImportError because it tries to import a non-existent `Point` class from `troposphere.rekognition`.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_rekognition_importerror_2025-08-19_02-21_xz2d.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_rekognition_importerror_2025-08-19_02-21_xz2d.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.rekognition Typo in Error Message",
      "target": "troposphere.rekognition.validate_PolygonRegionsOfInterest",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The error message in `validate_PolygonRegionsOfInterest` contains a typo: \"ponts\" instead of \"points\".",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_rekognition_typo_ponts_2025-08-19_02-21_8u4y.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_rekognition_typo_ponts_2025-08-19_02-21_8u4y.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.rekognition boolean Function Doesn't Handle 'TRUE'",
      "target": "troposphere.rekognition.boolean",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `boolean` function raises ValueError for 'TRUE' (all caps) while accepting 'True' and 'true', creating inconsistent case handling.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_rekognition_boolean_true_2025-08-19_02-21_0ssl.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_rekognition_boolean_true_2025-08-19_02-21_0ssl.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.rekognition double Function Returns Wrong Type",
      "target": "troposphere.rekognition.double",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `double` function returns a string when given a string input, but should return a float to maintain type consistency.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_rekognition_double_type_2025-08-19_02-21_hzii.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_rekognition_double_type_2025-08-19_02-21_hzii.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.resiliencehub Round-trip Serialization Failure",
      "target": "troposphere.resiliencehub.ResiliencyPolicy",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "ResiliencyPolicy.from_dict() cannot deserialize the output of ResiliencyPolicy.to_dict() when the Policy contains FailurePolicy objects, violating the expected round-trip property for serialization/deserialization.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_resiliencehub_2025-08-19_02-24_d3c3.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_resiliencehub_2025-08-19_02-24_d3c3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.resourcegroups Misleading Error Message for Invalid List Elements",
      "target": "troposphere.resourcegroups",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "When a None value is included in a list field that expects strings (e.g., TagFilter.Values), the error message incorrectly suggests the entire field is None rather than indicating a specific list element is invalid.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_resourcegroups_2025-08-19_02-27_raow.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_resourcegroups_2025-08-19_02-27_raow.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.robomaker Missing Required Title Parameter",
      "target": "troposphere.robomaker",
      "severity": "High",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "AWSObject subclasses in troposphere.robomaker require an undocumented 'title' parameter, causing instantiation to fail when following expected API patterns.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_robomaker_2025-08-19_02-23_sg4n.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_robomaker_2025-08-19_02-23_sg4n.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.robomaker Rejects None for Optional Fields",
      "target": "troposphere.robomaker",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Optional fields in troposphere.robomaker classes reject explicit None values despite being marked as optional, violating Python conventions.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_robomaker_2025-08-19_02-24_y707.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_robomaker_2025-08-19_02-24_y707.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.rolesanywhere Validation Inconsistency",
      "target": "troposphere.rolesanywhere",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `validate()` method in troposphere.rolesanywhere classes does not check required properties, but `to_dict()` does, leading to inconsistent validation behavior.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_rolesanywhere_2025-08-19_02-24_ocyd.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_rolesanywhere_2025-08-19_02-24_ocyd.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.route53 Optional Fields Reject None Values",
      "target": "troposphere.route53",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Optional fields in troposphere.route53 classes raise TypeError when explicitly passed None, despite being marked as optional in the props definition. This affects programmatic config generation where optional parameters naturally default to None.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_route53_2025-08-19_02-28_9usa.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_route53_2025-08-19_02-28_9usa.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.route53profiles Validation Methods Inconsistent",
      "target": "troposphere.route53profiles.Profile.validate",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `validate()` method returns None (indicating success) for objects missing required properties, while `to_dict()` correctly raises a validation error for the same objects.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_route53profiles_2025-08-19_02-24_pj3d.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_route53profiles_2025-08-19_02-24_pj3d.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.route53profiles from_dict Cannot Parse to_json Output",
      "target": "troposphere.route53profiles.Profile.from_dict",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `from_dict()` class method cannot parse the JSON structure produced by `to_json()`, violating the expected round-trip property between serialization and deserialization.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_route53profiles_2025-08-19_02-24_q1wl.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_route53profiles_2025-08-19_02-24_q1wl.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.route53recoverycontrol Empty Title Validation Bypass",
      "target": "troposphere.route53recoverycontrol",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Empty string titles bypass validation in troposphere AWS resource classes, allowing creation of resources with invalid empty titles that should be rejected.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_route53recoverycontrol_2025-08-19_02-17_k3n9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_route53recoverycontrol_2025-08-19_02-17_k3n9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.route53recoveryreadiness Round-trip Serialization Failure",
      "target": "troposphere.route53recoveryreadiness.Cell",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `from_dict()` class method cannot deserialize the output of `to_dict()`, breaking the expected round-trip serialization property for AWS CloudFormation resource classes.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_route53recoveryreadiness_roundtrip_2025-08-19_02-24_mrd6.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_route53recoveryreadiness_roundtrip_2025-08-19_02-24_mrd6.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.route53resolver Integer Validator Accepts Floats",
      "target": "troposphere.route53resolver",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer()` validation function incorrectly accepts float values with decimal parts, allowing invalid CloudFormation templates to be generated for properties that require integers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_route53resolver_2025-08-19_02-23_1slz.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_route53resolver_2025-08-19_02-23_1slz.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.s3express Round-Trip and Validation Issues",
      "target": "troposphere.s3express",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Found two related bugs in troposphere.s3express: (1) `from_dict()` cannot accept the full output of `to_dict()`, violating the expected round-trip property, and (2) `validate()` doesn't check required properties while `to_dict()` does, causing inconsistent validation behavior.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_s3express_2025-08-19_02-30_gurm.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_s3express_2025-08-19_02-30_gurm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.s3objectlambda AWSObject Constructor Misleading Signature",
      "target": "troposphere.s3objectlambda.AccessPoint",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "AWSObject subclasses in troposphere.s3objectlambda have a misleading constructor signature where `title` is typed as `Optional[str]` but cannot be omitted when calling the constructor, causing TypeError when properties are passed without the title argument.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_s3objectlambda_2025-08-19_02-27_4xsd.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_s3objectlambda_2025-08-19_02-27_4xsd.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.s3outposts Round-Trip Serialization Failure",
      "target": "troposphere.s3outposts",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `from_dict()` method fails to deserialize the output of `to_dict()` for all AWS resource classes in the troposphere.s3outposts module, breaking round-trip serialization.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_s3outposts_2025-08-19_02-27_fpk9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_s3outposts_2025-08-19_02-27_fpk9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.s3tables Integer Validator Accepts Floats with Fractional Parts",
      "target": "troposphere.s3tables.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer()` validator function incorrectly accepts float values with fractional parts (e.g., 1.5, 2.7) when it should only accept whole numbers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_s3tables_integer_2025-08-19_02-26_3mc4.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_s3tables_integer_2025-08-19_02-26_3mc4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.sagemaker API Inconsistency Between to_dict() and from_dict()",
      "target": "troposphere.sagemaker",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `to_dict()` and `from_dict()` methods have inconsistent APIs: `to_dict()` returns a full CloudFormation resource format with 'Type' and 'Properties' keys, but `from_dict()` expects only the Properties portion, not the full format.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_sagemaker_2025-08-19_02-37_r7rn.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_sagemaker_2025-08-19_02-37_r7rn.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.scheduler Deferred Validation of Required Fields",
      "target": "troposphere.scheduler",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Required field validation in troposphere.scheduler AWSProperty classes is deferred until serialization (`to_dict()`), allowing invalid objects to be created and passed around before failing.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_scheduler_2025-08-19_02-30_311d.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_scheduler_2025-08-19_02-30_311d.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.sdb Round-Trip Serialization Failure",
      "target": "troposphere.sdb.Domain",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `from_dict` method cannot deserialize the output of `to_dict`, violating the expected round-trip property for serialization methods.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_sdb_2025-08-19_02-27_a3b6.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_sdb_2025-08-19_02-27_a3b6.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.secretsmanager Integer Validator Accepts Non-Integers",
      "target": "troposphere.secretsmanager.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer` validator in troposphere.secretsmanager accepts non-integer values like floats, and consequently PasswordLength accepts invalid values including non-integers and non-positive numbers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_secretsmanager_2025-08-19_02-29_rbks.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_secretsmanager_2025-08-19_02-29_rbks.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.securityhub from_dict() Broken for AWSObject Classes",
      "target": "troposphere.securityhub",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `from_dict()` method fails for all AWSObject classes in troposphere.securityhub because it cannot handle the output format of `to_dict()`, breaking round-trip serialization.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_securityhub_from_dict_2025-08-19_02-31_new4.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_securityhub_from_dict_2025-08-19_02-31_new4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.securitylake List Property Mutation Vulnerability",
      "target": "troposphere.securitylake.AwsLogSource",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The AwsLogSource class (and likely other classes) in troposphere.securitylake stores references to mutable list arguments instead of creating copies, allowing external code to modify the object's internal state after creation.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_securitylake_2025-08-19_02-31_4hlk.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_securitylake_2025-08-19_02-31_4hlk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.serverless.boolean() Accepts Float Values",
      "target": "troposphere.serverless.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean()` function incorrectly accepts float values 0.0 and 1.0, converting them to False and True respectively, when it should only accept the documented set of values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_serverless_boolean_2025-08-19_02-30_s42g.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_serverless_boolean_2025-08-19_02-30_s42g.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.serverless.integer() Accepts Non-Integer Floats",
      "target": "troposphere.serverless.integer",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer()` validation function incorrectly accepts non-integer float values like 0.5, 3.14, etc., returning them unchanged instead of raising ValueError. Additionally, it crashes with OverflowError on infinity values instead of ValueError.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_serverless_integer_2025-08-19_02-30_cvtx.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_serverless_integer_2025-08-19_02-30_cvtx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.servicecatalogappregistry Empty String Validation",
      "target": "troposphere.servicecatalogappregistry",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Required string fields in all Service Catalog App Registry resource classes incorrectly accept empty strings and whitespace-only strings, violating CloudFormation's validation requirements.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_servicecatalogappregistry_2025-08-19_02-31_ns07.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_servicecatalogappregistry_2025-08-19_02-31_ns07.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.servicediscovery Accepts Invalid Negative TTL Values",
      "target": "troposphere.servicediscovery.DnsRecord",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `DnsRecord` class accepts negative TTL values, which violate DNS specifications and will be rejected by AWS CloudFormation.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_servicediscovery_negative_ttl_2025-08-19_02-31_mn3f.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_servicediscovery_negative_ttl_2025-08-19_02-31_mn3f.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.servicediscovery Invalid JSON Generation with Non-Finite Values",
      "target": "troposphere.servicediscovery",
      "severity": "High",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `double` validator in troposphere accepts non-finite float values (infinity, -infinity, NaN) which causes the `to_json()` method to generate invalid JSON that violates RFC 7159 and will be rejected by AWS CloudFormation.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_servicediscovery_2025-08-19_02-31_pz4z.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_servicediscovery_2025-08-19_02-31_pz4z.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.ses.boolean Accepts Complex Numbers",
      "target": "troposphere.ses.boolean",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean` validator in troposphere.ses incorrectly accepts complex numbers `0j` and `1+0j`, converting them to `False` and `True` respectively.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_ses_boolean_2025-08-19_02-32_5rnt.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_ses_boolean_2025-08-19_02-32_5rnt.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.shield Title Validation Inconsistency",
      "target": "troposphere.shield",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "Title validation is inconsistent between object initialization and the validate_title() method. Empty string and None titles bypass validation during __init__ but are correctly rejected by validate_title().",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_shield_2025-08-19_02-36_djzx.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_shield_2025-08-19_02-36_djzx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.signer Integer Validation Accepts Non-Integer Floats",
      "target": "troposphere.signer.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer()` validation function incorrectly accepts non-integer float values like 1.5, allowing invalid values to propagate to CloudFormation templates.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_signer_integer_2025-08-19_02-31_982a.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_signer_integer_2025-08-19_02-31_982a.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.simspaceweaver Round-Trip Property Violation",
      "target": "troposphere.simspaceweaver.Simulation",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The round-trip property `from_dict(to_dict(x)) = x` is violated for the Simulation class (and all AWSObject-derived classes). The to_dict() method produces a structure that from_dict() cannot consume.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_simspaceweaver_2025-08-19_02-33_ajd7.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_simspaceweaver_2025-08-19_02-33_ajd7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.sns Boolean String Case Sensitivity Inconsistency",
      "target": "troposphere.sns",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The boolean validator in troposphere accepts 'true'/'false' and 'True'/'False' but rejects 'TRUE'/'FALSE', creating an inconsistent case sensitivity behavior for string-to-boolean conversion.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_sns_2025-08-19_02-34_9d8a.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_sns_2025-08-19_02-34_9d8a.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.ssmcontacts integer() Function Doesn't Convert to Integer",
      "target": "troposphere.ssmcontacts.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer()` function validates that a value can be converted to integer but returns the original value unchanged, allowing float values to pass through to integer-typed CloudFormation fields.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_ssmcontacts_2025-08-19_02-34_k0lp.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_ssmcontacts_2025-08-19_02-34_k0lp.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.ssmincidents Type Handling Issues",
      "target": "troposphere.ssmincidents",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Found multiple type handling inconsistencies in troposphere.ssmincidents: integer() function returns strings instead of integers, boolean() function has case sensitivity issues, and Impact field preserves incorrect types.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_ssmincidents_2025-08-19_02-34_0nn5.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_ssmincidents_2025-08-19_02-34_0nn5.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.ssmquicksetup Round-Trip Serialization Failure",
      "target": "troposphere.ssmquicksetup.ConfigurationManager",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `ConfigurationManager.from_dict()` method cannot deserialize the output of `ConfigurationManager.to_dict()`, violating the fundamental round-trip property that `from_dict(to_dict(x))` should reconstruct the original object.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_ssmquicksetup_2025-08-19_02-35_fh4r.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_ssmquicksetup_2025-08-19_02-35_fh4r.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.sso Title Validation Ignores validation Parameter",
      "target": "troposphere.sso.Application",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `validation=False` parameter in AWSObject constructors does not bypass title validation, preventing creation of CloudFormation resources with non-alphanumeric titles even when validation is explicitly disabled.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_sso_2025-08-19_02-36_25zm.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_sso_2025-08-19_02-36_25zm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.stepfunctions.boolean Accepts Float Values",
      "target": "troposphere.stepfunctions.boolean",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `boolean()` function incorrectly accepts float values 0.0 and 1.0, converting them to False and True respectively, while rejecting other float values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_stepfunctions_boolean_2025-08-19_02-37_hek6.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_stepfunctions_boolean_2025-08-19_02-37_hek6.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.supportapp.boolean Accepts Unintended Numeric Types",
      "target": "troposphere.supportapp.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean` function accepts any numeric type that equals 1 or 0 (floats, complex numbers, Decimals, numpy types) despite the implementation explicitly listing only `[True, 1, \"1\", \"true\", \"True\"]` and `[False, 0, \"0\", \"false\", \"False\"]`.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_supportapp_boolean_2025-08-19_02-36_zndv.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_supportapp_boolean_2025-08-19_02-36_zndv.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.synthetics Unreachable Validation Code",
      "target": "troposphere.BaseAWSObject.validate_title",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `validate_title()` method contains unreachable code due to conditional logic that prevents empty string validation from ever executing.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_synthetics_2025-08-19_02-37_9nu4.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_synthetics_2025-08-19_02-37_9nu4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.systemsmanagersap Round-Trip Serialization Failure",
      "target": "troposphere.systemsmanagersap.Application",
      "severity": "High",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `from_dict()` method cannot deserialize the output of `to_dict()`, violating the fundamental round-trip property that `from_dict(to_dict(x))` should preserve data.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_systemsmanagersap_2025-08-19_02-38_wjgs.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_systemsmanagersap_2025-08-19_02-38_wjgs.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.template_generator Empty Parameters and Outputs Not Preserved",
      "target": "troposphere.template_generator.TemplateGenerator",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "TemplateGenerator fails to preserve empty Parameters and Outputs sections when converting CloudFormation templates, violating round-trip conversion expectations.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_template_generator_2025-08-19_02-38_pywo.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_template_generator_2025-08-19_02-38_pywo.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.template_generator Numeric Property Names Cause AttributeError",
      "target": "troposphere.template_generator.TemplateGenerator",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "TemplateGenerator crashes with AttributeError when CloudFormation templates contain numeric property names (e.g., \"0\", \"1\") in resource Properties.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_template_generator_2025-08-19_02-38_iqzx.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_template_generator_2025-08-19_02-38_iqzx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.timestream.boolean() Incorrectly Accepts Float Values",
      "target": "troposphere.timestream.boolean",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `boolean()` validation function incorrectly accepts float values `0.0` and `1.0`, returning `False` and `True` respectively, when it should raise `ValueError` for all non-boolean/integer/string inputs.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_boolean_2025-08-19_02-37_fiym.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_boolean_2025-08-19_02-37_fiym.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.timestream.integer() Incorrectly Accepts Float Values",
      "target": "troposphere.timestream.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer()` validation function incorrectly accepts float values without raising `ValueError`, returning the float value unchanged when it should only accept integers or integer-convertible strings.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_integer_2025-08-19_02-37_q3xk.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_integer_2025-08-19_02-37_q3xk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.transfer Unicode Digit Validation Bypass",
      "target": "troposphere.transfer.double",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `double()` and `integer()` validation functions accept non-ASCII Unicode digits (e.g., Arabic-Indic digits \u0660-\u0669) and return them unchanged, which would cause AWS CloudFormation to reject or misinterpret the values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_transfer_2025-08-19_02-39_h8ow.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_transfer_2025-08-19_02-39_h8ow.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.utils Type Error in get_events Function",
      "target": "troposphere.utils.get_events",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `get_events` function fails to properly flatten event batches because it appends response objects directly instead of converting them to lists first, causing `sum()` to fail with non-list iterables.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_utils_2025-08-19_02-38_j0if.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_utils_2025-08-19_02-38_j0if.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Boolean Validator Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The boolean validator incorrectly accepts float values 0.0 and 1.0, converting them to False and True respectively, when it should only accept the documented boolean-like values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_2025-08-19_02-12_qb3y.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_2025-08-19_02-12_qb3y.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Boolean Validator Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `boolean()` validator incorrectly accepts float values 0.0 and 1.0, converting them to False and True respectively, when it should only accept specific integer, boolean, and string values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-18_23-41_q2d9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-18_23-41_q2d9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Boolean Validator Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The boolean validator incorrectly accepts float values 0.0 and 1.0, converting them to False and True respectively, when it should only accept the documented integer and string values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_04-36_x9k2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_04-36_x9k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Boolean Validator Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean` validator accepts float values 0.0 and 1.0, converting them to False and True respectively, which violates the expected contract of accepting only specific boolean representations.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_01-49_9c4e.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_01-49_9c4e.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Boolean Validator Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The boolean validator incorrectly accepts float values 1.0 and 0.0, returning True and False respectively, when it should raise ValueError for non-boolean/integer/string inputs.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_02-16_4k0q.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_02-16_4k0q.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Boolean Validator Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The boolean validator incorrectly accepts float values like 0.0 and 1.0 as valid boolean inputs, violating its documented contract of only accepting specific boolean-like values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_01-55_zdgg.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_01-55_zdgg.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Boolean Validator Accepts Floats",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `boolean` validator function incorrectly accepts float values 0.0 and 1.0, despite the function's documentation and implementation clearly listing only specific accepted values that do not include floats.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-18_14-30_a7f2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-18_14-30_a7f2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Boolean Validator Incorrectly Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean` validator function incorrectly accepts float values `0.0` and `1.0` as valid boolean representations due to Python's numeric equality behavior, violating its intended type contract.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_codestar_2025-08-19_00-32_givh.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_codestar_2025-08-19_00-32_givh.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Boolean and Integer Validation Flaws",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `boolean()` validator incorrectly accepts float values 0.0 and 1.0, and the `integer()` validator accepts non-integer float values without proper validation.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_2025-08-19_00-00_a3b2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_2025-08-19_00-00_a3b2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Double Validator Accepts Infinity and NaN",
      "target": "troposphere.validators.double",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `double` validator accepts special float string values like 'Inf', '-Inf', and 'NaN', which cannot be properly serialized to JSON for CloudFormation templates.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_double_2025-08-19_01-49_7b2f.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_double_2025-08-19_01-49_7b2f.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Accepts Float Values",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer` validator in troposphere accepts float values when it should reject them, violating the expected contract of an integer validator.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_00-19_qbwd.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_00-19_qbwd.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Accepts Floats",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The integer validator incorrectly accepts float values, returning them unchanged instead of rejecting them or converting them to integers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_2025-08-19_00-30_coml.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_2025-08-19_00-30_coml.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Accepts Floats Causing Data Loss",
      "target": "troposphere.validators.integer",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer` validator function accepts float values without raising an error, silently passing them through and causing data loss when later converted to integers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_01-49_3ai3.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_01-49_3ai3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Accepts Floats Without Conversion",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer` validator in troposphere accepts float values but returns them unchanged as floats, violating the expected contract that integer-typed properties should contain integer values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_02-07_v4j5.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_02-07_v4j5.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Accepts Non-Integer Float Values",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `integer()` validator incorrectly accepts float values like 1.5, which are not integers, silently allowing data loss when converted to int.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-18_23-41_iflb.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-18_23-41_iflb.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Accepts Non-Integer Floats",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer()` validator function accepts float values with non-zero fractional parts (e.g., 42.7), violating the expectation that it should only validate integer values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_docdb_2025-08-19_00-42_bug1.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_docdb_2025-08-19_00-42_bug1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Accepts Non-Integer Floats",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The integer validator incorrectly accepts non-integer float values like 0.5, silently truncating them when converted to int, which causes data loss.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_integer_validator_2025-08-19_02-13_0rxk.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_integer_validator_2025-08-19_02-13_0rxk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Accepts Non-Integer Floats",
      "target": "troposphere.validators.integer",
      "severity": "High",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `integer()` validator in troposphere accepts float values and passes them through unchanged, violating the contract of an integer validator and producing invalid CloudFormation templates.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_appmesh_2025-08-18_23-43_zbsl.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_appmesh_2025-08-18_23-43_zbsl.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Accepts Non-Integer Floats",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer()` validator function incorrectly accepts float values with decimal parts (e.g., 10.5, 3.14) as valid integers, violating its intended validation purpose.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_00-23_rumw.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_00-23_rumw.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Accepts Non-Integer Floats",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer` validator accepts non-integer float values like 42.5, violating the semantic contract that an \"integer\" validator should only accept whole numbers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_float_2025-08-19_02-31_c9h4.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_float_2025-08-19_02-31_c9h4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Accepts Non-Integer Floats",
      "target": "troposphere.validators.integer",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `integer` validator function incorrectly accepts non-integer float values like 0.5 and 3.14, despite being named `integer` and intended to validate integer values only.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-18_14-31_b3g8.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-18_14-31_b3g8.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Accepts Non-Integer Floats",
      "target": "troposphere.validators.integer",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The integer validator incorrectly accepts non-integer float values like 0.5, 3.14, and -2.7, which silently lose precision when converted to integers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_01-55_zcin.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_01-55_zcin.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Accepts Non-Integer Values",
      "target": "troposphere.validators.integer",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer` validator incorrectly accepts non-integer float and Decimal values, returning them unchanged instead of rejecting them. This violates the validator's contract and can lead to invalid AWS CloudFormation templates.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_06-06_0k3q.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_06-06_0k3q.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Accepts and Returns Float Values",
      "target": "troposphere.validators.integer",
      "severity": "High",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The integer validator accepts float values and returns them as floats instead of converting to integers or rejecting them, violating the expected behavior for integer validation in CloudFormation templates.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_04-36_m3p7.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_04-36_m3p7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Crash on Infinity",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The integer validator crashes with `OverflowError` when given float infinity values instead of raising the expected `ValueError`.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_integer_validator_2025-08-18_23-43_ryl7.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_integer_validator_2025-08-18_23-43_ryl7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Crashes on Infinity",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `integer` validator function crashes with an `OverflowError` when given float infinity instead of raising a `ValueError` as expected.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_01-53_es21.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_01-53_es21.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Overflow",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The integer validator crashes with OverflowError when given float infinity values instead of handling them gracefully.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_integer_overflow_2025-08-18_23-47_mdd4.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_integer_overflow_2025-08-18_23-47_mdd4.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validator Type Inconsistency",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer` validator function in troposphere validates that input can be converted to an integer but returns the original input unchanged, causing string values to remain as strings instead of being converted to integers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_09-45_k3m9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_09-45_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer Validators Don't Convert Floats to Integers",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer` and `positive_integer` validators in troposphere accept float values but fail to convert them to integers, returning the float unchanged. This affects all integer properties across the entire troposphere library.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_2025-08-19_01-43_i4di.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_2025-08-19_01-43_i4di.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Integer and Double Validators Accept Bytes",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer()` and `double()` validators in troposphere incorrectly accept bytes objects, which causes JSON serialization failures when creating CloudFormation templates.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_bytes_2025-08-19_02-04_5mq7.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_bytes_2025-08-19_02-04_5mq7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Poor Error Message in Boolean Validator",
      "target": "troposphere.validators.boolean",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean` validator raises a bare `ValueError` with no error message when given invalid inputs, making debugging difficult for users.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_boolean_2025-08-19_00-41_m5f2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_boolean_2025-08-19_00-41_m5f2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Type Coercion Vulnerabilities",
      "target": "troposphere.validators.boolean",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The boolean, integer, and positive_integer validators in troposphere incorrectly accept float values due to Python's type coercion, with positive_integer accepting negative floats like -0.5, violating fundamental validation contracts.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_2025-08-19_00-35_u3ot.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_2025-08-19_00-35_u3ot.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators Type Preservation Bug",
      "target": "troposphere.validators.integer",
      "severity": "High",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer` and `double` validators do not convert string inputs to their respective numeric types, causing type inconsistency in properties and potential TypeError exceptions during comparisons.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_type_preservation_2025-08-19_02-31_a7f2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_type_preservation_2025-08-19_02-31_a7f2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators boolean() Accepts Floats 0.0 and 1.0",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean()` validator incorrectly accepts float values 0.0 and 1.0, violating its documented contract that only specific boolean-like values should be accepted.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_01-40_y3qs.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_01-40_y3qs.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators integer() Accepts Non-Integer Floats",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer()` validator incorrectly accepts float values like 0.5 and 3.14, violating its contract to validate integer values only.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_02-31_abuu.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_02-31_abuu.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators integer() Incorrectly Accepts Non-Integer Floats",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer()` validator incorrectly accepts float values with fractional parts, silently truncating them. This violates the semantic expectation that an \"integer validator\" should only accept actual integers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_float_2025-08-19_00-39_chjj.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_float_2025-08-19_00-39_chjj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators integer() Raises Wrong Exception Type for Infinity",
      "target": "troposphere.validators.integer",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer()` validator function raises `OverflowError` instead of `ValueError` when given infinity values, violating its error contract that promises to raise `ValueError` for invalid inputs.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_00-36_m2h1.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_00-36_m2h1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators network_port Error Message Inconsistency",
      "target": "troposphere.validators.network_port",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The network_port validator accepts -1 as a valid port number but the error message incorrectly states ports must be \"between 0 and 65535\", creating misleading documentation.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_2025-08-19_00-28_3s0z.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_2025-08-19_00-28_3s0z.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators positive_integer Accepts Zero",
      "target": "troposphere.validators.positive_integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `positive_integer` validator incorrectly accepts 0 as a valid positive integer, when by definition a positive integer should be greater than 0.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_positive_integer_2025-08-19_01-38_oqnw.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_positive_integer_2025-08-19_01-38_oqnw.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators positive_integer accepts zero",
      "target": "troposphere.validators.positive_integer",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `positive_integer` validator incorrectly accepts 0 as a valid positive integer, when mathematically 0 is not positive.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_positive_integer_2025-08-18_23-41_fwno.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_positive_integer_2025-08-18_23-41_fwno.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.autoscaling.validate_int_to_str Raises Wrong Exception Type",
      "target": "troposphere.validators.autoscaling.validate_int_to_str",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `validate_int_to_str` function raises `ValueError` instead of `TypeError` when given a non-numeric string, violating its documented contract behavior.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validate_int_to_str_2025-08-18_23-52_k3m9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validate_int_to_str_2025-08-18_23-52_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Accepts Complex Numbers",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The boolean validator incorrectly accepts complex numbers with zero imaginary parts (e.g., `0j`, `1+0j`) and converts them to boolean values, violating the expected contract of only accepting specific boolean representations.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_boolean_validator_2025-08-19_02-31_fiwv.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_boolean_validator_2025-08-19_02-31_fiwv.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `boolean` validator function incorrectly accepts float values 0.0 and 1.0, converting them to False and True respectively, when it should only accept specific integer and string values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_grafana_2025-08-19_01-42_3q1w.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_grafana_2025-08-19_01-42_3q1w.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean` validator function incorrectly accepts float values (0.0 and 1.0) when it should only accept bool, int, and specific string values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_01-44_0uw6.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_01-44_0uw6.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The boolean validator incorrectly accepts float values 0.0 and 1.0, converting them to False and True respectively, when it should only accept boolean, integer (0/1), and string representations.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_boolean_validator_2025-08-19_02-10_nnah.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_boolean_validator_2025-08-19_02-10_nnah.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `boolean` validator function incorrectly accepts float values 0.0 and 1.0, converting them to False and True respectively, when it should only accept the documented types.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-18_23-42_dn1r.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-18_23-42_dn1r.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Accepts Undocumented Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean` validator function accepts float values 1.0 and 0.0, contradicting its type hints which specify only specific literal values should be accepted.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_02-16_71lm.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_02-16_71lm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Accepts Undocumented Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `boolean` validator function incorrectly accepts float values 0.0 and 1.0, returning False and True respectively, despite these types not being in the documented list of accepted values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_00-40_l8l0.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_00-40_l8l0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Accepts Unintended Numeric Types",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean` validator accepts any numeric type that equals 0 or 1, not just the documented types, due to Python's duck typing and loose equality comparisons.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_boolean_validator_2025-08-19_00-40_13lu.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_boolean_validator_2025-08-19_00-40_13lu.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Accepts Unintended Numeric Types",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean` validator incorrectly accepts float and other numeric types that compare equal to 0 or 1, violating its type contract which explicitly specifies only `bool`, `int`, and `str` types.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_00-40_n730.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_00-40_n730.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Accepts Unintended Numeric Types",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean` validator incorrectly accepts float, Decimal, and complex number types when their values equal 0 or 1, violating its documented contract of only accepting specific bool, int, and string values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_02-41_kj9x.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_02-41_kj9x.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Case Sensitivity Inconsistency",
      "target": "troposphere.validators.boolean",
      "severity": "Low",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The boolean validator accepts \"True\" and \"False\" but rejects \"TRUE\" and \"FALSE\", showing inconsistent case handling.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_02-08_u94l.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_02-08_u94l.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Case Sensitivity Inconsistency",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean` validator function inconsistently handles case variations of \"true\" and \"false\" strings, accepting lowercase and Title case but rejecting UPPERCASE variants.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_02-01_mcef.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_02-01_mcef.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Incorrectly Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `boolean` validator function incorrectly accepts float values `0.0` and `1.0`, converting them to boolean values instead of raising a ValueError as intended.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_02-17_gnh5.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_02-17_gnh5.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Incorrectly Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `boolean` validator function incorrectly accepts float values 0.0 and 1.0, returning False and True respectively, when it should raise a ValueError for all float inputs.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_apptest_2025-08-18_23-44_qzo5.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_apptest_2025-08-18_23-44_qzo5.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Incorrectly Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The boolean validator incorrectly accepts float values 0.0 and 1.0, violating its documented contract of only accepting specific boolean-like values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_02-15_e8u5.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_02-15_e8u5.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Incorrectly Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The boolean validator incorrectly accepts float values 0.0 and 1.0 when it should only accept specific integer and string representations of boolean values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_00-25_k3n9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_00-25_k3n9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Incorrectly Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean()` validator function incorrectly accepts float values 0.0 and 1.0, returning False and True respectively, when it should raise ValueError for all non-specified input types.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_01-49_hsoc.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_01-49_hsoc.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Incorrectly Accepts Float Values",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The boolean validator function incorrectly accepts float values 0.0 and 1.0, treating them as False and True respectively, when it should only accept the specific documented values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_02-00_rj7x.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_02-00_rj7x.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.boolean Raises ValueError Without Message",
      "target": "troposphere.validators.boolean",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `boolean` validator in troposphere raises a bare `ValueError` without any error message when given invalid input, making debugging difficult and inconsistent with other validators like `integer`.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_boolean_2025-08-19_01-57_dt1g.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_boolean_2025-08-19_01-57_dt1g.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.double Raises OverflowError Instead of ValueError",
      "target": "troposphere.validators.double",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `double` validator function raises an uncaught `OverflowError` for very large integers that cannot be converted to float, violating its contract to only raise `ValueError` for invalid inputs.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_double_2025-08-19_02-22_sopx.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_double_2025-08-19_02-22_sopx.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.ec2 validate_clientvpnendpoint_vpnport Error Message Formatting",
      "target": "troposphere.validators.ec2.validate_clientvpnendpoint_vpnport",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `validate_clientvpnendpoint_vpnport` function crashes with a TypeError when attempting to format an error message for invalid port values due to trying to join integers with `str.join()`.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_ec2_2025-08-19_06-05_i7u1.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_ec2_2025-08-19_06-05_i7u1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.ec2 validate_int_to_str Inconsistent Error Types",
      "target": "troposphere.validators.ec2.validate_int_to_str",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `validate_int_to_str` function raises ValueError for invalid string inputs instead of the expected TypeError, causing inconsistent error handling behavior.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_ec2_2025-08-19_06-05_rt1i.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_ec2_2025-08-19_06-05_rt1i.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.iam Multiple Validation Bugs",
      "target": "troposphere.validators.iam",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "Found three bugs in troposphere IAM validators: incorrect error message for group names, and format string bugs in path and user name validators.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_iam_2025-08-19_01-47_0s5e.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_iam_2025-08-19_01-47_0s5e.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.integer Accepts Float Values",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The integer validator incorrectly accepts float values, including non-integer floats like 0.5, when it should only accept integers and string representations of integers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_integer_validator_2025-08-19_02-11_ic1z.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_integer_validator_2025-08-19_02-11_ic1z.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.integer Accepts Float Values",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer()` validator function incorrectly accepts float values with decimal parts, returning them unchanged instead of raising a ValueError as expected for non-integer inputs.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_02-02_4dne.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_02-02_4dne.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.integer Accepts Float Values",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `integer()` validator function incorrectly accepts float values without raising an error, violating its intended purpose of validating integer inputs.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-18_23-46_2hdy.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-18_23-46_2hdy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.integer Accepts Non-Integer Floats",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer` validator accepts float values with fractional parts (e.g., 1.1, 2.5) without raising an error, violating the contract implied by its name and potentially causing issues in CloudFormation templates.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_kinesisvideo_2025-08-19_01-56_mjnc.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_kinesisvideo_2025-08-19_01-56_mjnc.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.integer Accepts Non-Integer Types",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `integer()` validator function incorrectly accepts boolean and float values without raising exceptions, returning them unchanged instead of validating that inputs are actual integers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-18_23-46_642e.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-18_23-46_642e.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.integer Inconsistent Error Handling for Infinity",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The integer validator function raises OverflowError instead of the expected ValueError when given infinity values, creating inconsistent error handling behavior.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_02-15_16ei.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_02-15_16ei.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.integer OverflowError on Infinity",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `integer` validator function crashes with an unhandled `OverflowError` when given float infinity values, instead of raising the expected `ValueError`.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-18_02-32_k8j2.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-18_02-32_k8j2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.integer OverflowError on Infinity",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `integer()` validator function crashes with OverflowError when given float infinity values instead of raising the expected ValueError.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_02-08_hhmk.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_02-08_hhmk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.integer OverflowError on Infinity Values",
      "target": "troposphere.validators.integer",
      "severity": "Low",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `integer()` validator function raises `OverflowError` instead of the expected `ValueError` when given float infinity values, breaking exception handling consistency.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_02-32_l46n.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_02-32_l46n.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.integer OverflowError with Infinity",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `integer` validator function crashes with an unhandled OverflowError when given float infinity values, causing property validation to fail unexpectedly instead of raising a proper ValueError.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_00-25_m5ym.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_00-25_m5ym.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.integer OverflowError with Infinity Values",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `integer` validator function raises `OverflowError` instead of `ValueError` when given infinity values, causing inconsistent error handling.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_ivschat_2025-08-19_14-45_k3n9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_ivschat_2025-08-19_14-45_k3n9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.integer Raises OverflowError Instead of ValueError",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `integer` validator function raises `OverflowError` when given float infinity values instead of the expected `ValueError`, breaking error handling consistency.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_01-45_m9rb.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_01-45_m9rb.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.integer Returns Wrong Type",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-01-19",
      "summary": "The `integer()` validator function returns the original input type instead of converting it to an integer, causing float values to pass through unconverted when they should be converted to integers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-01-19_14-30_x7j9.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-01-19_14-30_x7j9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.integer Type Inconsistency",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `integer` validator function doesn't convert valid numeric strings to integers, returning strings unchanged instead, causing type inconsistency in CloudFormation templates.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-18_23-43_xk9p.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-18_23-43_xk9p.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.integer crashes on infinity values",
      "target": "troposphere.validators.integer",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `integer` validator function crashes with an unhandled `OverflowError` when given float infinity values, instead of properly raising a `ValueError` as expected.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_integer_2025-08-19_02-35_k9x3.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_integer_2025-08-19_02-35_k9x3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.json_checker Rejects Valid JSON Lists",
      "target": "troposphere.validators.json_checker",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `json_checker` function incorrectly rejects Python lists, even though lists are valid JSON structures. It accepts JSON arrays as strings but not as Python lists, creating an inconsistent API.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_json_checker_2025-08-19_02-39_wrd1.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_json_checker_2025-08-19_02-39_wrd1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.network_port Contract Violation",
      "target": "troposphere.validators.network_port",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `network_port` validator function has an inconsistency between its error message and actual validation logic. The error message states ports \"must been between 0 and 65535\" but the implementation accepts -1 as valid. Additionally, the error message contains a typo (\"been\" should be \"be\").",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_network_port_2025-08-19_00-40_bmhf.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_network_port_2025-08-19_00-40_bmhf.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.network_port Error Message Issues",
      "target": "troposphere.validators.network_port",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `network_port` function has two issues in its error message: (1) grammatical error \"must been\" instead of \"must be\", and (2) incorrect range specification saying \"between 0 and 65535\" when -1 is actually valid.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_network_port_typo_2025-08-19_06-07_wcb3.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_network_port_typo_2025-08-19_06-07_wcb3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.positive_integer Accepts Negative Floats",
      "target": "troposphere.validators.positive_integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `positive_integer` function incorrectly accepts negative float values that truncate to non-negative integers, violating its contract to only accept positive (non-negative) integers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_positive_integer_2025-08-19_02-39_tyd7.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_positive_integer_2025-08-19_02-39_tyd7.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.ssm None Value Handling",
      "target": "troposphere.validators.ssm.validate_document_content",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `validate_document_content` function crashes with `TypeError` when given `None` as input, instead of gracefully handling it and raising the expected `ValueError`.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_ssm_none_handling_2025-08-19_02-37_psxd.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_ssm_none_handling_2025-08-19_02-37_psxd.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.ssm YAML ReaderError Not Handled",
      "target": "troposphere.validators.ssm.validate_document_content",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `validate_document_content` function crashes with `yaml.reader.ReaderError` when given strings containing special characters, instead of gracefully handling them and raising the expected `ValueError`.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_ssm_yaml_error_2025-08-19_02-37_cbhg.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_ssm_yaml_error_2025-08-19_02-37_cbhg.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.validators.tags_or_list Rejects Dictionary Input",
      "target": "troposphere.validators.tags_or_list",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-18",
      "summary": "The `tags_or_list()` validator function rejects dictionary inputs, even though CloudFormation commonly uses dictionaries to represent tags, causing valid tag configurations to fail validation.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_validators_tags_2025-08-18_23-46_0trk.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_validators_tags_2025-08-18_23-46_0trk.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.voiceid Title Validation Too Restrictive",
      "target": "troposphere.voiceid.Domain",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `Domain` class (and other AWS resource classes) reject valid CloudFormation resource names that contain hyphens, underscores, colons, and other common characters, only accepting alphanumeric titles.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_voiceid_2025-08-19_02-40_k36g.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_voiceid_2025-08-19_02-40_k36g.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.vpclattice Integer Validator Type Inconsistency",
      "target": "troposphere.vpclattice",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer` validator function in troposphere accepts non-integer inputs (strings and floats) but doesn't convert them to integers, causing type inconsistencies in CloudFormation templates.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_vpclattice_2025-08-19_02-40_i27x.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_vpclattice_2025-08-19_02-40_i27x.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.waf no_validation() Method Doesn't Disable Validation",
      "target": "troposphere.waf.Action",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `no_validation()` method in troposphere AWS resource classes sets `do_validation = False` but validation still occurs during attribute assignment, making the method ineffective.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_waf_2025-08-19_02-44_bqyr.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_waf_2025-08-19_02-44_bqyr.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.wafregional API Contract Violation",
      "target": "troposphere.wafregional",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "All AWSObject classes in troposphere.wafregional require an undocumented `title` parameter in their constructor, violating the API contract defined by their `props` dictionaries.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_wafregional_2025-08-19_02-41_5k6j.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_wafregional_2025-08-19_02-41_5k6j.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.wisdom.double Tuple Formatting Error",
      "target": "troposphere.wisdom.double",
      "severity": "Low",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `double` function produces incorrect error messages when given single-element tuples as input due to a Python string formatting bug.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_wisdom_double_2025-08-19_02-41_1poj.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_wisdom_double_2025-08-19_02-41_1poj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.workspaces Round-Trip Property Violation",
      "target": "troposphere.workspaces",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `to_dict()` and `from_dict()` methods in AWSObject classes (Workspace, ConnectionAlias, WorkspacesPool) violate the round-trip property: `from_dict(title, obj.to_dict())` fails because `to_dict()` wraps properties in a 'Properties' key while `from_dict()` expects unwrapped properties.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_workspaces_2025-08-19_02-43_5tyj.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_workspaces_2025-08-19_02-43_5tyj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.workspacesthinclient Integer Validator Accepts Fractional Floats",
      "target": "troposphere.workspacesthinclient.integer",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `integer()` validation function incorrectly accepts fractional float values (e.g., 0.5, 1.9) when it should only accept whole numbers.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_workspacesthinclient_integer_2025-08-19_02-42_ywpr.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_workspacesthinclient_integer_2025-08-19_02-42_ywpr.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.workspacesweb double() Accepts Non-JSON-Serializable Types",
      "target": "troposphere.workspacesweb.double",
      "severity": "Medium",
      "bug_type": "Contract",
      "date": "2025-08-19",
      "summary": "The `double()` validator function accepts bytes and bytearray objects, which causes JSON serialization to fail when these values are used in AWS CloudFormation template properties.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_workspacesweb_2025-08-19_02-43_78sy.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_workspacesweb_2025-08-19_02-43_78sy.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.xray from_dict Cannot Parse to_dict Output",
      "target": "troposphere.xray.Group.from_dict",
      "severity": "High",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `from_dict()` method cannot parse the output of `to_dict()`, breaking the expected round-trip property for AWS resource serialization.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_xray_from_dict_2025-08-19_02-43_x1ry.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_xray_from_dict_2025-08-19_02-43_x1ry.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "troposphere.xray integer() Crashes on Infinity",
      "target": "troposphere.xray.integer",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `integer()` validation function raises `OverflowError` instead of the expected `ValueError` when given float infinity values.",
      "package": "troposphere",
      "file_name": "bug_report_troposphere_xray_integer_2025-08-19_02-43_96s3.md",
      "file_path": "opus-4.1/troposphere/bug_reports/bug_report_troposphere_xray_integer_2025-08-19_02-43_96s3.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tabulate Pipe Character Causes Column Misalignment",
      "target": "tabulate.tabulate",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "When data contains pipe characters ('|'), several table formats (pipe, grid, orgtbl) produce misaligned columns because the pipe characters in data are not escaped or properly handled.",
      "package": "types-tabulate",
      "file_name": "bug_report_tabulate_pipe_character_misalignment_2025-08-18_20-03_y9ee.md",
      "file_path": "opus-4.1/types-tabulate/bug_reports/bug_report_tabulate_pipe_character_misalignment_2025-08-18_20-03_y9ee.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "tabulate String 'True' and 'False' Parsing Error",
      "target": "tabulate.tabulate",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The tabulate library crashes with a ValueError when attempting to format data containing the strings 'True' or 'False' (with capital first letter) in mixed-type columns.",
      "package": "types-tabulate",
      "file_name": "bug_report_tabulate_true_false_parsing_2025-08-18_20-03_6irj.md",
      "file_path": "opus-4.1/types-tabulate/bug_reports/bug_report_tabulate_true_false_parsing_2025-08-18_20-03_6irj.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "Flask Config.get_namespace Key Collision Due to Case Folding",
      "target": "flask.Config.get_namespace",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "Flask's `Config.get_namespace()` method with `lowercase=True` (the default) causes silent data loss when configuration keys with the same prefix differ only in case, as it collapses them into a single lowercase key.",
      "package": "urllib",
      "file_name": "bug_report_flask_config_get_namespace_2025-08-18_04-49_8nnm.md",
      "file_path": "opus-4.1/urllib/bug_reports/bug_report_flask_config_get_namespace_2025-08-18_04-49_8nnm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "urllib.error Exception Classes Cannot Be Pickled",
      "target": "urllib.error.URLError",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "All three exception classes in urllib.error fail to properly support pickling: URLError loses its filename attribute, HTTPError cannot be unpickled at all, and ContentTooShortError cannot be unpickled.",
      "package": "urllib",
      "file_name": "bug_report_urllib_error_pickling_2025-08-18_04-48_do4a.md",
      "file_path": "opus-4.1/urllib/bug_reports/bug_report_urllib_error_pickling_2025-08-18_04-48_do4a.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "urllib.error Pickling Issues",
      "target": "urllib.error.URLError",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "URLError and ContentTooShortError do not properly support pickling, causing loss of the filename attribute in URLError and complete failure to unpickle ContentTooShortError.",
      "package": "urllib",
      "file_name": "bug_report_urllib_error_2025-08-18_04-46_07gu.md",
      "file_path": "opus-4.1/urllib/bug_reports/bug_report_urllib_error_2025-08-18_04-46_07gu.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "urllib.parse Empty Value Data Loss in Query String Round-Trip",
      "target": "urllib.parse.urlencode",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The round-trip of encoding and decoding query strings loses data when values are empty strings, violating the expected property that `parse_qs(urlencode(data))` should preserve all keys from the original data.",
      "package": "urllib",
      "file_name": "bug_report_urllib_parse_2025-08-18_04-50_zs0q.md",
      "file_path": "opus-4.1/urllib/bug_reports/bug_report_urllib_parse_2025-08-18_04-50_zs0q.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "urllib.parse Round-Trip Failure with Whitespace in Netloc",
      "target": "urllib.parse.urlparse",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `urlparse`/`urlunparse` round-trip fails when the netloc component contains certain whitespace characters (`\\n`, `\\r`, `\\t`), as these characters are silently removed during parsing, violating the expected round-trip property.",
      "package": "urllib",
      "file_name": "bug_report_urllib_parse_2025-08-18_04-49_cpcd.md",
      "file_path": "opus-4.1/urllib/bug_reports/bug_report_urllib_parse_2025-08-18_04-49_cpcd.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "urllib.request.parse_http_list Incorrectly Handles Escaped Backslashes",
      "target": "urllib.request.parse_http_list",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `parse_http_list` function incorrectly consumes backslashes that are followed by non-quote characters in quoted strings, violating RFC 2068 escaping rules.",
      "package": "urllib",
      "file_name": "bug_report_urllib_request_parse_http_list_2025-08-18_04-47_6yx9.md",
      "file_path": "opus-4.1/urllib/bug_reports/bug_report_urllib_request_parse_http_list_2025-08-18_04-47_6yx9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "urllib.request.parse_keqv_list IndexError on Empty Values",
      "target": "urllib.request.parse_keqv_list",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `parse_keqv_list` function crashes with IndexError when processing key=value pairs that have empty values (e.g., \"key=\").",
      "package": "urllib",
      "file_name": "bug_report_urllib_request_parse_keqv_list_2025-08-18_04-47_mi0v.md",
      "file_path": "opus-4.1/urllib/bug_reports/bug_report_urllib_request_parse_keqv_list_2025-08-18_04-47_mi0v.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "urllib.robotparser Double URL Encoding in RuleLine",
      "target": "urllib.robotparser.RuleLine",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The RuleLine class in urllib.robotparser double-encodes URL paths when a RuleLine is created with an already-encoded path, causing incorrect path matching behavior.",
      "package": "urllib",
      "file_name": "bug_report_urllib_robotparser_2025-08-18_04-47_sky0.md",
      "file_path": "opus-4.1/urllib/bug_reports/bug_report_urllib_robotparser_2025-08-18_04-47_sky0.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "uuid Module clock_seq Property Returns Incorrect Values for Non-RFC 4122 UUIDs",
      "target": "uuid.UUID.clock_seq",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-18",
      "summary": "The `UUID.clock_seq` property incorrectly applies RFC 4122 bit masking to all UUID variants, causing it to return wrong values for non-RFC 4122 UUIDs (NCS, Microsoft, and Future variants).",
      "package": "uuid",
      "file_name": "bug_report_uuid_clock_seq_2025-08-18_04-57_ash1.md",
      "file_path": "opus-4.1/uuid/bug_reports/bug_report_uuid_clock_seq_2025-08-18_04-57_ash1.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "webcolors Scientific Notation in Percent Values",
      "target": "webcolors.rgb_percent_to_rgb",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-18",
      "summary": "The `rgb_percent_to_rgb` function crashes when processing percentage values in scientific notation without a decimal point (e.g., '5e-324%'), even though CSS supports scientific notation in numeric values.",
      "package": "webcolors",
      "file_name": "bug_report_webcolors_2025-08-18_23-07_quzm.md",
      "file_path": "opus-4.1/webcolors/bug_reports/bug_report_webcolors_2025-08-18_23-07_quzm.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "SQLiteTrie Empty String Path Construction Failure",
      "target": "sqltrie.sqlite.SQLiteTrie",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "SQLiteTrie fails to correctly handle keys containing consecutive empty strings due to improper path construction in SQL queries, resulting in KeyError when retrieving values.",
      "package": "yq",
      "file_name": "bug_report_sqltrie_sqlite_2025-08-19_03-03_7fk5.md",
      "file_path": "opus-4.1/yq/bug_reports/bug_report_sqltrie_sqlite_2025-08-19_03-03_7fk5.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "yq UnboundLocalError When jq Not Found",
      "target": "yq.yq",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The yq.yq() function raises UnboundLocalError instead of a helpful error message when the jq executable is not found or not on PATH.",
      "package": "yq",
      "file_name": "bug_report_yq_2025-08-19_03-11_fx0o.md",
      "file_path": "opus-4.1/yq/bug_reports/bug_report_yq_2025-08-19_03-11_fx0o.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "yq decode_docs Function Skips Characters Between JSON Documents",
      "target": "yq.decode_docs",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `decode_docs` function in yq incorrectly advances the parsing position by `pos + 1` instead of `pos`, causing it to skip a character between JSON documents and potentially miss valid JSON when documents are back-to-back.",
      "package": "yq",
      "file_name": "bug_report_yq_decode_docs_2025-08-19_00-00_x9k2.md",
      "file_path": "opus-4.1/yq/bug_reports/bug_report_yq_decode_docs_2025-08-19_00-00_x9k2.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "yq.loader.get_loader Global State Mutation",
      "target": "yq.loader.get_loader",
      "severity": "Medium",
      "bug_type": "Logic",
      "date": "2025-08-19",
      "summary": "The `get_loader()` function in yq.loader modifies global class state, causing different calls with different parameters to interfere with each other.",
      "package": "yq",
      "file_name": "bug_report_yq_loader_2025-08-19_02-52_k3m9.md",
      "file_path": "opus-4.1/yq/bug_reports/bug_report_yq_loader_2025-08-19_02-52_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    },
    {
      "title": "yq.yq UnboundLocalError when jq is not installed",
      "target": "yq.yq",
      "severity": "Medium",
      "bug_type": "Crash",
      "date": "2025-08-19",
      "summary": "The `yq.yq()` function raises an `UnboundLocalError` instead of a proper error message when the `jq` command is not installed or available on PATH.",
      "package": "yq",
      "file_name": "bug_report_yq_yq_2025-08-19_18-29_k3m9.md",
      "file_path": "opus-4.1/yq/bug_reports/bug_report_yq_yq_2025-08-19_18-29_k3m9.md",
      "score": null,
      "bug_status": {
        "status": "unknown",
        "url": ""
      }
    }
  ],
  "stats": {
    "total_reports": 984,
    "packages": 95,
    "severity_counts": {
      "Medium": 725,
      "Low": 154,
      "High": 105
    },
    "bug_type_counts": {
      "Contract": 343,
      "Logic": 441,
      "Crash": 200
    },
    "package_counts": {
      "addict": 1,
      "aiogram": 12,
      "aiohttp-retry": 5,
      "argcomplete": 7,
      "awkward": 11,
      "aws-lambda-powertools": 12,
      "azure-mgmt-appconfiguration": 4,
      "base64": 2,
      "base64io": 1,
      "beautifulsoup4": 8,
      "click": 11,
      "cloudformation-cli-java-plugin": 5,
      "cloudscraper": 4,
      "collections": 3,
      "copier": 12,
      "coremltools": 4,
      "cryptography": 5,
      "cython": 18,
      "dagster-pandas": 4,
      "dagster-postgres": 5,
      "dataclasses": 1,
      "datadog-checks-base": 2,
      "datetime": 1,
      "decimal": 2,
      "diskcache": 6,
      "django": 14,
      "django-log-request-id": 4,
      "django-simple-history": 6,
      "djangorestframework-api-key": 2,
      "dparse": 7,
      "esp-idf-monitor": 2,
      "fire": 33,
      "fixit": 9,
      "flask": 18,
      "functools": 3,
      "google-cloud-recaptcha-enterprise": 7,
      "grpc-stubs": 6,
      "html": 3,
      "htmldate": 9,
      "inquirerpy": 11,
      "isal": 4,
      "isort": 28,
      "json": 6,
      "jurigged": 8,
      "langchain-perplexity": 2,
      "limits": 4,
      "lml": 6,
      "lxml": 6,
      "mdxpy": 4,
      "multi-key-dict": 1,
      "numpy": 15,
      "optax": 11,
      "orbax-checkpoint": 3,
      "packaging": 10,
      "pandas": 11,
      "pathlib": 2,
      "pdfkit": 7,
      "praw": 4,
      "py-money": 3,
      "pyatlan": 12,
      "pycld2": 1,
      "pyct": 4,
      "pydantic": 24,
      "pyramid": 34,
      "pyspnego": 9,
      "pytest-pretty": 1,
      "python-dateutil": 11,
      "python-http-client": 2,
      "python-quickbooks": 8,
      "rarfile": 2,
      "re": 2,
      "requests": 15,
      "requests-oauthlib": 6,
      "scipy": 23,
      "sentinels": 1,
      "singledispatch": 1,
      "slack": 2,
      "spacy-wordnet": 3,
      "sphinxcontrib-mermaid": 6,
      "sqlalchemy": 16,
      "sqltrie": 6,
      "srsly": 8,
      "statistics": 1,
      "storage3": 3,
      "sudachipy": 5,
      "testpath": 7,
      "tokenizers": 12,
      "tqdm": 12,
      "trino": 12,
      "troposphere": 303,
      "types-tabulate": 2,
      "urllib": 8,
      "uuid": 1,
      "webcolors": 1,
      "yq": 5
    }
  }
}